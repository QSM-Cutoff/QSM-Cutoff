
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************


*****************************************************************************************************

	[Synthesize Rmin]: ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1

*****************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.ivy -s acceptor=1,proposer=1 -f 1 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm simple-election.acceptor_1_proposer_1.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_1_proposer_1.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_1_proposer_1.finite.cpp simple-election.acceptor_1_proposer_1.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_1_proposer_1.finite.o simple-election.acceptor_1_proposer_1.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 5

[FW NOTE]: number of interpreted atoms (e.g. member,le): 1

[FW NOTE]: number of branching actions: 3

[FW NOTE]: symmetric group order: 1

[QRM NOTE]: Time elapsed since start: 6.495 seconds

[QRM NOTE]: Time elapsed since last: 6.495 seconds

[QRM NOTE]: Peak memory: 1179216 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 3

[FW NOTE]: number of total reachable states:        4

[FW NOTE]: number of dfs representative states:     4

[FW NOTE]: number of dfs non-representative states: 0


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1]

====================================================================================================================

sort: acceptor=['acceptor0']
sort: proposer=['proposer0']
sort: quorum=['quorum__acceptor0']
predicate: member('acceptor', 'quorum')
predicate: start('proposer',)
predicate: didNotPromise('acceptor',)
predicate: promise('acceptor', 'proposer')
predicate: chosenAt('quorum', 'proposer')
predicate: leader('proposer',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0)': '1'}
state atoms: ['chosenAt(quorum__acceptor0,proposer0)', 'didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor0,proposer0)', 'start(proposer0)']
representative states : 17, 19, 39, 47


=== State Orbit 0 =====================
size : 1
repr state: 01000
lex min decimal: 17
states:
01000




=== State Orbit 1 =====================
size : 1
repr state: 01001
lex min decimal: 19
states:
01001




=== State Orbit 2 =====================
size : 1
repr state: 10011
lex min decimal: 39
states:
10011




=== State Orbit 3 =====================
size : 1
repr state: 10111
lex min decimal: 47
states:
10111



[QRM NOTE]: Time elapsed since start: 6.574 seconds

[QRM NOTE]: Time elapsed since last: 0.078 seconds

[QRM NOTE]: Peak memory: 1206049 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 6.581 seconds

[QRM NOTE]: Time elapsed since last: 0.007 seconds

[QRM NOTE]: Peak memory: 156066 bytes


====================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1]

====================================================================================================================


===============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1]

===============================================================================================================


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : 00---
0     : ['~chosenAt(quorum__acceptor0,proposer0)', '~didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : -0--0
1     : ['~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 1
num_suborbits: 1
2 (*) : 11---
2     : ['chosenAt(quorum__acceptor0,proposer0)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 1
num_suborbits: 1
3 (*) : -1-1-
3     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 1
num_suborbits: 1
4 (*) : 0--1-
4     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 1
num_suborbits: 1
5 (*) : 1---0
5     : ['chosenAt(quorum__acceptor0,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 1
num_suborbits: 1
6 (*) : ---10
6     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 1
num_suborbits: 1
7 (*) : --1-0
7     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 1
num_suborbits: 1
8 (*) : 0-1--
8     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 1
num_suborbits: 1
9 (*) : -11--
9     : ['didNotPromise(acceptor0)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
10 (*) : --10-
10     : ['leader(proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 1
num_suborbits: 1
11 (*) : 1--0-
11     : ['chosenAt(quorum__acceptor0,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 1
num_suborbits: 1
12 (*) : -0-0-
12     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 13

[PRIME NOTE]: number of orbits before merging: 13

[PRIME NOTE]: number of primes: 13

[QRM NOTE]: Time elapsed since start: 6.591 seconds

[QRM NOTE]: Time elapsed since last: 0.010 seconds

[QRM NOTE]: Peak memory: 1232833 bytes


=========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1]

=========================================================================================================

definition primes: {0, 2, 3, 4, 11, 12}


New level: 0
 pending : [1, 5, 6, 7, 8, 9, 10]
 solution : []


Before reduction : 
 pending  : [1, 5, 6, 7, 8, 9, 10]
 solution : []

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 16), (8, 4), (9, 4), (10, 4), (11, -1), (12, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 5, 6, 7, 8, 9, 10]
 solution : []

[QRM NOTE]: Time elapsed since start: 6.596 seconds

[QRM NOTE]: Time elapsed since last: 0.004 seconds

[QRM NOTE]: Peak memory: 185180 bytes


=============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1]

=============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : -0--0
1     : ['~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~start(proposer0)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0',))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0',))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0',))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0',)): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0',)): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~start(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0',)), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0',)),), 'start': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0',)): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0',)): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0',)))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | didNotPromise(ACCEPTOR0)


---------- Quantifier Inference: orbit 1 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 5 =====================
size : 1
num_suborbits: 1
5 (*) : 1---0
5     : ['chosenAt(quorum__acceptor0,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0', EnumeratedSort('quorum', ('quorum__acceptor0',))), Const('proposer0', EnumeratedSort('proposer', ('proposer0',))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('quorum__acceptor0', EnumeratedSort('quorum', ('quorum__acceptor0',))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0', EnumeratedSort('quorum', ('quorum__acceptor0',))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0',)): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0',)): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0,proposer0)', '~start(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0',)), EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0',)), EnumeratedSort('proposer', ('proposer0',))), 'start': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0',)): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0',)): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0',))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0',))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)


---------- Quantifier Inference: orbit 5 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 6 =====================
size : 1
num_suborbits: 1
6 (*) : ---10
6     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0',))), Const('proposer0', EnumeratedSort('proposer', ('proposer0',))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0',))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0',))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0',)): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0',)): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer0)', '~start(proposer0)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0',)), EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0',)), EnumeratedSort('proposer', ('proposer0',))), 'start': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0',)): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0',)): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0',))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)


---------- Quantifier Inference: orbit 6 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 7 =====================
size : 1
num_suborbits: 1
7 (*) : --1-0
7     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~start(proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0',)),), 'start': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)


---------- Quantifier Inference: orbit 7 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 8 =====================
size : 1
num_suborbits: 1
8 (*) : 0-1--
8     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0,proposer0)', 'leader(proposer0)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0', EnumeratedSort('quorum', ('quorum__acceptor0',))), Const('proposer0', EnumeratedSort('proposer', ('proposer0',))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('quorum__acceptor0', EnumeratedSort('quorum', ('quorum__acceptor0',))): [quorum$1$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0', EnumeratedSort('quorum', ('quorum__acceptor0',))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0',)): [quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0',)): quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0,proposer0)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0',)), EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0',)), EnumeratedSort('proposer', ('proposer0',))), 'leader': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0',)): [quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0',)): quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$1$chosenAt$0': quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0',))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0',))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0)


---------- Quantifier Inference: orbit 8 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 9 =====================
size : 1
num_suborbits: 1
9 (*) : -11--
9     : ['didNotPromise(acceptor0)', 'leader(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0',))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0',))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0',))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0',)): [acceptor$0$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0',)): acceptor$0$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0',)), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0',)),), 'leader': (EnumeratedSort('proposer', ('proposer0',)),)}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0',)): [acceptor$0$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0',)): acceptor$0$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0',)))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0)


---------- Quantifier Inference: orbit 9 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
10 (*) : --10-
10     : ['leader(proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~promise(acceptor0,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0',))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0',))), Const('proposer0', EnumeratedSort('proposer', ('proposer0',))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0',))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0',))): [acceptor$1$promise$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0',))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0',)): [acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0',)): acceptor$1$promise$0$0}

part_sig: ('acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~promise(acceptor0,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0',)), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0',)), EnumeratedSort('proposer', ('proposer0',)), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0',)),), 'promise': (EnumeratedSort('acceptor', ('acceptor0',)), EnumeratedSort('proposer', ('proposer0',)))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0',)): [proposer$0$leader$0$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0',)): [acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0',)): proposer$0$leader$0$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0',)): acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0',))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0)


---------- Quantifier Inference: orbit 10 ----------

[QI_CHECK RESULT]: PASS


=======================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1]

=======================================================================================================================


=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : -0--0
1     : ['~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | didNotPromise(ACCEPTOR0)
qcost : 4




=== Prime Orbit 5 =====================
size : 1
num_suborbits: 1
5 (*) : 1---0
5     : ['chosenAt(quorum__acceptor0,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)
qcost : 4




=== Prime Orbit 6 =====================
size : 1
num_suborbits: 1
6 (*) : ---10
6     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 7 =====================
size : 1
num_suborbits: 1
7 (*) : --1-0
7     : ['leader(proposer0)', '~start(proposer0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)
qcost : 3




=== Prime Orbit 8 =====================
size : 1
num_suborbits: 1
8 (*) : 0-1--
8     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0,proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall QUORUM0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0)
qcost : 4




=== Prime Orbit 9 =====================
size : 1
num_suborbits: 1
9 (*) : -11--
9     : ['didNotPromise(acceptor0)', 'leader(proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0)
qcost : 4




=== Prime Orbit 10 =====================
size : 1
num_suborbits: 1
10 (*) : --10-
10     : ['leader(proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0)
qcost : 4



[QRM NOTE]: Time elapsed since start: 6.690 seconds

[QRM NOTE]: Time elapsed since last: 0.094 seconds

[QRM NOTE]: Peak memory: 1853808 bytes


======================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1]

======================================================================================================


New level: 1
 pending : [1, 5, 6, 7, 8, 9, 10]
 solution : []


Before reduction : 
 pending  : [1, 5, 6, 7, 8, 9, 10]
 solution : []

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 16), (8, 4), (9, 4), (10, 4), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 16), (8, 4), (9, 4), (10, 4), (11, -1), (12, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [1, 5, 6, 7, 8, 9, 10]
 solution : []


Solution : [] has cost 0.


Decide in level 1 among pending : [1, 5, 6, 7, 8, 9, 10]

Coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 16), (8, 4), (9, 4), (10, 4), (11, -1), (12, -1)]

Decide 7 with phase True at level 1

After decision at level 1
 pending : [1, 5, 6, 8, 9, 10]
 solution : [7]


New level: 2
 pending : [1, 5, 6, 8, 9, 10]
 solution : [7]


Before reduction : 
 pending  : [1, 5, 6, 8, 9, 10]
 solution : [7]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, 16), (8, 4), (9, 4), (10, 4), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 2), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, 2), (9, 2), (10, 2), (11, -1), (12, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [1, 5, 6, 8, 9, 10]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 2 among pending : [1, 5, 6, 8, 9, 10]

Coverage : [(0, -1), (1, 2), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, 2), (9, 2), (10, 2), (11, -1), (12, -1)]

Decide 1 with phase True at level 2

After decision at level 2
 pending : [5, 6, 8, 9, 10]
 solution : [7, 1]


New level: 3
 pending : [5, 6, 8, 9, 10]
 solution : [7, 1]


Before reduction : 
 pending  : [5, 6, 8, 9, 10]
 solution : [7, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, 2), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, 2), (9, 2), (10, 2), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 2), (9, 2), (10, 2), (11, -1), (12, -1)]

Covered at level 3 : {5, 6}

After reduction : 
 pending  : [8, 9, 10]
 solution : [7, 1]


Before reduction : 
 pending  : [8, 9, 10]
 solution : [7, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 2), (9, 2), (10, 2), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 2), (10, 2), (11, -1), (12, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [8, 9, 10]
 solution : [7, 1]


Solution : [7, 1] has cost 7.


Decide in level 3 among pending : [8, 9, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 2), (10, 2), (11, -1), (12, -1)]

Decide 8 with phase True at level 3

After decision at level 3
 pending : [9, 10]
 solution : [7, 1, 8]


New level: 4
 pending : [9, 10]
 solution : [7, 1, 8]


Before reduction : 
 pending  : [9, 10]
 solution : [7, 1, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 2), (10, 2), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1)]

Covered at level 4 : {9, 10}

After reduction : 
 pending  : []
 solution : [7, 1, 8]


Before reduction : 
 pending  : []
 solution : [7, 1, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [7, 1, 8]


Solution : [7, 1, 8] has cost 11.


Before backtrack at level 4
 pending : []
 solution : [7, 1, 8]

After backtrack at level 4
 pending : [9, 10]
 solution : [7, 1, 8]


Invert decision for 8 at level 3


New level: 4
 pending : [9, 10]
 solution : [7, 1]


Before reduction : 
 pending  : [9, 10]
 solution : [7, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 2), (10, 2), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [9, 10]
 solution : [7, 1]


Solution : [7, 1] has cost 7.


Decide in level 4 among pending : [9, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 2), (10, 2), (11, -1), (12, -1)]

Decide 9 with phase True at level 4

After decision at level 4
 pending : [10]
 solution : [7, 1, 9]


New level: 5
 pending : [10]
 solution : [7, 1, 9]


Before reduction : 
 pending  : [10]
 solution : [7, 1, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 2), (10, 2), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1)]

Covered at level 5 : {10}

After reduction : 
 pending  : []
 solution : [7, 1, 9]


Before reduction : 
 pending  : []
 solution : [7, 1, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 1, 9]


Solution : [7, 1, 9] has cost 11.


Before backtrack at level 5
 pending : []
 solution : [7, 1, 9]

After backtrack at level 5
 pending : [10]
 solution : [7, 1, 9]


Invert decision for 9 at level 4


New level: 5
 pending : [10]
 solution : [7, 1]


Before reduction : 
 pending  : [10]
 solution : [7, 1]

Essensial at level 5 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 1, 10]


Before reduction : 
 pending  : []
 solution : [7, 1, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 1, 10]


Solution : [7, 1, 10] has cost 11.


Before backtrack at level 5
 pending : []
 solution : [7, 1, 10]

After backtrack at level 5
 pending : [10]
 solution : [7, 1]


Before backtrack at level 4
 pending : [10]
 solution : [7, 1]

After backtrack at level 4
 pending : [10, 9]
 solution : [7, 1]


Before backtrack at level 3
 pending : [10, 9]
 solution : [7, 1]

After backtrack at level 3
 pending : [10, 9, 5, 6, 8]
 solution : [7, 1]


Invert decision for 1 at level 2


New level: 3
 pending : [10, 9, 5, 6, 8]
 solution : [7]


Before reduction : 
 pending  : [10, 9, 5, 6, 8]
 solution : [7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, 2), (9, 2), (10, 2), (11, -1), (12, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [10, 9, 5, 6, 8]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 3 among pending : [10, 9, 5, 6, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, 2), (9, 2), (10, 2), (11, -1), (12, -1)]

Decide 10 with phase True at level 3

After decision at level 3
 pending : [9, 5, 6, 8]
 solution : [7, 10]


New level: 4
 pending : [9, 5, 6, 8]
 solution : [7, 10]


Before reduction : 
 pending  : [9, 5, 6, 8]
 solution : [7, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, 2), (9, 2), (10, 2), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : {8, 9}

After reduction : 
 pending  : [5, 6]
 solution : [7, 10]


Before reduction : 
 pending  : [5, 6]
 solution : [7, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [5, 6]
 solution : [7, 10]


Solution : [7, 10] has cost 7.


Decide in level 4 among pending : [5, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Decide 5 with phase True at level 4

After decision at level 4
 pending : [6]
 solution : [7, 10, 5]


New level: 5
 pending : [6]
 solution : [7, 10, 5]


Before reduction : 
 pending  : [6]
 solution : [7, 10, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {6}

After reduction : 
 pending  : []
 solution : [7, 10, 5]


Before reduction : 
 pending  : []
 solution : [7, 10, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 5]


Solution : [7, 10, 5] has cost 11.


Before backtrack at level 5
 pending : []
 solution : [7, 10, 5]

After backtrack at level 5
 pending : [6]
 solution : [7, 10, 5]


Invert decision for 5 at level 4


New level: 5
 pending : [6]
 solution : [7, 10]


Before reduction : 
 pending  : [6]
 solution : [7, 10]

Essensial at level 5 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 6]


Before reduction : 
 pending  : []
 solution : [7, 10, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [7, 10, 6]


Solution : [7, 10, 6] has cost 11.


Before backtrack at level 5
 pending : []
 solution : [7, 10, 6]

After backtrack at level 5
 pending : [6]
 solution : [7, 10]


Before backtrack at level 4
 pending : [6]
 solution : [7, 10]

After backtrack at level 4
 pending : [6, 9, 8, 5]
 solution : [7, 10]


Invert decision for 10 at level 3


New level: 4
 pending : [6, 9, 8, 5]
 solution : [7]


Before reduction : 
 pending  : [6, 9, 8, 5]
 solution : [7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [6, 9, 8, 5]
 solution : [7]


Solution : [7] has cost 3.


Decide in level 4 among pending : [6, 9, 8, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

Decide 6 with phase True at level 4

After decision at level 4
 pending : [9, 8, 5]
 solution : [7, 6]


New level: 5
 pending : [9, 8, 5]
 solution : [7, 6]


Before reduction : 
 pending  : [9, 8, 5]
 solution : [7, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 2), (6, 2), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {5}

After reduction : 
 pending  : [9, 8]
 solution : [7, 6]


Before reduction : 
 pending  : [9, 8]
 solution : [7, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [9, 8]
 solution : [7, 6]


Solution : [7, 6] has cost 7.


Decide in level 5 among pending : [9, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

Decide 9 with phase True at level 5

After decision at level 5
 pending : [8]
 solution : [7, 6, 9]


New level: 6
 pending : [8]
 solution : [7, 6, 9]


Before reduction : 
 pending  : [8]
 solution : [7, 6, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : {8}

After reduction : 
 pending  : []
 solution : [7, 6, 9]


Before reduction : 
 pending  : []
 solution : [7, 6, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [7, 6, 9]


Solution : [7, 6, 9] has cost 11.


Before backtrack at level 6
 pending : []
 solution : [7, 6, 9]

After backtrack at level 6
 pending : [8]
 solution : [7, 6, 9]


Invert decision for 9 at level 5


New level: 6
 pending : [8]
 solution : [7, 6]


Before reduction : 
 pending  : [8]
 solution : [7, 6]

Essensial at level 6 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [7, 6, 8]


Before reduction : 
 pending  : []
 solution : [7, 6, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [7, 6, 8]


Solution : [7, 6, 8] has cost 11.


Before backtrack at level 6
 pending : []
 solution : [7, 6, 8]

After backtrack at level 6
 pending : [8]
 solution : [7, 6]


Before backtrack at level 5
 pending : [8]
 solution : [7, 6]

After backtrack at level 5
 pending : [8, 5, 9]
 solution : [7, 6]


Invert decision for 6 at level 4


New level: 5
 pending : [8, 5, 9]
 solution : [7]


Before reduction : 
 pending  : [8, 5, 9]
 solution : [7]

Essensial at level 5 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [8, 9]
 solution : [7, 5]


Before reduction : 
 pending  : [8, 9]
 solution : [7, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [8, 9]
 solution : [7, 5]


Solution : [7, 5] has cost 7.


Decide in level 5 among pending : [8, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

Decide 8 with phase True at level 5

After decision at level 5
 pending : [9]
 solution : [7, 5, 8]


New level: 6
 pending : [9]
 solution : [7, 5, 8]


Before reduction : 
 pending  : [9]
 solution : [7, 5, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 2), (9, 2), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : {9}

After reduction : 
 pending  : []
 solution : [7, 5, 8]


Before reduction : 
 pending  : []
 solution : [7, 5, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [7, 5, 8]


Solution : [7, 5, 8] has cost 11.


Before backtrack at level 6
 pending : []
 solution : [7, 5, 8]

After backtrack at level 6
 pending : [9]
 solution : [7, 5, 8]


Invert decision for 8 at level 5


New level: 6
 pending : [9]
 solution : [7, 5]


Before reduction : 
 pending  : [9]
 solution : [7, 5]

Essensial at level 6 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [7, 5, 9]


Before reduction : 
 pending  : []
 solution : [7, 5, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [7, 5, 9]


Solution : [7, 5, 9] has cost 11.


Before backtrack at level 6
 pending : []
 solution : [7, 5, 9]

After backtrack at level 6
 pending : [9]
 solution : [7, 5]


Before backtrack at level 5
 pending : [9]
 solution : [7, 5]

After backtrack at level 5
 pending : [9, 5, 8]
 solution : [7]


Before backtrack at level 4
 pending : [9, 5, 8]
 solution : [7]

After backtrack at level 4
 pending : [9, 5, 8, 6]
 solution : [7]


Before backtrack at level 3
 pending : [9, 5, 8, 6]
 solution : [7]

After backtrack at level 3
 pending : [9, 5, 8, 6, 10]
 solution : [7]


Before backtrack at level 2
 pending : [9, 5, 8, 6, 10]
 solution : [7]

After backtrack at level 2
 pending : [9, 5, 8, 6, 10, 1]
 solution : [7]


Invert decision for 7 at level 1


New level: 2
 pending : [9, 5, 8, 6, 10, 1]
 solution : []


Before reduction : 
 pending  : [9, 5, 8, 6, 10, 1]
 solution : []

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 4), (9, 4), (10, 4), (11, -1), (12, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [9, 5, 8, 6, 10, 1]
 solution : []


Solution : [] has cost 0.


Decide in level 2 among pending : [9, 5, 8, 6, 10, 1]

Coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 4), (9, 4), (10, 4), (11, -1), (12, -1)]

Decide 9 with phase True at level 2

After decision at level 2
 pending : [5, 8, 6, 10, 1]
 solution : [9]


New level: 3
 pending : [5, 8, 6, 10, 1]
 solution : [9]


Before reduction : 
 pending  : [5, 8, 6, 10, 1]
 solution : [9]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 4), (9, 4), (10, 4), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1)]

Covered at level 3 : {8, 10}

After reduction : 
 pending  : [5, 6, 1]
 solution : [9]


Before reduction : 
 pending  : [5, 6, 1]
 solution : [9]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 0), (9, -1), (10, 0), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [5, 6, 1]
 solution : [9]


Solution : [9] has cost 4.


Decide in level 3 among pending : [5, 6, 1]

Coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Decide 5 with phase True at level 3

After decision at level 3
 pending : [6, 1]
 solution : [9, 5]


New level: 4
 pending : [6, 1]
 solution : [9, 5]


Before reduction : 
 pending  : [6, 1]
 solution : [9, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : {1, 6}

After reduction : 
 pending  : []
 solution : [9, 5]


Before reduction : 
 pending  : []
 solution : [9, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [9, 5]


Solution : [9, 5] has cost 8.


Before backtrack at level 4
 pending : []
 solution : [9, 5]

After backtrack at level 4
 pending : [6, 1]
 solution : [9, 5]


Invert decision for 5 at level 3


New level: 4
 pending : [6, 1]
 solution : [9]


Before reduction : 
 pending  : [6, 1]
 solution : [9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, -1), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [6, 1]
 solution : [9]


Solution : [9] has cost 4.


Decide in level 4 among pending : [6, 1]

Coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, -1), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Decide 6 with phase True at level 4

After decision at level 4
 pending : [1]
 solution : [9, 6]


New level: 5
 pending : [1]
 solution : [9, 6]


Before reduction : 
 pending  : [1]
 solution : [9, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, -1), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {1}

After reduction : 
 pending  : []
 solution : [9, 6]


Before reduction : 
 pending  : []
 solution : [9, 6]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [9, 6]


Solution : [9, 6] has cost 8.


Before backtrack at level 5
 pending : []
 solution : [9, 6]

After backtrack at level 5
 pending : [1]
 solution : [9, 6]


Invert decision for 6 at level 4


New level: 5
 pending : [1]
 solution : [9]


Before reduction : 
 pending  : [1]
 solution : [9]

Essensial at level 5 : {1}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [9, 1]


Before reduction : 
 pending  : []
 solution : [9, 1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [9, 1]


Solution : [9, 1] has cost 8.


Before backtrack at level 5
 pending : []
 solution : [9, 1]

After backtrack at level 5
 pending : [1]
 solution : [9]


Before backtrack at level 4
 pending : [1]
 solution : [9]

After backtrack at level 4
 pending : [1, 6]
 solution : [9]


Before backtrack at level 3
 pending : [1, 6]
 solution : [9]

After backtrack at level 3
 pending : [1, 6, 8, 10, 5]
 solution : [9]


Invert decision for 9 at level 2


New level: 3
 pending : [1, 6, 8, 10, 5]
 solution : []


Before reduction : 
 pending  : [1, 6, 8, 10, 5]
 solution : []

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [1, 6, 8, 10, 5]
 solution : []


Solution : [] has cost 0.


Decide in level 3 among pending : [1, 6, 8, 10, 5]

Coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1)]

Decide 1 with phase True at level 3

After decision at level 3
 pending : [6, 8, 10, 5]
 solution : [1]


New level: 4
 pending : [6, 8, 10, 5]
 solution : [1]


Before reduction : 
 pending  : [6, 8, 10, 5]
 solution : [1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1)]

Covered at level 4 : {5, 6}

After reduction : 
 pending  : [8, 10]
 solution : [1]


Before reduction : 
 pending  : [8, 10]
 solution : [1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [8, 10]
 solution : [1]


Solution : [1] has cost 4.


Decide in level 4 among pending : [8, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1)]

Decide 8 with phase True at level 4

After decision at level 4
 pending : [10]
 solution : [1, 8]


New level: 5
 pending : [10]
 solution : [1, 8]


Before reduction : 
 pending  : [10]
 solution : [1, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1)]

Covered at level 5 : {10}

After reduction : 
 pending  : []
 solution : [1, 8]


Before reduction : 
 pending  : []
 solution : [1, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [1, 8]


Solution : [1, 8] has cost 8.


Before backtrack at level 5
 pending : []
 solution : [1, 8]

After backtrack at level 5
 pending : [10]
 solution : [1, 8]


Invert decision for 8 at level 4


New level: 5
 pending : [10]
 solution : [1]


Before reduction : 
 pending  : [10]
 solution : [1]

Essensial at level 5 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [1, 10]


Before reduction : 
 pending  : []
 solution : [1, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [1, 10]


Solution : [1, 10] has cost 8.


Before backtrack at level 5
 pending : []
 solution : [1, 10]

After backtrack at level 5
 pending : [10]
 solution : [1]


Before backtrack at level 4
 pending : [10]
 solution : [1]

After backtrack at level 4
 pending : [10, 6, 5, 8]
 solution : [1]


Invert decision for 1 at level 3


New level: 4
 pending : [10, 6, 5, 8]
 solution : []


Before reduction : 
 pending  : [10, 6, 5, 8]
 solution : []

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [10, 6, 5, 8]
 solution : []


Solution : [] has cost 0.


Decide in level 4 among pending : [10, 6, 5, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1)]

Decide 10 with phase True at level 4

After decision at level 4
 pending : [6, 5, 8]
 solution : [10]


New level: 5
 pending : [6, 5, 8]
 solution : [10]


Before reduction : 
 pending  : [6, 5, 8]
 solution : [10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 4), (9, -1), (10, 4), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {8}

After reduction : 
 pending  : [6, 5]
 solution : [10]


Before reduction : 
 pending  : [6, 5]
 solution : [10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 5]
 solution : [10]


Solution : [10] has cost 4.


Decide in level 5 among pending : [6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Decide 6 with phase True at level 5

After decision at level 5
 pending : [5]
 solution : [10, 6]


New level: 6
 pending : [5]
 solution : [10, 6]


Before reduction : 
 pending  : [5]
 solution : [10, 6]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : {5}

After reduction : 
 pending  : []
 solution : [10, 6]


Before reduction : 
 pending  : []
 solution : [10, 6]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [10, 6]


Solution : [10, 6] has cost 8.


Before backtrack at level 6
 pending : []
 solution : [10, 6]

After backtrack at level 6
 pending : [5]
 solution : [10, 6]


Invert decision for 6 at level 5


New level: 6
 pending : [5]
 solution : [10]


Before reduction : 
 pending  : [5]
 solution : [10]

Essensial at level 6 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [10, 5]


Before reduction : 
 pending  : []
 solution : [10, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [10, 5]


Solution : [10, 5] has cost 8.


Before backtrack at level 6
 pending : []
 solution : [10, 5]

After backtrack at level 6
 pending : [5]
 solution : [10]


Before backtrack at level 5
 pending : [5]
 solution : [10]

After backtrack at level 5
 pending : [5, 8, 6]
 solution : [10]


Invert decision for 10 at level 4


New level: 5
 pending : [5, 8, 6]
 solution : []


Before reduction : 
 pending  : [5, 8, 6]
 solution : []

Essensial at level 5 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 6]
 solution : [8]


Before reduction : 
 pending  : [5, 6]
 solution : [8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 6]
 solution : [8]


Solution : [8] has cost 4.


Decide in level 5 among pending : [5, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Decide 5 with phase True at level 5

After decision at level 5
 pending : [6]
 solution : [8, 5]


New level: 6
 pending : [6]
 solution : [8, 5]


Before reduction : 
 pending  : [6]
 solution : [8, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 4), (6, 4), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : {6}

After reduction : 
 pending  : []
 solution : [8, 5]


Before reduction : 
 pending  : []
 solution : [8, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [8, 5]


Solution : [8, 5] has cost 8.


Before backtrack at level 6
 pending : []
 solution : [8, 5]

After backtrack at level 6
 pending : [6]
 solution : [8, 5]


Invert decision for 5 at level 5


New level: 6
 pending : [6]
 solution : [8]


Before reduction : 
 pending  : [6]
 solution : [8]

Essensial at level 6 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [8, 6]


Before reduction : 
 pending  : []
 solution : [8, 6]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [8, 6]


Solution : [8, 6] has cost 8.


Before backtrack at level 6
 pending : []
 solution : [8, 6]

After backtrack at level 6
 pending : [6]
 solution : [8]


Before backtrack at level 5
 pending : [6]
 solution : [8]

After backtrack at level 5
 pending : [6, 8, 5]
 solution : []


Before backtrack at level 4
 pending : [6, 8, 5]
 solution : []

After backtrack at level 4
 pending : [6, 8, 5, 10]
 solution : []


Before backtrack at level 3
 pending : [6, 8, 5, 10]
 solution : []

After backtrack at level 3
 pending : [6, 8, 5, 10, 1]
 solution : []


Before backtrack at level 2
 pending : [6, 8, 5, 10, 1]
 solution : []

After backtrack at level 2
 pending : [6, 8, 5, 10, 1, 9]
 solution : []


Before backtrack at level 1
 pending : [6, 8, 5, 10, 1, 9]
 solution : []

After backtrack at level 1
 pending : [6, 8, 5, 10, 1, 9, 7]
 solution : []


=====================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1]

=====================================================================================================================

[MIN NOTE]: number of minimal solution found: 9

[MIN NOTE]: total qcost: 8

[MIN NOTE]: maximum branch and bound depth: 6

Definitions (length=2)

invariant [def_didNotPromise] didNotPromise(A) = forall P. ~promise(A,P) # definition

invariant [def_chosenAt] chosenAt(Q,P) = forall A. member(A,Q) -> promise(A,P) # definition

Equality Relations (length=0)

Solution 0 : [9, 5] (length = 2)

invariant [invar_9] forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) # qcost: 4

invariant [invar_5] forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0) # qcost: 4




Solution 1 : [9, 6] (length = 2)

invariant [invar_9] forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) # qcost: 4

invariant [invar_6] forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4




Solution 2 : [9, 1] (length = 2)

invariant [invar_9] forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) # qcost: 4

invariant [invar_1] forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | didNotPromise(ACCEPTOR0) # qcost: 4




Solution 3 : [1, 8] (length = 2)

invariant [invar_1] forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | didNotPromise(ACCEPTOR0) # qcost: 4

invariant [invar_8] forall QUORUM0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) # qcost: 4




Solution 4 : [1, 10] (length = 2)

invariant [invar_1] forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | didNotPromise(ACCEPTOR0) # qcost: 4

invariant [invar_10] forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) # qcost: 4




Solution 5 : [10, 6] (length = 2)

invariant [invar_10] forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) # qcost: 4

invariant [invar_6] forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4




Solution 6 : [10, 5] (length = 2)

invariant [invar_10] forall PROPOSER0,ACCEPTOR0. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) # qcost: 4

invariant [invar_5] forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0) # qcost: 4




Solution 7 : [8, 5] (length = 2)

invariant [invar_8] forall QUORUM0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) # qcost: 4

invariant [invar_5] forall QUORUM0,PROPOSER0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0) # qcost: 4




Solution 8 : [8, 6] (length = 2)

invariant [invar_8] forall QUORUM0,PROPOSER0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) # qcost: 4

invariant [invar_6] forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4




[QRM NOTE]: Time elapsed since start: 6.955 seconds

[QRM NOTE]: Time elapsed since last: 0.265 seconds

[QRM NOTE]: Peak memory: 1847948 bytes


========================================================================================================================

	[MIN_CHECK] Minimization Sanity Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1]

========================================================================================================================

Minimization check for Solution 0

[MIN_CHECK RESULT]: PASS

Minimization check for Solution 1

[MIN_CHECK RESULT]: PASS

Minimization check for Solution 2

[MIN_CHECK RESULT]: PASS

Minimization check for Solution 3

[MIN_CHECK RESULT]: PASS

Minimization check for Solution 4

[MIN_CHECK RESULT]: PASS

Minimization check for Solution 5

[MIN_CHECK RESULT]: PASS

Minimization check for Solution 6

[MIN_CHECK RESULT]: PASS

Minimization check for Solution 7

[MIN_CHECK RESULT]: PASS

Minimization check for Solution 8

[MIN_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 6.977 seconds

[QRM NOTE]: Time elapsed since last: 0.022 seconds

[QRM NOTE]: Peak memory: 803727 bytes


=========================================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1]

=========================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 65: invar_9
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 66: invar_5

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 65: invar_9 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 66: invar_5 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 65: invar_9 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 66: invar_5 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 66: invar_5 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 66: invar_5 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy: line 49: assumption

error: failed checks: 1
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 65: invar_9
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 66: invar_6

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 65: invar_9 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 66: invar_6 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 65: invar_9 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 66: invar_6 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 66: invar_6 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 66: invar_6 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy: line 49: assumption

error: failed checks: 1
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 65: invar_9
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 66: invar_1

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 65: invar_9 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 66: invar_1 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 65: invar_9 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 66: invar_1 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 66: invar_1 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 65: invar_9 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 66: invar_1 ... FAIL

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy: line 49: assumption

error: failed checks: 2
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 65: invar_1
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 66: invar_8

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 65: invar_1 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 66: invar_8 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 65: invar_1 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 66: invar_8 ... FAIL
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 65: invar_1 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 66: invar_8 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 65: invar_1 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 66: invar_8 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy: line 49: assumption

error: failed checks: 2
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 65: invar_1
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 66: invar_10

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 65: invar_1 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 66: invar_10 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 65: invar_1 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 66: invar_10 ... FAIL
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 65: invar_1 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 66: invar_10 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 65: invar_1 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 66: invar_10 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy: line 49: assumption

error: failed checks: 2
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 65: invar_10
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 66: invar_6

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 65: invar_10 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 66: invar_6 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 65: invar_10 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 66: invar_6 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 65: invar_10 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 66: invar_6 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 65: invar_10 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 66: invar_6 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy: line 49: assumption

error: failed checks: 1
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 65: invar_10
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 66: invar_5

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 65: invar_10 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 66: invar_5 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 65: invar_10 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 66: invar_5 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 65: invar_10 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 66: invar_5 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 65: invar_10 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 66: invar_5 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy: line 49: assumption

error: failed checks: 1
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 65: invar_8
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 66: invar_5

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 65: invar_8 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 66: invar_5 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 65: invar_8 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 66: invar_5 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 66: invar_5 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 66: invar_5 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy: line 49: assumption

error: failed checks: 1
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 65: invar_8
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 66: invar_6

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 65: invar_8 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 66: invar_6 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 65: invar_8 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 66: invar_6 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 66: invar_6 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 65: invar_8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 66: invar_6 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy: line 49: assumption

error: failed checks: 1
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

[QRM NOTE]: Time elapsed since start: 24.281 seconds

[QRM NOTE]: Time elapsed since last: 17.304 seconds

[QRM NOTE]: Peak memory: 855927 bytes


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_1.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_1.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_1.finite.cpp simple-election.acceptor_3_proposer_1.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_1.finite.o simple-election.acceptor_3_proposer_1.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 11

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: number of branching actions: 7

[FW NOTE]: symmetric group order: 6

[QRM NOTE]: Time elapsed since start: 7.137 seconds

[QRM NOTE]: Time elapsed since last: 7.137 seconds

[QRM NOTE]: Peak memory: 1185243 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 5

[FW NOTE]: number of total reachable states:        13

[FW NOTE]: number of dfs representative states:     7

[FW NOTE]: number of dfs non-representative states: 6


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: chosenAt('quorum', 'proposer')
predicate: member('acceptor', 'quorum')
predicate: start('proposer',)
predicate: didNotPromise('acceptor',)
predicate: promise('acceptor', 'proposer')
predicate: leader('proposer',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', 'start(proposer0)']
representative states : 115115, 115627, 54187, 200619, 925611, 933803, 208811


=== State Orbit 0 =====================
size : 1
repr state: 00011100000
lex min decimal: 115115
states:
00011100000




=== State Orbit 1 =====================
size : 1
repr state: 00011100001
lex min decimal: 115627
states:
00011100001




=== State Orbit 2 =====================
size : 3
repr state: 00001101001
lex min decimal: 54187
states:
00010100101
00011000011
00001101001




=== State Orbit 3 =====================
size : 3
repr state: 10000101101
lex min decimal: 200619
states:
00110000111
01001001011
10000101101




=== State Orbit 4 =====================
size : 1
repr state: 11100001111
lex min decimal: 925611
states:
11100001111




=== State Orbit 5 =====================
size : 1
repr state: 11100011111
lex min decimal: 933803
states:
11100011111




=== State Orbit 6 =====================
size : 3
repr state: 10000111101
lex min decimal: 208811
states:
10000111101
00110010111
01001011011



[QRM NOTE]: Time elapsed since start: 7.222 seconds

[QRM NOTE]: Time elapsed since last: 0.085 seconds

[QRM NOTE]: Peak memory: 1218880 bytes


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 53675, binary: 00001101000

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 7.299 seconds

[QRM NOTE]: Time elapsed since last: 0.077 seconds

[QRM NOTE]: Peak memory: 214070 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.0.ivy -s acceptor=1,proposer=2 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=2]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm simple-election.acceptor_1_proposer_2.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_1_proposer_2.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_1_proposer_2.finite.cpp simple-election.acceptor_1_proposer_2.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_1_proposer_2.finite.o simple-election.acceptor_1_proposer_2.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 9

[FW NOTE]: number of interpreted atoms (e.g. member,le): 1

[FW NOTE]: number of branching actions: 6

[FW NOTE]: symmetric group order: 2

[QRM NOTE]: Time elapsed since start: 6.187 seconds

[QRM NOTE]: Time elapsed since last: 6.187 seconds

[QRM NOTE]: Peak memory: 1179773 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 4

[FW NOTE]: number of total reachable states:        12

[FW NOTE]: number of dfs representative states:     7

[FW NOTE]: number of dfs non-representative states: 5


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=2]

====================================================================================================================

sort: acceptor=['acceptor0']
sort: proposer=['proposer0', 'proposer1']
sort: quorum=['quorum__acceptor0']
predicate: start('proposer',)
predicate: member('acceptor', 'quorum')
predicate: promise('acceptor', 'proposer')
predicate: leader('proposer',)
predicate: chosenAt('quorum', 'proposer')
predicate: didNotPromise('acceptor',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0)': '1'}
state atoms: ['chosenAt(quorum__acceptor0,proposer0)', 'chosenAt(quorum__acceptor0,proposer1)', 'didNotPromise(acceptor0)', 'leader(proposer0)', 'leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'start(proposer0)', 'start(proposer1)']
representative states : 129, 131, 135, 271, 303, 267, 299


=== State Orbit 0 =====================
size : 1
repr state: 001000000
lex min decimal: 129
states:
001000000




=== State Orbit 1 =====================
size : 2
repr state: 001000010
lex min decimal: 131
states:
001000001
001000010




=== State Orbit 2 =====================
size : 1
repr state: 001000011
lex min decimal: 135
states:
001000011




=== State Orbit 3 =====================
size : 2
repr state: 100001011
lex min decimal: 271
states:
010000111
100001011




=== State Orbit 4 =====================
size : 2
repr state: 100101011
lex min decimal: 303
states:
010010111
100101011




=== State Orbit 5 =====================
size : 2
repr state: 100001010
lex min decimal: 267
states:
010000101
100001010




=== State Orbit 6 =====================
size : 2
repr state: 100101010
lex min decimal: 299
states:
100101010
010010101



[QRM NOTE]: Time elapsed since start: 6.266 seconds

[QRM NOTE]: Time elapsed since last: 0.078 seconds

[QRM NOTE]: Peak memory: 1211053 bytes


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 895, binary: 110111111

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 6.283 seconds

[QRM NOTE]: Time elapsed since last: 0.018 seconds

[QRM NOTE]: Peak memory: 173068 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Representatitive states in reachability not in Rmin

{208811}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.099 seconds

[QRM NOTE]: Time elapsed since last: 0.099 seconds

[QRM NOTE]: Peak memory: 52839 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.1.ivy -s acceptor=1,proposer=2 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 895, binary: 110111111

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.042 seconds

[QRM NOTE]: Time elapsed since last: 0.042 seconds

[QRM NOTE]: Peak memory: 17076 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Representatitive states in reachability not in Rmin

{208811}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.101 seconds

[QRM NOTE]: Time elapsed since last: 0.101 seconds

[QRM NOTE]: Peak memory: 52647 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.2.ivy -s acceptor=1,proposer=2 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 895, binary: 110111111

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.041 seconds

[QRM NOTE]: Time elapsed since last: 0.041 seconds

[QRM NOTE]: Peak memory: 16212 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Representatitive states in reachability not in Rmin

{208811}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.107 seconds

[QRM NOTE]: Time elapsed since last: 0.107 seconds

[QRM NOTE]: Peak memory: 52759 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.3.ivy -s acceptor=1,proposer=2 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 895, binary: 110111111

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.038 seconds

[QRM NOTE]: Time elapsed since last: 0.038 seconds

[QRM NOTE]: Peak memory: 16700 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Representatitive states in reachability not in Rmin

{208811}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.097 seconds

[QRM NOTE]: Time elapsed since last: 0.097 seconds

[QRM NOTE]: Peak memory: 52815 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.4.ivy -s acceptor=1,proposer=2 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 895, binary: 110111111

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.050 seconds

[QRM NOTE]: Time elapsed since last: 0.050 seconds

[QRM NOTE]: Peak memory: 16652 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Representatitive states in reachability not in Rmin

{208811}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.098 seconds

[QRM NOTE]: Time elapsed since last: 0.098 seconds

[QRM NOTE]: Peak memory: 52703 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.5.ivy -s acceptor=1,proposer=2 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 895, binary: 110111111

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.036 seconds

[QRM NOTE]: Time elapsed since last: 0.036 seconds

[QRM NOTE]: Peak memory: 16980 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 53675, binary: 00001101000

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.094 seconds

[QRM NOTE]: Time elapsed since last: 0.094 seconds

[QRM NOTE]: Peak memory: 52759 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.6.ivy -s acceptor=1,proposer=2 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 895, binary: 110111111

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.041 seconds

[QRM NOTE]: Time elapsed since last: 0.041 seconds

[QRM NOTE]: Peak memory: 17132 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 53675, binary: 00001101000

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.093 seconds

[QRM NOTE]: Time elapsed since last: 0.093 seconds

[QRM NOTE]: Peak memory: 52703 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.7.ivy -s acceptor=1,proposer=2 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 895, binary: 110111111

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.039 seconds

[QRM NOTE]: Time elapsed since last: 0.039 seconds

[QRM NOTE]: Peak memory: 17068 bytes

next size: acceptor=3,proposer=2


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=1

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy -s acceptor=3,proposer=1 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=1]

=========================================================================================================================================

Representatitive states in reachability not in Rmin

{208811}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.099 seconds

[QRM NOTE]: Time elapsed since last: 0.099 seconds

[QRM NOTE]: Peak memory: 52647 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_1_proposer_1.8.ivy -s acceptor=1,proposer=2 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=1,proposer=2]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 895, binary: 110111111

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 0.038 seconds

[QRM NOTE]: Time elapsed since last: 0.038 seconds

[QRM NOTE]: Peak memory: 16916 bytes

next size: acceptor=3,proposer=2


*****************************************************************************************************

	[Synthesize Rmin]: ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2

*****************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.ivy -s acceptor=3,proposer=2 -f 1 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_2.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_2.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_2.finite.cpp simple-election.acceptor_3_proposer_2.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_2.finite.o simple-election.acceptor_3_proposer_2.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 19

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: number of branching actions: 14

[FW NOTE]: symmetric group order: 12

[QRM NOTE]: Time elapsed since start: 6.256 seconds

[QRM NOTE]: Time elapsed since last: 6.256 seconds

[QRM NOTE]: Peak memory: 1185520 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 6

[FW NOTE]: number of total reachable states:        66

[FW NOTE]: number of dfs representative states:     16

[FW NOTE]: number of dfs non-representative states: 50


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: didNotPromise('acceptor',)
predicate: start('proposer',)
predicate: leader('proposer',)
predicate: member('acceptor', 'quorum')
predicate: chosenAt('quorum', 'proposer')
predicate: promise('acceptor', 'proposer')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'start(proposer0)', 'start(proposer1)']
representative states : 3670443, 3670955, 3671979, 1607595, 6303659, 88125355, 88256427, 4272043, 4403115, 6434731, 575403, 1606571, 6302635, 88124331, 88255403, 6433707


=== State Orbit 0 =====================
size : 1
repr state: 0000001110000000000
lex min decimal: 3670443
states:
0000001110000000000




=== State Orbit 1 =====================
size : 2
repr state: 0000001110000000010
lex min decimal: 3670955
states:
0000001110000000010
0000001110000000001




=== State Orbit 2 =====================
size : 1
repr state: 0000001110000000011
lex min decimal: 3671979
states:
0000001110000000011




=== State Orbit 3 =====================
size : 6
repr state: 0000000110010000011
lex min decimal: 1607595
states:
0000001010000010011
0000000110001000011
0000000110010000011
0000001010000100011
0000001100000000111
0000001100000001011




=== State Orbit 4 =====================
size : 6
repr state: 1000000010010100011
lex min decimal: 6303659
states:
1000000010010100011
0001000100001000111
0010000100010001011
0000011000000010111
0000101000000101011
0100000010001010011




=== State Orbit 5 =====================
size : 2
repr state: 1010100000010101011
lex min decimal: 88125355
states:
1010100000010101011
0101010000001010111




=== State Orbit 6 =====================
size : 2
repr state: 1010100001010101011
lex min decimal: 88256427
states:
0101010000101010111
1010100001010101011




=== State Orbit 7 =====================
size : 6
repr state: 1000000000010100111
lex min decimal: 4272043
states:
1000000000010100111
0010000000010011011
0000100000001101011
0100000000001011011
0000010000010010111
0001000000001100111




=== State Orbit 8 =====================
size : 6
repr state: 1000000001010100111
lex min decimal: 4403115
states:
0100000000101011011
0000010000110010111
1000000001010100111
0010000001010011011
0000100001001101011
0001000000101100111




=== State Orbit 9 =====================
size : 6
repr state: 1000000011010100011
lex min decimal: 6434731
states:
0001000100101000111
0010000101010001011
1000000011010100011
0100000010101010011
0000101001000101011
0000011000100010111




=== State Orbit 10 =====================
size : 6
repr state: 0000000010010010011
lex min decimal: 575403
states:
0000000100010000111
0000000010010010011
0000001000000011011
0000000010001100011
0000001000000100111
0000000100001001011




=== State Orbit 11 =====================
size : 6
repr state: 0000000110010000010
lex min decimal: 1606571
states:
0000001100000000101
0000000110001000001
0000001100000001010
0000000110010000010
0000001010000100010
0000001010000010001




=== State Orbit 12 =====================
size : 6
repr state: 1000000010010100010
lex min decimal: 6302635
states:
0000011000000010101
1000000010010100010
0000101000000101010
0010000100010001010
0001000100001000101
0100000010001010001




=== State Orbit 13 =====================
size : 2
repr state: 1010100000010101010
lex min decimal: 88124331
states:
0101010000001010101
1010100000010101010




=== State Orbit 14 =====================
size : 2
repr state: 1010100001010101010
lex min decimal: 88255403
states:
0101010000101010101
1010100001010101010




=== State Orbit 15 =====================
size : 6
repr state: 1000000011010100010
lex min decimal: 6433707
states:
0100000010101010001
0010000101010001010
0000011000100010101
0001000100101000101
0000101001000101010
1000000011010100010



[QRM NOTE]: Time elapsed since start: 6.385 seconds

[QRM NOTE]: Time elapsed since last: 0.129 seconds

[QRM NOTE]: Peak memory: 1240716 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 6.387 seconds

[QRM NOTE]: Time elapsed since last: 0.003 seconds

[QRM NOTE]: Peak memory: 203292 bytes


====================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

====================================================================================================================


===============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

===============================================================================================================


=== Prime Orbit 0 =====================
size : 6
num_suborbits: 1
0 (*) : -------------1---0-
0     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
1     : --------------1---0
1     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
2     : ---------------1-0-
2     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
3     : ----------------1-0
3     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
4     : -----------1-----0-
4     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
5     : ------------1-----0
5     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
6 (*) : ---------1-------0-
6     : ['leader(proposer0)', '~start(proposer0)']
7     : ----------1-------0
7     : ['leader(proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 6
num_suborbits: 1
8 (*) : --1--------------0-
8     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
9     : ---1--------------0
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
10     : 1----------------0-
10     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
11     : -1----------------0
11     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
12     : ----1------------0-
12     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
13     : -----1------------0
13     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 12
num_suborbits: 1
14 (*) : ---1------------0--
14     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
15     : --1------------0---
15     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
16     : -1------------0----
16     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
17     : 1------------0-----
17     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
18     : -----1----------0--
18     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
19     : ----1----------0---
19     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
20     : -1----------0------
20     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
21     : 1----------0-------
21     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
22     : -----1--------0----
22     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
23     : ----1--------0-----
23     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
24     : ---1--------0------
24     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
25     : --1--------0-------
25     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 12
num_suborbits: 1
26 (*) : ---1----1----------
26     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
27     : --1-----1----------
27     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
28     : -1-----1-----------
28     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
29     : 1------1-----------
29     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
30     : -----1--1----------
30     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
31     : ----1---1----------
31     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
32     : -1----1------------
32     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
33     : 1-----1------------
33     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
34     : -----1-1-----------
34     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
35     : ----1--1-----------
35     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
36     : ---1--1------------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
37     : --1---1------------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 12
num_suborbits: 1
38 (*) : ---1-----------1---
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
39     : --1-------------1--
39     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
40     : -1-----------1-----
40     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
41     : 1-------------1----
41     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
42     : -----1---------1---
42     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
43     : ----1-----------1--
43     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
44     : -1---------1-------
44     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
45     : 1-----------1------
45     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
46     : -----1-------1-----
46     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
47     : ----1---------1----
47     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
48     : ---1-------1-------
48     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
49     : --1---------1------
49     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
50 (*) : ---1-----1---------
50     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
51     : --1-------1--------
51     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
52     : -1-------1---------
52     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
53     : 1---------1--------
53     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
54     : -----1---1---------
54     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
55     : ----1-----1--------
55     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 2
56 (*) : --11---------------
56     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
57     : 11-----------------
57     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
58     : ----11-------------
58     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
59 (*) : 1--1---------------
59     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
60     : -11----------------
60     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
61     : 1----1-------------
61     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
62     : -1--1--------------
62     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
63     : --1--1-------------
63     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
64     : ---11--------------
64     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 1
num_suborbits: 1
65 (*) : ---------11--------
65     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
66 (*) : -------1-----1-----
66     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
67     : -------1------1----
67     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
68     : --------1------1---
68     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
69     : --------1-------1--
69     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
70     : ------1----1-------
70     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
71     : ------1-----1------
71     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
72 (*) : -----------11------
72     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
73     : -------------11----
73     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
74     : ---------------11--
74     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 12
num_suborbits: 1
75 (*) : 0-1----------1-----
75     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
76     : -0-1----------1----
76     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
77     : 1-0------------1---
77     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
78     : -1-0------------1--
78     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
79     : 0---1------1-------
79     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
80     : -0---1------1------
80     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
81     : 1---0----------1---
81     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
82     : -1---0----------1--
82     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
83     : --0-1------1-------
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
84     : ---0-1------1------
84     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
85     : --1-0--------1-----
85     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
86     : ---1-0--------1----
86     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
87 (*) : 0-1-1--------------
87     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
88     : -0-1-1-------------
88     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
89     : 1-0-1--------------
89     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
90     : -1-0-1-------------
90     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
91     : 1-1-0--------------
91     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
92     : -1-1-0-------------
92     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
93 (*) : --0----1-1---------
93     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
94     : ---0---1--1--------
94     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
95     : 0-------11---------
95     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
96     : -0------1-1--------
96     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
97     : ----0-1--1---------
97     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
98     : -----01---1--------
98     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
99 (*) : ------11-1---------
99     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
100     : ------11--1--------
100     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
101     : ------1-11---------
101     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
102     : ------1-1-1--------
102     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
103     : -------111---------
103     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
104     : -------11-1--------
104     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 12
num_suborbits: 1
105 (*) : -------1-1-0-------
105     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
106     : -------1--1-0------
106     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
107     : --------11-0-------
107     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
108     : --------1-1-0------
108     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
109     : ------1--1---0-----
109     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
110     : ------1---1---0----
110     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
111     : --------11---0-----
111     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
112     : --------1-1---0----
112     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
113     : ------1--1-----0---
113     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
114     : ------1---1-----0--
114     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
115     : -------1-1-----0---
115     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
116     : -------1--1-----0--
116     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 12
num_suborbits: 1
117 (*) : -------1-1--1------
117     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
118     : -------1--11-------
118     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
119     : --------11--1------
119     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
120     : --------1-11-------
120     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
121     : ------1--1----1----
121     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
122     : ------1---1--1-----
122     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
123     : --------11----1----
123     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
124     : --------1-1--1-----
124     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
125     : ------1--1------1--
125     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
126     : ------1---1----1---
126     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
127     : -------1-1------1--
127     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
128     : -------1--1----1---
128     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
129 (*) : --0------1---0-----
129     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
130     : ---0------1---0----
130     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
131     : 0--------1-----0---
131     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
132     : -0--------1-----0--
132     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
133     : ----0----1-0-------
133     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
134     : -----0----1-0------
134     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
135 (*) : ---------1---0-0---
135     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
136     : ----------1---0-0--
136     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
137     : ---------1-0---0---
137     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
138     : ----------1-0---0--
138     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
139     : ---------1-0-0-----
139     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
140     : ----------1-0-0----
140     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 6
num_suborbits: 1
141 (*) : --0------1----1----
141     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
142     : ---0------1--1-----
142     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
143     : 0--------1------1--
143     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
144     : -0--------1----1---
144     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
145     : ----0----1--1------
145     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
146     : -----0----11-------
146     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 12
num_suborbits: 1
147 (*) : ---------1----10---
147     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
148     : ----------1--1--0--
148     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
149     : ---------1---0--1--
149     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
150     : ----------1---01---
150     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
151     : ---------1--1--0---
151     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
152     : ----------11----0--
152     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
153     : ---------1-0----1--
153     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
154     : ----------1-0--1---
154     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
155     : ---------1--10-----
155     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
156     : ----------11--0----
156     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
157     : ---------1-0--1----
157     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
158     : ----------1-01-----
158     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
159 (*) : ---------1--1-1----
159     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
160     : ----------11-1-----
160     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
161     : ---------1--1---1--
161     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
162     : ----------11---1---
162     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
163     : ---------1----1-1--
163     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
164     : ----------1--1-1---
164     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 6
num_suborbits: 1
165 (*) : -0----------1-1----
165     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
166     : 0----------1-1-----
166     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
167     : ---0--------1---1--
167     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
168     : --0--------1---1---
168     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
169     : -----0--------1-1--
169     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
170     : ----0--------1-1---
170     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 3
num_suborbits: 1
171 (*) : ------0----00------
171     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
172     : -------0-----00----
172     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
173     : --------0------00--
173     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
174 (*) : -------0-----0----0
174     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
175     : -------0------0--0-
175     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
176     : --------0------0--0
176     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
177     : --------0-------00-
177     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
178     : ------0----0------0
178     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
179     : ------0-----0----0-
179     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
180 (*) : -------0---------00
180     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
181     : --------0--------00
181     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
182     : ------0----------00
182     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 12
num_suborbits: 1
183 (*) : --0---0-----0--1---
183     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
184     : ---0--0----0----1--
184     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
185     : 0-----0-----01-----
185     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
186     : -0----0----0--1----
186     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
187     : ----0--0------01---
187     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
188     : -----0-0-----0--1--
188     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
189     : 0------0---1--0----
189     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
190     : -0-----0----10-----
190     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
191     : ----0---0----1--0--
191     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
192     : -----0--0-----10---
192     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
193     : --0-----0--1----0--
193     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
194     : ---0----0---1--0---
194     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 12
num_suborbits: 1
195 (*) : ----0--0-------1--0
195     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
196     : -----0-0--------10-
196     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
197     : ----0---0----1----0
197     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
198     : -----0--0-----1--0-
198     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
199     : --0---0--------1--0
199     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
200     : ---0--0---------10-
200     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
201     : --0-----0--1------0
201     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
202     : ---0----0---1----0-
202     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
203     : 0-----0------1----0
203     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
204     : -0----0-------1--0-
204     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
205     : 0------0---1------0
205     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
206     : -0-----0----1----0-
206     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 12
num_suborbits: 1
207 (*) : 1-0-----0---------0
207     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
208     : -1-0----0--------0-
208     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
209     : 0-1----0----------0
209     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
210     : -0-1---0---------0-
210     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
211     : 1---0---0---------0
211     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
212     : -1---0--0--------0-
212     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
213     : 0---1-0-----------0
213     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
214     : -0---10----------0-
214     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
215     : --1-0--0----------0
215     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
216     : ---1-0-0---------0-
216     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
217     : --0-1-0-----------0
217     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
218     : ---0-10----------0-
218     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 12
num_suborbits: 1
219 (*) : 1-0-----0-------0--
219     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
220     : -1-0----0------0---
220     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
221     : 0-1----0------0----
221     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
222     : -0-1---0-----0-----
222     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
223     : 1---0---0-------0--
223     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
224     : -1---0--0------0---
224     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
225     : 0---1-0-----0------
225     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
226     : -0---10----0-------
226     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
227     : --1-0--0------0----
227     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
228     : ---1-0-0-----0-----
228     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
229     : --0-1-0-----0------
229     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
230     : ---0-10----0-------
230     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
231 (*) : ---0-0----1-----1--
231     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
232     : --0-0----1-----1---
232     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
233     : -0---0----1---1----
233     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
234     : 0---0----1---1-----
234     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
235     : -0-0------1-1------
235     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
236     : 0-0------1-1-------
236     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 2
num_suborbits: 1
237 (*) : -0-0-0----1--------
237     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
238     : 0-0-0----1---------
238     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
239 (*) : ---0--0-0--------0-
239     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
240     : --0---0-0---------0
240     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
241     : -0----00---------0-
241     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
242     : 0-----00----------0
242     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
243     : -----0-00--------0-
243     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
244     : ----0--00---------0
244     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
245 (*) : ---0-0--0-1----0---
245     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
246     : --0-0---01------0--
246     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
247     : -0---0-0--1--0-----
247     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
248     : 0---0--0-1----0----
248     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
249     : -0-0--0---10-------
249     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
250     : 0-0---0--1--0------
250     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 6
num_suborbits: 1
251 (*) : 0--0--0------1--1--
251     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)']
252     : -00---0-------11---
252     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)']
253     : 0----0-0---1----1--
253     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)']
254     : -0--0--0----1--1---
254     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)']
255     : --0--0--0--1--1----
255     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)']
256     : ---00---0---11-----
256     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 6
num_suborbits: 1
257 (*) : --0---0-0---0---0--
257     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
258     : ---0--0-0--0---0---
258     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
259     : 0-----00----0-0----
259     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
260     : -0----00---0-0-----
260     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
261     : ----0--00-----0-0--
261     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
262     : -----0-00----0-0---
262     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
263 (*) : -0---0-0--1------0-
263     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
264     : 0---0--0-1--------0
264     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
265     : ---0-0--0-1------0-
265     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
266     : --0-0---01--------0
266     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
267     : -0-0--0---1------0-
267     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
268     : 0-0---0--1--------0
268     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 12
num_suborbits: 1
269 (*) : -0--0--00---1---0--
269     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
270     : 0----0-00--1---0---
270     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
271     : ---00--00---1-0----
271     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)']
272     : --0--0-00--1-0-----
272     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)']
273     : -00---0-0-----1-0--
273     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
274     : 0--0--0-0----1-0---
274     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
275     : --0--00-0---0-1----
275     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)']
276     : ---00-0-0--0-1-----
276     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)']
277     : 0--0--00------0-1--
277     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
278     : -00---00-----0-1---
278     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
279     : 0----000----0---1--
279     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)']
280     : -0--0-00---0---1---
280     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 6
num_suborbits: 1
281 (*) : -0-00--00---1------
281     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)']
282     : 0-0--0-00--1-------
282     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)']
283     : -00--00-0-----1----
283     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)']
284     : 0--00-0-0----1-----
284     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)']
285     : 0--0-000--------1--
285     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)']
286     : -00-0-00-------1---
286     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 6
num_suborbits: 1
287 (*) : -00--0000----0-----
287     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)']
288     : 0--00-000-----0----
288     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)']
289     : 0--0-0000------0---
289     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
290     : -00-0-000-------0--
290     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
291     : -0-00-000--0-------
291     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)']
292     : 0-0--0000---0------
292     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 6
num_suborbits: 1
293 (*) : -00---000----0--0--
293     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
294     : 0--0--000-----00---
294     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
295     : -0--0-000--0----0--
295     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
296     : 0----0000---0--0---
296     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
297     : ---00-000--0--0----
297     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
298     : --0--0000---00-----
298     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 1
num_suborbits: 1
299 (*) : 000000000----------
299     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 42

[PRIME NOTE]: number of orbits before merging: 43

[PRIME NOTE]: number of primes: 300

[QRM NOTE]: Time elapsed since start: 6.480 seconds

[QRM NOTE]: Time elapsed since last: 0.093 seconds

[QRM NOTE]: Peak memory: 1640450 bytes


=========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

=========================================================================================================

definition primes: {34, 3, 4, 35, 37, 38, 39, 9, 40, 11, 12, 41, 22, 23, 26, 29}


New level: 0
 pending : [0, 1, 2, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : []

Essensial at level 0 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, 67108864), (2, 131072), (3, -1), (4, -1), (5, 0), (6, 131072), (7, 0), (8, 67108864), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 0 : {5, 7}

After reduction : 
 pending  : [0, 1, 2, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10]


Before reduction : 
 pending  : [0, 1, 2, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10]

Essensial at level 0 : set()

Before removed
 coverage : [(0, 4194304), (1, 67108864), (2, 131072), (3, -1), (4, -1), (5, 0), (6, 131072), (7, 0), (8, 67108864), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, 67108864), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, 67108864), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [0, 1, 2, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10]

[QRM NOTE]: Time elapsed since start: 6.548 seconds

[QRM NOTE]: Time elapsed since last: 0.068 seconds

[QRM NOTE]: Peak memory: 577275 bytes


=============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

=============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
72 (*) : -----------11------
72     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
73     : -------------11----
73     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
74     : ---------------11--
74     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0))


---------- Quantifier Inference: orbit 10 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 0 =====================
size : 6
num_suborbits: 1
0 (*) : -------------1---0-
0     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
1     : --------------1---0
1     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
2     : ---------------1-0-
2     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
3     : ----------------1-0
3     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
4     : -----------1-----0-
4     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
5     : ------------1-----0
5     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor1,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor1,proposer0)', '~start(proposer0)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)


---------- Quantifier Inference: orbit 0 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
6 (*) : ---------1-------0-
6     : ['leader(proposer0)', '~start(proposer0)']
7     : ----------1-------0
7     : ['leader(proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~start(proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)


---------- Quantifier Inference: orbit 1 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 2 =====================
size : 6
num_suborbits: 1
8 (*) : --1--------------0-
8     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
9     : ---1--------------0
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
10     : 1----------------0-
10     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
11     : -1----------------0
11     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
12     : ----1------------0-
12     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
13     : -----1------------0
13     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)


---------- Quantifier Inference: orbit 2 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
50 (*) : ---1-----1---------
50     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
51     : --1-------1--------
51     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
52     : -1-------1---------
52     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
53     : 1---------1--------
53     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
54     : -----1---1---------
54     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
55     : ----1-----1--------
55     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$chosenAt$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1,QUORUM0. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1


---------- Quantifier Inference: orbit 6 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 8 =====================
size : 1
num_suborbits: 1
65 (*) : ---------11--------
65     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'leader(proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'leader(proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: exists PROPOSER0. ~leader(PROPOSER0)


---------- Quantifier Inference: orbit 8 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
93 (*) : --0----1-1---------
93     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
94     : ---0---1--1--------
94     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
95     : 0-------11---------
95     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
96     : -0------1-1--------
96     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
97     : ----0-1--1---------
97     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
98     : -----01---1--------
98     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor1)', 'leader(proposer0)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor1)', 'leader(proposer0)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0)


---------- Quantifier Inference: orbit 13 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
99 (*) : ------11-1---------
99     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
100     : ------11--1--------
100     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
101     : ------1-11---------
101     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
102     : ------1-1-1--------
102     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
103     : -------111---------
103     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
104     : -------11-1--------
104     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR1)', 'didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


---------- Quantifier Inference: orbit 14 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 15 =====================
size : 12
num_suborbits: 1
105 (*) : -------1-1-0-------
105     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
106     : -------1--1-0------
106     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
107     : --------11-0-------
107     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
108     : --------1-1-0------
108     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
109     : ------1--1---0-----
109     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
110     : ------1---1---0----
110     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
111     : --------11---0-----
111     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
112     : --------1-1---0----
112     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
113     : ------1--1-----0---
113     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
114     : ------1---1-----0--
114     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
115     : -------1-1-----0---
115     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
116     : -------1--1-----0--
116     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


---------- Quantifier Inference: orbit 15 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 16 =====================
size : 12
num_suborbits: 1
117 (*) : -------1-1--1------
117     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
118     : -------1--11-------
118     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
119     : --------11--1------
119     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
120     : --------1-11-------
120     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
121     : ------1--1----1----
121     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
122     : ------1---1--1-----
122     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
123     : --------11----1----
123     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
124     : --------1-1--1-----
124     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
125     : ------1--1------1--
125     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
126     : ------1---1----1---
126     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
127     : -------1-1------1--
127     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
128     : -------1--1----1---
128     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER1,ACCEPTOR1. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


---------- Quantifier Inference: orbit 16 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
129 (*) : --0------1---0-----
129     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
130     : ---0------1---0----
130     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
131     : 0--------1-----0---
131     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
132     : -0--------1-----0--
132     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
133     : ----0----1-0-------
133     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
134     : -----0----1-0------
134     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0)


---------- Quantifier Inference: orbit 17 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
135 (*) : ---------1---0-0---
135     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
136     : ----------1---0-0--
136     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
137     : ---------1-0---0---
137     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
138     : ----------1-0---0--
138     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
139     : ---------1-0-0-----
139     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
140     : ----------1-0-0----
140     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


---------- Quantifier Inference: orbit 18 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 19 =====================
size : 6
num_suborbits: 1
141 (*) : --0------1----1----
141     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
142     : ---0------1--1-----
142     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
143     : 0--------1------1--
143     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
144     : -0--------1----1---
144     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
145     : ----0----1--1------
145     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
146     : -----0----11-------
146     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)', '~member(acceptor1,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1


---------- Quantifier Inference: orbit 19 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 20 =====================
size : 12
num_suborbits: 1
147 (*) : ---------1----10---
147     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
148     : ----------1--1--0--
148     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
149     : ---------1---0--1--
149     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
150     : ----------1---01---
150     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
151     : ---------1--1--0---
151     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
152     : ----------11----0--
152     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
153     : ---------1-0----1--
153     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
154     : ----------1-0--1---
154     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
155     : ---------1--10-----
155     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
156     : ----------11--0----
156     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
157     : ---------1-0--1----
157     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
158     : ----------1-01-----
158     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER1,ACCEPTOR1. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | promise(ACCEPTOR1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


---------- Quantifier Inference: orbit 20 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
159 (*) : ---------1--1-1----
159     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
160     : ----------11-1-----
160     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
161     : ---------1--1---1--
161     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
162     : ----------11---1---
162     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
163     : ---------1----1-1--
163     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
164     : ----------1--1-1---
164     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1; proposer$0$promise$1': [proposer$0$promise$1$0; proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1; proposer$0$promise$1': proposer$0$promise$1$0; proposer$0$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER1,ACCEPTOR1. ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


---------- Quantifier Inference: orbit 21 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
174 (*) : -------0-----0----0
174     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
175     : -------0------0--0-
175     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
176     : --------0------0--0
176     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
177     : --------0-------00-
177     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
178     : ------0----0------0
178     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
179     : ------0-----0----0-
179     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$promise$1$0, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$promise$1$0 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$promise$1$0, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$promise$1$0 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER1)', '~promise(ACCEPTOR0,PROPOSER0)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER1. start(PROPOSER1) | promise(ACCEPTOR0,PROPOSER0) | didNotPromise(ACCEPTOR0) | PROPOSER0 = PROPOSER1


---------- Quantifier Inference: orbit 24 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
180 (*) : -------0---------00
180     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
181     : --------0--------00
181     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
182     : ------0----------00
182     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))


---------- Quantifier Inference: orbit 25 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 27 =====================
size : 12
num_suborbits: 1
195 (*) : ----0--0-------1--0
195     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
196     : -----0-0--------10-
196     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
197     : ----0---0----1----0
197     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
198     : -----0--0-----1--0-
198     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
199     : --0---0--------1--0
199     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
200     : ---0--0---------10-
200     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
201     : --0-----0--1------0
201     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
202     : ---0----0---1----0-
202     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
203     : 0-----0------1----0
203     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
204     : -0----0-------1--0-
204     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
205     : 0------0---1------0
205     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
206     : -0-----0----1----0-
206     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR1,QUORUM0)', 'promise(ACCEPTOR1,PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,ACCEPTOR1,QUORUM0,PROPOSER1. ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


---------- Quantifier Inference: orbit 27 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 28 =====================
size : 12
num_suborbits: 1
207 (*) : 1-0-----0---------0
207     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
208     : -1-0----0--------0-
208     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
209     : 0-1----0----------0
209     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
210     : -0-1---0---------0-
210     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
211     : 1---0---0---------0
211     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
212     : -1---0--0--------0-
212     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
213     : 0---1-0-----------0
213     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
214     : -0---10----------0-
214     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
215     : --1-0--0----------0
215     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
216     : ---1-0-0---------0-
216     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
217     : --0-1-0-----------0
217     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
218     : ---0-10----------0-
218     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0, acceptor$0$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$start': 1, '1$member': 1, '0$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', '~member(ACCEPTOR0,QUORUM0)', 'chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,QUORUM1,QUORUM0,PROPOSER1. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)


---------- Quantifier Inference: orbit 28 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
231 (*) : ---0-0----1-----1--
231     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
232     : --0-0----1-----1---
232     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
233     : -0---0----1---1----
233     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
234     : 0---0----1---1-----
234     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
235     : -0-0------1-1------
235     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
236     : 0-0------1-1-------
236     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor2,proposer1)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor2,proposer1)', 'member(acceptor2,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,QUORUM0,QUORUM1. ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | QUORUM0 = QUORUM1


---------- Quantifier Inference: orbit 30 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 31 =====================
size : 2
num_suborbits: 1
237 (*) : -0-0-0----1--------
237     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
238     : 0-0-0----1---------
238     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))


---------- Quantifier Inference: orbit 31 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
239 (*) : ---0--0-0--------0-
239     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
240     : --0---0-0---------0
240     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
241     : -0----00---------0-
241     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
242     : 0-----00----------0
242     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
243     : -----0-00--------0-
243     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
244     : ----0--00---------0
244     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,ACCEPTOR1,QUORUM0,PROPOSER1. ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


---------- Quantifier Inference: orbit 32 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
245 (*) : ---0-0--0-1----0---
245     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
246     : --0-0---01------0--
246     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
247     : -0---0-0--1--0-----
247     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
248     : 0---0--0-1----0----
248     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
249     : -0-0--0---10-------
249     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
250     : 0-0---0--1--0------
250     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor2,proposer0)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor2,proposer0)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,QUORUM1,QUORUM0,PROPOSER1. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)


---------- Quantifier Inference: orbit 33 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
263 (*) : -0---0-0--1------0-
263     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
264     : 0---0--0-1--------0
264     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
265     : ---0-0--0-1------0-
265     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
266     : --0-0---01--------0
266     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
267     : -0-0--0---1------0-
267     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
268     : 0-0---0--1--------0
268     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'leader(proposer1)', '~start(proposer0)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'leader(proposer1)', '~start(proposer0)', 'member(acceptor1,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,QUORUM1,QUORUM0,PROPOSER1. ~leader(PROPOSER0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)


---------- Quantifier Inference: orbit 36 ----------

[QI_CHECK RESULT]: PASS


=======================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

=======================================================================================================================


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
72 (*) : -----------11------
72     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
73     : -------------11----
73     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
74     : ---------------11--
74     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   1
num_exists :   1
num_literals : 1
quantified form : forall ACCEPTOR0. (exists PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0))
qcost : 3




=== Prime Orbit 0 =====================
size : 6
num_suborbits: 1
0 (*) : -------------1---0-
0     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
1     : --------------1---0
1     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
2     : ---------------1-0-
2     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
3     : ----------------1-0
3     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
4     : -----------1-----0-
4     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
5     : ------------1-----0
5     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)
qcost : 4




=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
6 (*) : ---------1-------0-
6     : ['leader(proposer0)', '~start(proposer0)']
7     : ----------1-------0
7     : ['leader(proposer1)', '~start(proposer1)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)
qcost : 3




=== Prime Orbit 2 =====================
size : 6
num_suborbits: 1
8 (*) : --1--------------0-
8     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
9     : ---1--------------0
9     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
10     : 1----------------0-
10     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
11     : -1----------------0
11     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
12     : ----1------------0-
12     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
13     : -----1------------0
13     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
50 (*) : ---1-----1---------
50     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
51     : --1-------1--------
51     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
52     : -1-------1---------
52     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
53     : 1---------1--------
53     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
54     : -----1---1---------
54     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
55     : ----1-----1--------
55     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,PROPOSER1,QUORUM0. ~leader(PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 8 =====================
size : 1
num_suborbits: 1
65 (*) : ---------11--------
65     : ['leader(proposer0)', 'leader(proposer1)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists PROPOSER0. ~leader(PROPOSER0)
qcost : 2




=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
93 (*) : --0----1-1---------
93     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
94     : ---0---1--1--------
94     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
95     : 0-------11---------
95     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
96     : -0------1-1--------
96     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
97     : ----0-1--1---------
97     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
98     : -----01---1--------
98     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0)
qcost : 7




=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
99 (*) : ------11-1---------
99     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
100     : ------11--1--------
100     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
101     : ------1-11---------
101     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
102     : ------1-1-1--------
102     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
103     : -------111---------
103     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
104     : -------11-1--------
104     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. ~didNotPromise(ACCEPTOR1) | ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 15 =====================
size : 12
num_suborbits: 1
105 (*) : -------1-1-0-------
105     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
106     : -------1--1-0------
106     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
107     : --------11-0-------
107     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
108     : --------1-1-0------
108     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
109     : ------1--1---0-----
109     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
110     : ------1---1---0----
110     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
111     : --------11---0-----
111     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
112     : --------1-1---0----
112     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
113     : ------1--1-----0---
113     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
114     : ------1---1-----0--
114     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
115     : -------1-1-----0---
115     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
116     : -------1--1-----0--
116     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 16 =====================
size : 12
num_suborbits: 1
117 (*) : -------1-1--1------
117     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
118     : -------1--11-------
118     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
119     : --------11--1------
119     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
120     : --------1-11-------
120     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
121     : ------1--1----1----
121     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
122     : ------1---1--1-----
122     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
123     : --------11----1----
123     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
124     : --------1-1--1-----
124     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
125     : ------1--1------1--
125     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
126     : ------1---1----1---
126     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
127     : -------1-1------1--
127     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
128     : -------1--1----1---
128     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER1,ACCEPTOR1. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 17 =====================
size : 6
num_suborbits: 1
129 (*) : --0------1---0-----
129     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
130     : ---0------1---0----
130     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
131     : 0--------1-----0---
131     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
132     : -0--------1-----0--
132     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
133     : ----0----1-0-------
133     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
134     : -----0----1-0------
134     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0)
qcost : 7




=== Prime Orbit 18 =====================
size : 6
num_suborbits: 1
135 (*) : ---------1---0-0---
135     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
136     : ----------1---0-0--
136     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
137     : ---------1-0---0---
137     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
138     : ----------1-0---0--
138     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
139     : ---------1-0-0-----
139     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
140     : ----------1-0-0----
140     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 19 =====================
size : 6
num_suborbits: 1
141 (*) : --0------1----1----
141     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
142     : ---0------1--1-----
142     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
143     : 0--------1------1--
143     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
144     : -0--------1----1---
144     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
145     : ----0----1--1------
145     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
146     : -----0----11-------
146     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 20 =====================
size : 12
num_suborbits: 1
147 (*) : ---------1----10---
147     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
148     : ----------1--1--0--
148     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
149     : ---------1---0--1--
149     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
150     : ----------1---01---
150     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
151     : ---------1--1--0---
151     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
152     : ----------11----0--
152     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
153     : ---------1-0----1--
153     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
154     : ----------1-0--1---
154     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
155     : ---------1--10-----
155     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
156     : ----------11--0----
156     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
157     : ---------1-0--1----
157     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
158     : ----------1-01-----
158     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER1,ACCEPTOR1. ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | promise(ACCEPTOR1,PROPOSER0) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
159 (*) : ---------1--1-1----
159     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
160     : ----------11-1-----
160     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
161     : ---------1--1---1--
161     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
162     : ----------11---1---
162     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
163     : ---------1----1-1--
163     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
164     : ----------1--1-1---
164     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER1,ACCEPTOR1. ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
174 (*) : -------0-----0----0
174     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
175     : -------0------0--0-
175     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
176     : --------0------0--0
176     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
177     : --------0-------00-
177     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
178     : ------0----0------0
178     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
179     : ------0-----0----0-
179     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER1. start(PROPOSER1) | promise(ACCEPTOR0,PROPOSER0) | didNotPromise(ACCEPTOR0) | PROPOSER0 = PROPOSER1
qcost : 7




=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
180 (*) : -------0---------00
180     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
181     : --------0--------00
181     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
182     : ------0----------00
182     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))
qcost : 4




=== Prime Orbit 27 =====================
size : 12
num_suborbits: 1
195 (*) : ----0--0-------1--0
195     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
196     : -----0-0--------10-
196     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
197     : ----0---0----1----0
197     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
198     : -----0--0-----1--0-
198     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
199     : --0---0--------1--0
199     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
200     : ---0--0---------10-
200     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
201     : --0-----0--1------0
201     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
202     : ---0----0---1----0-
202     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
203     : 0-----0------1----0
203     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
204     : -0----0-------1--0-
204     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
205     : 0------0---1------0
205     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
206     : -0-----0----1----0-
206     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall ACCEPTOR0,PROPOSER0,ACCEPTOR1,QUORUM0,PROPOSER1. ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 13




=== Prime Orbit 28 =====================
size : 12
num_suborbits: 1
207 (*) : 1-0-----0---------0
207     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
208     : -1-0----0--------0-
208     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
209     : 0-1----0----------0
209     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
210     : -0-1---0---------0-
210     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
211     : 1---0---0---------0
211     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
212     : -1---0--0--------0-
212     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
213     : 0---1-0-----------0
213     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
214     : -0---10----------0-
214     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
215     : --1-0--0----------0
215     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
216     : ---1-0-0---------0-
216     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
217     : --0-1-0-----------0
217     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
218     : ---0-10----------0-
218     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall ACCEPTOR0,PROPOSER0,QUORUM1,QUORUM0,PROPOSER1. didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)
qcost : 13




=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
231 (*) : ---0-0----1-----1--
231     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
232     : --0-0----1-----1---
232     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
233     : -0---0----1---1----
233     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
234     : 0---0----1---1-----
234     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
235     : -0-0------1-1------
235     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
236     : 0-0------1-1-------
236     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall PROPOSER0,ACCEPTOR0,QUORUM0,QUORUM1. ~leader(PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 31 =====================
size : 2
num_suborbits: 1
237 (*) : -0-0-0----1--------
237     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
238     : 0-0-0----1---------
238     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))
qcost : 4




=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
239 (*) : ---0--0-0--------0-
239     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
240     : --0---0-0---------0
240     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
241     : -0----00---------0-
241     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
242     : 0-----00----------0
242     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
243     : -----0-00--------0-
243     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
244     : ----0--00---------0
244     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
num_forall :   5
num_exists :   0
num_literals : 8
quantified form : forall ACCEPTOR0,PROPOSER0,ACCEPTOR1,QUORUM0,PROPOSER1. ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 13




=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
245 (*) : ---0-0--0-1----0---
245     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
246     : --0-0---01------0--
246     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
247     : -0---0-0--1--0-----
247     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
248     : 0---0--0-1----0----
248     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
249     : -0-0--0---10-------
249     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
250     : 0-0---0--1--0------
250     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
num_forall :   5
num_exists :   0
num_literals : 9
quantified form : forall ACCEPTOR0,PROPOSER0,QUORUM1,QUORUM0,PROPOSER1. ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)
qcost : 14




=== Prime Orbit 36 =====================
size : 6
num_suborbits: 1
263 (*) : -0---0-0--1------0-
263     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
264     : 0---0--0-1--------0
264     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
265     : ---0-0--0-1------0-
265     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
266     : --0-0---01--------0
266     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
267     : -0-0--0---1------0-
267     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
268     : 0-0---0--1--------0
268     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
num_forall :   5
num_exists :   0
num_literals : 9
quantified form : forall ACCEPTOR0,PROPOSER0,QUORUM1,QUORUM0,PROPOSER1. ~leader(PROPOSER0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER1) | (PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1)
qcost : 14



[QRM NOTE]: Time elapsed since start: 8.499 seconds

[QRM NOTE]: Time elapsed since last: 1.950 seconds

[QRM NOTE]: Peak memory: 2770247 bytes


======================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

======================================================================================================


New level: 1
 pending : [0, 1, 2, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10]


Before reduction : 
 pending  : [0, 1, 2, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10]

Essensial at level 1 : set()

Before removed
 coverage : [(0, 4194304), (1, 67108864), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, 67108864), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, 67108864), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, 67108864), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [0, 1, 2, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10]


Solution : [10] has cost 3.


Decide in level 1 among pending : [0, 1, 2, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]

Coverage : [(0, 4194304), (1, 67108864), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, 67108864), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [0, 2, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10, 1]


New level: 2
 pending : [0, 2, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10, 1]


Before reduction : 
 pending  : [0, 2, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, 4194304), (1, 67108864), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, 67108864), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, 16777216), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, 8388608), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [0, 2, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10, 1]


Solution : [10, 1] has cost 6.


Decide in level 2 among pending : [0, 2, 6, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, 16777216), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, 8388608), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 2

After decision at level 2
 pending : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10, 1, 8]


New level: 3
 pending : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10, 1, 8]


Before reduction : 
 pending  : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10, 1, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, 16777216), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, 8388608), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 32768), (31, 4194304), (32, 8388608), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]
 solution : [10, 1, 8]


Solution : [10, 1, 8] has cost 8.


Decide in level 3 among pending : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 32, 33, 36]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 32768), (31, 4194304), (32, 8388608), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 25 with phase True at level 3

After decision at level 3
 pending : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 28, 30, 31, 32, 33, 36]
 solution : [10, 1, 8, 25]


New level: 4
 pending : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 28, 30, 31, 32, 33, 36]
 solution : [10, 1, 8, 25]


Before reduction : 
 pending  : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 28, 30, 31, 32, 33, 36]
 solution : [10, 1, 8, 25]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 32768), (31, 4194304), (32, 8388608), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, 4194304), (32, 4194304), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 28, 30, 31, 32, 33, 36]
 solution : [10, 1, 8, 25]


Solution : [10, 1, 8, 25] has cost 12.


Decide in level 4 among pending : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 28, 30, 31, 32, 33, 36]

Coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, 4194304), (32, 4194304), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 31 with phase True at level 4

After decision at level 4
 pending : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 28, 30, 32, 33, 36]
 solution : [10, 1, 8, 25, 31]


New level: 5
 pending : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 28, 30, 32, 33, 36]
 solution : [10, 1, 8, 25, 31]


Before reduction : 
 pending  : [0, 2, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 27, 28, 30, 32, 33, 36]
 solution : [10, 1, 8, 25, 31]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, 4194304), (32, 4194304), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 0), (31, -1), (32, 4194304), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {33, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [0, 2, 24, 27, 28, 32, 36]
 solution : [10, 1, 8, 25, 31]


Before reduction : 
 pending  : [0, 2, 24, 27, 28, 32, 36]
 solution : [10, 1, 8, 25, 31]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 0), (31, -1), (32, 4194304), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, 4194304), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 2, 24, 27, 28, 32, 36]
 solution : [10, 1, 8, 25, 31]


Solution : [10, 1, 8, 25, 31] has cost 16.


Decide in level 5 among pending : [0, 2, 24, 27, 28, 32, 36]

Coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, 4194304), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [0, 2, 24, 27, 28, 36]
 solution : [10, 1, 8, 25, 31, 32]


New level: 6
 pending : [0, 2, 24, 27, 28, 36]
 solution : [10, 1, 8, 25, 31, 32]


Before reduction : 
 pending  : [0, 2, 24, 27, 28, 36]
 solution : [10, 1, 8, 25, 31, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, 4194304), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {2, 27, 28, 36}

After reduction : 
 pending  : [0, 24]
 solution : [10, 1, 8, 25, 31, 32]


Before reduction : 
 pending  : [0, 24]
 solution : [10, 1, 8, 25, 31, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 24]
 solution : [10, 1, 8, 25, 31, 32]


Solution : [10, 1, 8, 25, 31, 32] has cost 29.


Decide in level 6 among pending : [0, 24]

Coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 0 with phase True at level 6

After decision at level 6
 pending : [24]
 solution : [10, 1, 8, 25, 31, 32, 0]


New level: 7
 pending : [24]
 solution : [10, 1, 8, 25, 31, 32, 0]


Before reduction : 
 pending  : [24]
 solution : [10, 1, 8, 25, 31, 32, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {24}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 31, 32, 0]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 31, 32, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 31, 32, 0]


Solution : [10, 1, 8, 25, 31, 32, 0] has cost 33.


Before backtrack at level 7
 pending : []
 solution : [10, 1, 8, 25, 31, 32, 0]

After backtrack at level 7
 pending : [24]
 solution : [10, 1, 8, 25, 31, 32, 0]


Invert decision for 0 at level 6


New level: 7
 pending : [24]
 solution : [10, 1, 8, 25, 31, 32]


Before reduction : 
 pending  : [24]
 solution : [10, 1, 8, 25, 31, 32]

Essensial at level 7 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 31, 32, 24]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 31, 32, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 31, 32, 24]


Solution : [10, 1, 8, 25, 31, 32, 24] has cost 36.


Before backtrack at level 7
 pending : []
 solution : [10, 1, 8, 25, 31, 32, 24]

After backtrack at level 7
 pending : [24]
 solution : [10, 1, 8, 25, 31, 32]


Before backtrack at level 6
 pending : [24]
 solution : [10, 1, 8, 25, 31, 32]

After backtrack at level 6
 pending : [24, 2, 27, 28, 36, 0]
 solution : [10, 1, 8, 25, 31, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [24, 2, 27, 28, 36, 0]
 solution : [10, 1, 8, 25, 31]


Before reduction : 
 pending  : [24, 2, 27, 28, 36, 0]
 solution : [10, 1, 8, 25, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 2, 27, 28, 36, 0]
 solution : [10, 1, 8, 25, 31]


Solution : [10, 1, 8, 25, 31] has cost 16.


Decide in level 6 among pending : [24, 2, 27, 28, 36, 0]

Coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [2, 27, 28, 36, 0]
 solution : [10, 1, 8, 25, 31, 24]


New level: 7
 pending : [2, 27, 28, 36, 0]
 solution : [10, 1, 8, 25, 31, 24]


Before reduction : 
 pending  : [2, 27, 28, 36, 0]
 solution : [10, 1, 8, 25, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {0, 2, 36, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 31, 24]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 31, 24]


Solution : [10, 1, 8, 25, 31, 24] has cost 23.


Before backtrack at level 7
 pending : []
 solution : [10, 1, 8, 25, 31, 24]

After backtrack at level 7
 pending : [2, 27, 28, 36, 0]
 solution : [10, 1, 8, 25, 31, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [2, 27, 28, 36, 0]
 solution : [10, 1, 8, 25, 31]


Before reduction : 
 pending  : [2, 27, 28, 36, 0]
 solution : [10, 1, 8, 25, 31]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 27, 28, 36}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 31, 0]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 31, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 31, 0]


Solution : [10, 1, 8, 25, 31, 0] has cost 20.


Before backtrack at level 7
 pending : []
 solution : [10, 1, 8, 25, 31, 0]

After backtrack at level 7
 pending : [0, 2, 27, 28, 36]
 solution : [10, 1, 8, 25, 31]


Before backtrack at level 6
 pending : [0, 2, 27, 28, 36]
 solution : [10, 1, 8, 25, 31]

After backtrack at level 6
 pending : [0, 2, 27, 28, 36, 24]
 solution : [10, 1, 8, 25, 31]


Before backtrack at level 5
 pending : [0, 2, 27, 28, 36, 24]
 solution : [10, 1, 8, 25, 31]

After backtrack at level 5
 pending : [0, 2, 27, 28, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 32]
 solution : [10, 1, 8, 25, 31]


Invert decision for 31 at level 4


New level: 5
 pending : [0, 2, 27, 28, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 32]
 solution : [10, 1, 8, 25]


Before reduction : 
 pending  : [0, 2, 27, 28, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 32]
 solution : [10, 1, 8, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, -1), (32, 4194304), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 2, 27, 28, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 32]
 solution : [10, 1, 8, 25]


Solution : [10, 1, 8, 25] has cost 12.


Decide in level 5 among pending : [0, 2, 27, 28, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 32]

Coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, -1), (32, 4194304), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [0, 2, 27, 28, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 32]


New level: 6
 pending : [0, 2, 27, 28, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 32]


Before reduction : 
 pending  : [0, 2, 27, 28, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, -1), (32, 4194304), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 16384), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {2, 27, 28}

After reduction : 
 pending  : [0, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 32]


Before reduction : 
 pending  : [0, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 16384), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 16384), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 32]


Solution : [10, 1, 8, 25, 32] has cost 25.


Before backtrack at level 6
 pending : [0, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 32]

After backtrack at level 6
 pending : [0, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [0, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25]


Before reduction : 
 pending  : [0, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 16384), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25]


Solution : [10, 1, 8, 25] has cost 12.


Decide in level 6 among pending : [0, 36, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]

Coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 36 with phase True at level 6

After decision at level 6
 pending : [0, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25, 36]


New level: 7
 pending : [0, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25, 36]


Before reduction : 
 pending  : [0, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25, 36]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, 2097152), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, 16384), (28, 512), (29, -1), (30, 16384), (31, -1), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25, 36]


Solution : [10, 1, 8, 25, 36] has cost 26.


Before backtrack at level 7
 pending : [0, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25, 36]

After backtrack at level 7
 pending : [0, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25, 36]


Invert decision for 36 at level 6


New level: 7
 pending : [0, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25]


Before reduction : 
 pending  : [0, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, 2097152), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, 16384), (28, 512), (29, -1), (30, 16384), (31, -1), (32, -1), (33, 16384), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25]


Solution : [10, 1, 8, 25] has cost 12.


Decide in level 7 among pending : [0, 24, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30, 33, 2, 27, 28]

Coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [0, 24, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25, 17]


New level: 8
 pending : [0, 24, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25, 17]


Before reduction : 
 pending  : [0, 24, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33, 2, 27, 28]
 solution : [10, 1, 8, 25, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [0, 24, 2, 27, 28]
 solution : [10, 1, 8, 25, 17]


Before reduction : 
 pending  : [0, 24, 2, 27, 28]
 solution : [10, 1, 8, 25, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 24, 2, 27, 28]
 solution : [10, 1, 8, 25, 17]


Solution : [10, 1, 8, 25, 17] has cost 19.


Decide in level 8 among pending : [0, 24, 2, 27, 28]

Coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 0 with phase True at level 8

After decision at level 8
 pending : [24, 2, 27, 28]
 solution : [10, 1, 8, 25, 17, 0]


New level: 9
 pending : [24, 2, 27, 28]
 solution : [10, 1, 8, 25, 17, 0]


Before reduction : 
 pending  : [24, 2, 27, 28]
 solution : [10, 1, 8, 25, 17, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {24, 2, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 17, 0]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 17, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 17, 0]


Solution : [10, 1, 8, 25, 17, 0] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [10, 1, 8, 25, 17, 0]

After backtrack at level 9
 pending : [24, 2, 27, 28]
 solution : [10, 1, 8, 25, 17, 0]


Invert decision for 0 at level 8


New level: 9
 pending : [24, 2, 27, 28]
 solution : [10, 1, 8, 25, 17]


Before reduction : 
 pending  : [24, 2, 27, 28]
 solution : [10, 1, 8, 25, 17]

Essensial at level 9 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {2, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 17, 24]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 17, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 17, 24]


Solution : [10, 1, 8, 25, 17, 24] has cost 26.


Before backtrack at level 9
 pending : []
 solution : [10, 1, 8, 25, 17, 24]

After backtrack at level 9
 pending : [24, 2, 27, 28]
 solution : [10, 1, 8, 25, 17]


Before backtrack at level 8
 pending : [24, 2, 27, 28]
 solution : [10, 1, 8, 25, 17]

After backtrack at level 8
 pending : [24, 2, 27, 28, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33, 0]
 solution : [10, 1, 8, 25, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [24, 2, 27, 28, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33, 0]
 solution : [10, 1, 8, 25]


Before reduction : 
 pending  : [24, 2, 27, 28, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33, 0]
 solution : [10, 1, 8, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, -1), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 2, 27, 28, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33, 0]
 solution : [10, 1, 8, 25]


Solution : [10, 1, 8, 25] has cost 12.


Decide in level 8 among pending : [24, 2, 27, 28, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33, 0]

Coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, -1), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [2, 27, 28, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33, 0]
 solution : [10, 1, 8, 25, 24]


New level: 9
 pending : [2, 27, 28, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33, 0]
 solution : [10, 1, 8, 25, 24]


Before reduction : 
 pending  : [2, 27, 28, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33, 0]
 solution : [10, 1, 8, 25, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, -1), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {0, 2, 27, 28}

After reduction : 
 pending  : [6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24]


Before reduction : 
 pending  : [6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24]


Solution : [10, 1, 8, 25, 24] has cost 19.


Decide in level 9 among pending : [6, 13, 14, 15, 16, 18, 19, 20, 21, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [6, 13, 14, 15, 16, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24, 18]


New level: 10
 pending : [6, 13, 14, 15, 16, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24, 18]


Before reduction : 
 pending  : [6, 13, 14, 15, 16, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {33, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 24, 18]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 24, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 24, 18]


Solution : [10, 1, 8, 25, 24, 18] has cost 26.


Before backtrack at level 10
 pending : []
 solution : [10, 1, 8, 25, 24, 18]

After backtrack at level 10
 pending : [6, 13, 14, 15, 16, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [6, 13, 14, 15, 16, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24]


Before reduction : 
 pending  : [6, 13, 14, 15, 16, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 13, 14, 15, 16, 19, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24]


Solution : [10, 1, 8, 25, 24] has cost 19.


Decide in level 10 among pending : [6, 13, 14, 15, 16, 19, 20, 21, 30, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 10

After decision at level 10
 pending : [6, 13, 14, 15, 16, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24, 19]


New level: 11
 pending : [6, 13, 14, 15, 16, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24, 19]


Before reduction : 
 pending  : [6, 13, 14, 15, 16, 20, 21, 30, 33]
 solution : [10, 1, 8, 25, 24, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 20, 21, 6}

After reduction : 
 pending  : [13, 14, 15, 30, 33]
 solution : [10, 1, 8, 25, 24, 19]


Before reduction : 
 pending  : [13, 14, 15, 30, 33]
 solution : [10, 1, 8, 25, 24, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [13, 14, 15, 30, 33]
 solution : [10, 1, 8, 25, 24, 19]


Solution : [10, 1, 8, 25, 24, 19] has cost 28.


Before backtrack at level 11
 pending : [13, 14, 15, 30, 33]
 solution : [10, 1, 8, 25, 24, 19]

After backtrack at level 11
 pending : [13, 14, 15, 30, 33, 6, 16, 20, 21]
 solution : [10, 1, 8, 25, 24, 19]


Invert decision for 19 at level 10


New level: 11
 pending : [13, 14, 15, 30, 33, 6, 16, 20, 21]
 solution : [10, 1, 8, 25, 24]


Before reduction : 
 pending  : [13, 14, 15, 30, 33, 6, 16, 20, 21]
 solution : [10, 1, 8, 25, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [13, 14, 15, 30, 33, 6, 16, 20, 21]
 solution : [10, 1, 8, 25, 24]


Solution : [10, 1, 8, 25, 24] has cost 19.


Decide in level 11 among pending : [13, 14, 15, 30, 33, 6, 16, 20, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [14, 15, 30, 33, 6, 16, 20, 21]
 solution : [10, 1, 8, 25, 24, 13]


New level: 12
 pending : [14, 15, 30, 33, 6, 16, 20, 21]
 solution : [10, 1, 8, 25, 24, 13]


Before reduction : 
 pending  : [14, 15, 30, 33, 6, 16, 20, 21]
 solution : [10, 1, 8, 25, 24, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 20, 21]
 solution : [10, 1, 8, 25, 24, 13]


Before reduction : 
 pending  : [30, 33, 6, 20, 21]
 solution : [10, 1, 8, 25, 24, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 6, 20, 21]
 solution : [10, 1, 8, 25, 24, 13]


Solution : [10, 1, 8, 25, 24, 13] has cost 26.


Before backtrack at level 12
 pending : [30, 33, 6, 20, 21]
 solution : [10, 1, 8, 25, 24, 13]

After backtrack at level 12
 pending : [30, 33, 6, 20, 21, 14, 15, 16]
 solution : [10, 1, 8, 25, 24, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [30, 33, 6, 20, 21, 14, 15, 16]
 solution : [10, 1, 8, 25, 24]


Before reduction : 
 pending  : [30, 33, 6, 20, 21, 14, 15, 16]
 solution : [10, 1, 8, 25, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 6, 20, 21, 14, 15, 16]
 solution : [10, 1, 8, 25, 24]


Solution : [10, 1, 8, 25, 24] has cost 19.


Decide in level 12 among pending : [30, 33, 6, 20, 21, 14, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 1, 8, 25, 24, 20]


New level: 13
 pending : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 1, 8, 25, 24, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 1, 8, 25, 24, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 1, 8, 25, 24, 20]


Before reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 1, 8, 25, 24, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 1, 8, 25, 24, 20]


Solution : [10, 1, 8, 25, 24, 20] has cost 28.


Before backtrack at level 13
 pending : [30, 33, 14, 15]
 solution : [10, 1, 8, 25, 24, 20]

After backtrack at level 13
 pending : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 1, 8, 25, 24, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 1, 8, 25, 24]


Before reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 1, 8, 25, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 1, 8, 25, 24]


Solution : [10, 1, 8, 25, 24] has cost 19.


Decide in level 13 among pending : [30, 33, 14, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [30, 33, 14, 6, 21, 16]
 solution : [10, 1, 8, 25, 24, 15]


New level: 14
 pending : [30, 33, 14, 6, 21, 16]
 solution : [10, 1, 8, 25, 24, 15]


Before reduction : 
 pending  : [30, 33, 14, 6, 21, 16]
 solution : [10, 1, 8, 25, 24, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : {16, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 8, 25, 24, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 8, 25, 24, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 8, 25, 24, 15]


Solution : [10, 1, 8, 25, 24, 15] has cost 26.


Before backtrack at level 14
 pending : [30, 33, 6, 21]
 solution : [10, 1, 8, 25, 24, 15]

After backtrack at level 14
 pending : [30, 33, 6, 21, 14, 16]
 solution : [10, 1, 8, 25, 24, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [30, 33, 6, 21, 14, 16]
 solution : [10, 1, 8, 25, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 16]
 solution : [10, 1, 8, 25, 24]

Essensial at level 14 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 25, 24, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 25, 24, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 25, 24, 14]


Solution : [10, 1, 8, 25, 24, 14] has cost 26.


Before backtrack at level 14
 pending : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 25, 24, 14]

After backtrack at level 14
 pending : [30, 33, 6, 21, 16, 14]
 solution : [10, 1, 8, 25, 24]


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14]
 solution : [10, 1, 8, 25, 24]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 15]
 solution : [10, 1, 8, 25, 24]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 15]
 solution : [10, 1, 8, 25, 24]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 15, 20]
 solution : [10, 1, 8, 25, 24]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20]
 solution : [10, 1, 8, 25, 24]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 8, 25, 24]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 8, 25, 24]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 25, 24]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 25, 24]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 2, 27, 28, 0, 18]
 solution : [10, 1, 8, 25, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 2, 27, 28, 0, 18]
 solution : [10, 1, 8, 25]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 2, 27, 28, 0, 18]
 solution : [10, 1, 8, 25]

Essensial at level 9 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 25, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 25, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 25, 0]


Solution : [10, 1, 8, 25, 0] has cost 16.


Decide in level 9 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 25, 0, 18]


New level: 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 25, 0, 18]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 25, 0, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {33, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 0, 18]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 0, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 25, 0, 18]


Solution : [10, 1, 8, 25, 0, 18] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [10, 1, 8, 25, 0, 18]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 25, 0, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 25, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 25, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 25, 0]


Solution : [10, 1, 8, 25, 0] has cost 16.


Decide in level 10 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 10

After decision at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 8, 25, 0, 19]


New level: 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 8, 25, 0, 19]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 8, 25, 0, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 20, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 1, 8, 25, 0, 19]


Before reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 1, 8, 25, 0, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 1, 8, 25, 0, 19]


Solution : [10, 1, 8, 25, 0, 19] has cost 25.


Before backtrack at level 11
 pending : [30, 33, 14, 15, 13]
 solution : [10, 1, 8, 25, 0, 19]

After backtrack at level 11
 pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 8, 25, 0, 19]


Invert decision for 19 at level 10


New level: 11
 pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 8, 25, 0]


Before reduction : 
 pending  : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 8, 25, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 8, 25, 0]


Solution : [10, 1, 8, 25, 0] has cost 16.


Decide in level 11 among pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 1, 8, 25, 0, 13]


New level: 12
 pending : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 1, 8, 25, 0, 13]


Before reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 1, 8, 25, 0, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 8, 25, 0, 13]


Before reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 8, 25, 0, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 8, 25, 0, 13]


Solution : [10, 1, 8, 25, 0, 13] has cost 23.


Before backtrack at level 12
 pending : [30, 33, 6, 21, 20]
 solution : [10, 1, 8, 25, 0, 13]

After backtrack at level 12
 pending : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 1, 8, 25, 0, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 1, 8, 25, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 1, 8, 25, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 1, 8, 25, 0]


Solution : [10, 1, 8, 25, 0] has cost 16.


Decide in level 12 among pending : [30, 33, 6, 21, 20, 14, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 1, 8, 25, 0, 20]


New level: 13
 pending : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 1, 8, 25, 0, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 1, 8, 25, 0, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 1, 8, 25, 0, 20]


Before reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 1, 8, 25, 0, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 1, 8, 25, 0, 20]


Solution : [10, 1, 8, 25, 0, 20] has cost 25.


Before backtrack at level 13
 pending : [30, 33, 14, 15]
 solution : [10, 1, 8, 25, 0, 20]

After backtrack at level 13
 pending : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 1, 8, 25, 0, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 1, 8, 25, 0]


Before reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 1, 8, 25, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 1, 8, 25, 0]


Solution : [10, 1, 8, 25, 0] has cost 16.


Decide in level 13 among pending : [30, 33, 14, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [30, 33, 14, 6, 21, 16]
 solution : [10, 1, 8, 25, 0, 15]


New level: 14
 pending : [30, 33, 14, 6, 21, 16]
 solution : [10, 1, 8, 25, 0, 15]


Before reduction : 
 pending  : [30, 33, 14, 6, 21, 16]
 solution : [10, 1, 8, 25, 0, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : {16, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 8, 25, 0, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 8, 25, 0, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 8, 25, 0, 15]


Solution : [10, 1, 8, 25, 0, 15] has cost 23.


Before backtrack at level 14
 pending : [30, 33, 6, 21]
 solution : [10, 1, 8, 25, 0, 15]

After backtrack at level 14
 pending : [30, 33, 6, 21, 14, 16]
 solution : [10, 1, 8, 25, 0, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [30, 33, 6, 21, 14, 16]
 solution : [10, 1, 8, 25, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 16]
 solution : [10, 1, 8, 25, 0]

Essensial at level 14 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 25, 0, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 25, 0, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 25, 0, 14]


Solution : [10, 1, 8, 25, 0, 14] has cost 23.


Before backtrack at level 14
 pending : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 25, 0, 14]

After backtrack at level 14
 pending : [30, 33, 6, 21, 16, 14]
 solution : [10, 1, 8, 25, 0]


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14]
 solution : [10, 1, 8, 25, 0]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 15]
 solution : [10, 1, 8, 25, 0]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 15]
 solution : [10, 1, 8, 25, 0]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 15, 20]
 solution : [10, 1, 8, 25, 0]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20]
 solution : [10, 1, 8, 25, 0]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 8, 25, 0]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 8, 25, 0]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 25, 0]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 25, 0]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18]
 solution : [10, 1, 8, 25]


Before backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18]
 solution : [10, 1, 8, 25]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24]
 solution : [10, 1, 8, 25]


Before backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24]
 solution : [10, 1, 8, 25]

After backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17]
 solution : [10, 1, 8, 25]


Before backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17]
 solution : [10, 1, 8, 25]

After backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36]
 solution : [10, 1, 8, 25]


Before backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36]
 solution : [10, 1, 8, 25]

After backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 32]
 solution : [10, 1, 8, 25]


Before backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 32]
 solution : [10, 1, 8, 25]

After backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 32, 31]
 solution : [10, 1, 8, 25]


Invert decision for 25 at level 3


New level: 4
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 32, 31]
 solution : [10, 1, 8]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 32, 31]
 solution : [10, 1, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 32768), (31, 4194304), (32, 8388608), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 32, 31]
 solution : [10, 1, 8]


Solution : [10, 1, 8] has cost 8.


Decide in level 4 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 32, 31]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 32768), (31, 4194304), (32, 8388608), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 31]
 solution : [10, 1, 8, 32]


New level: 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 31]
 solution : [10, 1, 8, 32]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 31]
 solution : [10, 1, 8, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 32768), (31, 4194304), (32, 8388608), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 16384), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, 4194304), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 18, 24, 17, 36, 31]
 solution : [10, 1, 8, 32]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 18, 24, 17, 36, 31]
 solution : [10, 1, 8, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 16384), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, 4194304), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 16384), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, 4194304), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 18, 24, 17, 36, 31]
 solution : [10, 1, 8, 32]


Solution : [10, 1, 8, 32] has cost 21.


Before backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 18, 24, 17, 36, 31]
 solution : [10, 1, 8, 32]

After backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 18, 24, 17, 36, 31, 2, 27, 28]
 solution : [10, 1, 8, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 18, 24, 17, 36, 31, 2, 27, 28]
 solution : [10, 1, 8]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 18, 24, 17, 36, 31, 2, 27, 28]
 solution : [10, 1, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 16384), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, 4194304), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 32768), (31, 4194304), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 18, 24, 17, 36, 31, 2, 27, 28]
 solution : [10, 1, 8]


Solution : [10, 1, 8] has cost 8.


Decide in level 5 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 18, 24, 17, 36, 31, 2, 27, 28]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 32768), (31, 4194304), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 31 with phase True at level 5

After decision at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 18, 24, 17, 36, 2, 27, 28]
 solution : [10, 1, 8, 31]


New level: 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 18, 24, 17, 36, 2, 27, 28]
 solution : [10, 1, 8, 31]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 18, 24, 17, 36, 2, 27, 28]
 solution : [10, 1, 8, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 32768), (31, 4194304), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [0, 24, 36, 2, 27, 28]
 solution : [10, 1, 8, 31]


Before reduction : 
 pending  : [0, 24, 36, 2, 27, 28]
 solution : [10, 1, 8, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 24, 36, 2, 27, 28]
 solution : [10, 1, 8, 31]


Solution : [10, 1, 8, 31] has cost 12.


Decide in level 6 among pending : [0, 24, 36, 2, 27, 28]

Coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 0 with phase True at level 6

After decision at level 6
 pending : [24, 36, 2, 27, 28]
 solution : [10, 1, 8, 31, 0]


New level: 7
 pending : [24, 36, 2, 27, 28]
 solution : [10, 1, 8, 31, 0]


Before reduction : 
 pending  : [24, 36, 2, 27, 28]
 solution : [10, 1, 8, 31, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 36, 24, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 31, 0]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 31, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 31, 0]


Solution : [10, 1, 8, 31, 0] has cost 16.


Before backtrack at level 7
 pending : []
 solution : [10, 1, 8, 31, 0]

After backtrack at level 7
 pending : [24, 36, 2, 27, 28]
 solution : [10, 1, 8, 31, 0]


Invert decision for 0 at level 6


New level: 7
 pending : [24, 36, 2, 27, 28]
 solution : [10, 1, 8, 31]


Before reduction : 
 pending  : [24, 36, 2, 27, 28]
 solution : [10, 1, 8, 31]

Essensial at level 7 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 27, 36, 28}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 31, 24]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 31, 24]


Solution : [10, 1, 8, 31, 24] has cost 19.


Before backtrack at level 7
 pending : []
 solution : [10, 1, 8, 31, 24]

After backtrack at level 7
 pending : [24, 36, 2, 27, 28]
 solution : [10, 1, 8, 31]


Before backtrack at level 6
 pending : [24, 36, 2, 27, 28]
 solution : [10, 1, 8, 31]

After backtrack at level 6
 pending : [24, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 0]
 solution : [10, 1, 8, 31]


Invert decision for 31 at level 5


New level: 6
 pending : [24, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 0]
 solution : [10, 1, 8]


Before reduction : 
 pending  : [24, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 0]
 solution : [10, 1, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 0]
 solution : [10, 1, 8]


Solution : [10, 1, 8] has cost 8.


Decide in level 6 among pending : [24, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 0]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 0]
 solution : [10, 1, 8, 24]


New level: 7
 pending : [36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 0]
 solution : [10, 1, 8, 24]


Before reduction : 
 pending  : [36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 0]
 solution : [10, 1, 8, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 16384), (17, 2097152), (18, 1048576), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, 2097152), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {0, 2, 27, 28}

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17]
 solution : [10, 1, 8, 24]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17]
 solution : [10, 1, 8, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, 2097152), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, 2097152), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17]
 solution : [10, 1, 8, 24]


Solution : [10, 1, 8, 24] has cost 15.


Decide in level 7 among pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, 2097152), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 24, 17]


New level: 8
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 24, 17]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 24, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, 2097152), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 36, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 24, 17]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 24, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 24, 17]


Solution : [10, 1, 8, 24, 17] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [10, 1, 8, 24, 17]

After backtrack at level 8
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 24, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 24]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 24]


Solution : [10, 1, 8, 24] has cost 15.


Decide in level 8 among pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 24, 18]


New level: 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 24, 18]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 24, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 36, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 24, 18]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 24, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 24, 18]


Solution : [10, 1, 8, 24, 18] has cost 22.


Before backtrack at level 9
 pending : []
 solution : [10, 1, 8, 24, 18]

After backtrack at level 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 24, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 24]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 8, 24]


Solution : [10, 1, 8, 24] has cost 15.


Decide in level 9 among pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 8, 24, 19]


New level: 10
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 8, 24, 19]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 8, 24, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {16, 20, 21, 6}

After reduction : 
 pending  : [36, 30, 33, 14, 15, 13]
 solution : [10, 1, 8, 24, 19]


Before reduction : 
 pending  : [36, 30, 33, 14, 15, 13]
 solution : [10, 1, 8, 24, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 30, 33, 14, 15, 13]
 solution : [10, 1, 8, 24, 19]


Solution : [10, 1, 8, 24, 19] has cost 24.


Before backtrack at level 10
 pending : [36, 30, 33, 14, 15, 13]
 solution : [10, 1, 8, 24, 19]

After backtrack at level 10
 pending : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 8, 24, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 8, 24]


Before reduction : 
 pending  : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 8, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 8, 24]


Solution : [10, 1, 8, 24] has cost 15.


Decide in level 10 among pending : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [36, 30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 1, 8, 24, 13]


New level: 11
 pending : [36, 30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 1, 8, 24, 13]


Before reduction : 
 pending  : [36, 30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 1, 8, 24, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 36, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 8, 24, 13]


Before reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 8, 24, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 8, 24, 13]


Solution : [10, 1, 8, 24, 13] has cost 22.


Before backtrack at level 11
 pending : [30, 33, 6, 21, 20]
 solution : [10, 1, 8, 24, 13]

After backtrack at level 11
 pending : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 1, 8, 24, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 1, 8, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 1, 8, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 1, 8, 24]


Solution : [10, 1, 8, 24] has cost 15.


Decide in level 11 among pending : [30, 33, 6, 21, 20, 36, 14, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 11

After decision at level 11
 pending : [30, 33, 6, 21, 36, 14, 15, 16]
 solution : [10, 1, 8, 24, 20]


New level: 12
 pending : [30, 33, 6, 21, 36, 14, 15, 16]
 solution : [10, 1, 8, 24, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 36, 14, 15, 16]
 solution : [10, 1, 8, 24, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 36, 14, 15]
 solution : [10, 1, 8, 24, 20]


Before reduction : 
 pending  : [30, 33, 36, 14, 15]
 solution : [10, 1, 8, 24, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 36, 14, 15]
 solution : [10, 1, 8, 24, 20]


Solution : [10, 1, 8, 24, 20] has cost 24.


Before backtrack at level 12
 pending : [30, 33, 36, 14, 15]
 solution : [10, 1, 8, 24, 20]

After backtrack at level 12
 pending : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 1, 8, 24, 20]


Invert decision for 20 at level 11


New level: 12
 pending : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 1, 8, 24]


Before reduction : 
 pending  : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 1, 8, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 1, 8, 24]


Solution : [10, 1, 8, 24] has cost 15.


Decide in level 12 among pending : [30, 33, 36, 14, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [30, 33, 36, 14, 6, 21, 16]
 solution : [10, 1, 8, 24, 15]


New level: 13
 pending : [30, 33, 36, 14, 6, 21, 16]
 solution : [10, 1, 8, 24, 15]


Before reduction : 
 pending  : [30, 33, 36, 14, 6, 21, 16]
 solution : [10, 1, 8, 24, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 36, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 8, 24, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 8, 24, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 8, 24, 15]


Solution : [10, 1, 8, 24, 15] has cost 22.


Before backtrack at level 13
 pending : [30, 33, 6, 21]
 solution : [10, 1, 8, 24, 15]

After backtrack at level 13
 pending : [30, 33, 6, 21, 36, 14, 16]
 solution : [10, 1, 8, 24, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [30, 33, 6, 21, 36, 14, 16]
 solution : [10, 1, 8, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 36, 14, 16]
 solution : [10, 1, 8, 24]

Essensial at level 13 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {36}

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 24, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 24, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 24, 14]


Solution : [10, 1, 8, 24, 14] has cost 22.


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 24, 14]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 1, 8, 24]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 1, 8, 24]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 1, 8, 24]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 1, 8, 24]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 1, 8, 24]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 1, 8, 24]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 8, 24]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 8, 24]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 8, 24]


Before backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 8, 24]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 24]


Before backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 24]

After backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 2, 27, 28, 0, 17]
 solution : [10, 1, 8, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 2, 27, 28, 0, 17]
 solution : [10, 1, 8]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 2, 27, 28, 0, 17]
 solution : [10, 1, 8]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, 2097152), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 17]
 solution : [10, 1, 8, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 17]
 solution : [10, 1, 8, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, 2097152), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, 2097152), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 17]
 solution : [10, 1, 8, 0]


Solution : [10, 1, 8, 0] has cost 12.


Decide in level 7 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, 2097152), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 0, 17]


New level: 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 0, 17]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 0, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, 2097152), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 36, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 0, 17]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 0, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 0, 17]


Solution : [10, 1, 8, 0, 17] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [10, 1, 8, 0, 17]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 0, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 0]


Solution : [10, 1, 8, 0] has cost 12.


Decide in level 8 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 8, 0, 18]


New level: 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 8, 0, 18]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 8, 0, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, 1048576), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 36, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 1, 8, 0, 18]


Before reduction : 
 pending  : []
 solution : [10, 1, 8, 0, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 8, 0, 18]


Solution : [10, 1, 8, 0, 18] has cost 19.


Before backtrack at level 9
 pending : []
 solution : [10, 1, 8, 0, 18]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 8, 0, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 8, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 8, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 8, 0]


Solution : [10, 1, 8, 0] has cost 12.


Decide in level 9 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 8, 0, 19]


New level: 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 8, 0, 19]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 8, 0, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, 262144), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {16, 20, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 36, 15, 13]
 solution : [10, 1, 8, 0, 19]


Before reduction : 
 pending  : [30, 33, 14, 36, 15, 13]
 solution : [10, 1, 8, 0, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 14, 36, 15, 13]
 solution : [10, 1, 8, 0, 19]


Solution : [10, 1, 8, 0, 19] has cost 21.


Before backtrack at level 10
 pending : [30, 33, 14, 36, 15, 13]
 solution : [10, 1, 8, 0, 19]

After backtrack at level 10
 pending : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 8, 0, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 8, 0]


Before reduction : 
 pending  : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 8, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16384), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 8, 0]


Solution : [10, 1, 8, 0] has cost 12.


Decide in level 10 among pending : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [30, 33, 14, 36, 15, 6, 21, 16, 20]
 solution : [10, 1, 8, 0, 13]


New level: 11
 pending : [30, 33, 14, 36, 15, 6, 21, 16, 20]
 solution : [10, 1, 8, 0, 13]


Before reduction : 
 pending  : [30, 33, 14, 36, 15, 6, 21, 16, 20]
 solution : [10, 1, 8, 0, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 36, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 8, 0, 13]


Before reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 8, 0, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 8, 0, 13]


Solution : [10, 1, 8, 0, 13] has cost 19.


Before backtrack at level 11
 pending : [30, 33, 6, 21, 20]
 solution : [10, 1, 8, 0, 13]

After backtrack at level 11
 pending : [30, 33, 6, 21, 20, 14, 36, 15, 16]
 solution : [10, 1, 8, 0, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [30, 33, 6, 21, 20, 14, 36, 15, 16]
 solution : [10, 1, 8, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 36, 15, 16]
 solution : [10, 1, 8, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8192), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 36, 15, 16]
 solution : [10, 1, 8, 0]


Solution : [10, 1, 8, 0] has cost 12.


Decide in level 11 among pending : [30, 33, 6, 21, 20, 14, 36, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 11

After decision at level 11
 pending : [30, 33, 6, 21, 14, 36, 15, 16]
 solution : [10, 1, 8, 0, 20]


New level: 12
 pending : [30, 33, 6, 21, 14, 36, 15, 16]
 solution : [10, 1, 8, 0, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 36, 15, 16]
 solution : [10, 1, 8, 0, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 36, 15]
 solution : [10, 1, 8, 0, 20]


Before reduction : 
 pending  : [30, 33, 14, 36, 15]
 solution : [10, 1, 8, 0, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 14, 36, 15]
 solution : [10, 1, 8, 0, 20]


Solution : [10, 1, 8, 0, 20] has cost 21.


Before backtrack at level 12
 pending : [30, 33, 14, 36, 15]
 solution : [10, 1, 8, 0, 20]

After backtrack at level 12
 pending : [30, 33, 14, 36, 15, 6, 21, 16]
 solution : [10, 1, 8, 0, 20]


Invert decision for 20 at level 11


New level: 12
 pending : [30, 33, 14, 36, 15, 6, 21, 16]
 solution : [10, 1, 8, 0]


Before reduction : 
 pending  : [30, 33, 14, 36, 15, 6, 21, 16]
 solution : [10, 1, 8, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 4096), (15, 4096), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 14, 36, 15, 6, 21, 16]
 solution : [10, 1, 8, 0]


Solution : [10, 1, 8, 0] has cost 12.


Decide in level 12 among pending : [30, 33, 14, 36, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [30, 33, 14, 36, 6, 21, 16]
 solution : [10, 1, 8, 0, 15]


New level: 13
 pending : [30, 33, 14, 36, 6, 21, 16]
 solution : [10, 1, 8, 0, 15]


Before reduction : 
 pending  : [30, 33, 14, 36, 6, 21, 16]
 solution : [10, 1, 8, 0, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 65536), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 36, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 8, 0, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 8, 0, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 8, 0, 15]


Solution : [10, 1, 8, 0, 15] has cost 19.


Before backtrack at level 13
 pending : [30, 33, 6, 21]
 solution : [10, 1, 8, 0, 15]

After backtrack at level 13
 pending : [30, 33, 6, 21, 14, 36, 16]
 solution : [10, 1, 8, 0, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [30, 33, 6, 21, 14, 36, 16]
 solution : [10, 1, 8, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 36, 16]
 solution : [10, 1, 8, 0]

Essensial at level 13 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8192), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {36}

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 0, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 0, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 0, 14]


Solution : [10, 1, 8, 0, 14] has cost 19.


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16]
 solution : [10, 1, 8, 0, 14]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 1, 8, 0]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 1, 8, 0]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 1, 8, 0]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 1, 8, 0]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 1, 8, 0]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 1, 8, 0]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 8, 0]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 8, 0]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 8, 0]


Before backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 8, 0]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 0]


Before backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 8, 0]

After backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17]
 solution : [10, 1, 8]


Before backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17]
 solution : [10, 1, 8]

After backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24]
 solution : [10, 1, 8]


Before backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24]
 solution : [10, 1, 8]

After backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24, 31]
 solution : [10, 1, 8]


Before backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24, 31]
 solution : [10, 1, 8]

After backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24, 31, 32]
 solution : [10, 1, 8]


Before backtrack at level 3
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24, 31, 32]
 solution : [10, 1, 8]

After backtrack at level 3
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24, 31, 32, 25]
 solution : [10, 1, 8]


Invert decision for 8 at level 2


New level: 3
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24, 31, 32, 25]
 solution : [10, 1]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24, 31, 32, 25]
 solution : [10, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 4096), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, 8388608), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24, 31, 32, 25]
 solution : [10, 1]


Solution : [10, 1] has cost 6.


Decide in level 3 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24, 31, 32, 25]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, 8388608), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 31 with phase True at level 3

After decision at level 3
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24, 32, 25]
 solution : [10, 1, 31]


New level: 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24, 32, 25]
 solution : [10, 1, 31]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 0, 2, 27, 28, 17, 24, 32, 25]
 solution : [10, 1, 31]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, 8388608), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 0), (31, -1), (32, 8388608), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : {33, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [36, 0, 2, 27, 28, 24, 32, 25]
 solution : [10, 1, 31]


Before reduction : 
 pending  : [36, 0, 2, 27, 28, 24, 32, 25]
 solution : [10, 1, 31]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 0), (31, -1), (32, 8388608), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, 8388608), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [36, 0, 2, 27, 28, 24, 32, 25]
 solution : [10, 1, 31]


Solution : [10, 1, 31] has cost 10.


Decide in level 4 among pending : [36, 0, 2, 27, 28, 24, 32, 25]

Coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, 8388608), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [36, 0, 2, 27, 28, 24, 25]
 solution : [10, 1, 31, 32]


New level: 5
 pending : [36, 0, 2, 27, 28, 24, 25]
 solution : [10, 1, 31, 32]


Before reduction : 
 pending  : [36, 0, 2, 27, 28, 24, 25]
 solution : [10, 1, 31, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, 8388608), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, 8388608), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {2, 27, 36, 28}

After reduction : 
 pending  : [0, 24, 25]
 solution : [10, 1, 31, 32]


Before reduction : 
 pending  : [0, 24, 25]
 solution : [10, 1, 31, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, 8388608), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, 8388608), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 24, 25]
 solution : [10, 1, 31, 32]


Solution : [10, 1, 31, 32] has cost 23.


Before backtrack at level 5
 pending : [0, 24, 25]
 solution : [10, 1, 31, 32]

After backtrack at level 5
 pending : [0, 24, 25, 36, 2, 27, 28]
 solution : [10, 1, 31, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [0, 24, 25, 36, 2, 27, 28]
 solution : [10, 1, 31]


Before reduction : 
 pending  : [0, 24, 25, 36, 2, 27, 28]
 solution : [10, 1, 31]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1024), (25, 8388608), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 24, 25, 36, 2, 27, 28]
 solution : [10, 1, 31]


Solution : [10, 1, 31] has cost 10.


Decide in level 5 among pending : [0, 24, 25, 36, 2, 27, 28]

Coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 25 with phase True at level 5

After decision at level 5
 pending : [0, 24, 36, 2, 27, 28]
 solution : [10, 1, 31, 25]


New level: 6
 pending : [0, 24, 36, 2, 27, 28]
 solution : [10, 1, 31, 25]


Before reduction : 
 pending  : [0, 24, 36, 2, 27, 28]
 solution : [10, 1, 31, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 24, 36, 2, 27, 28]
 solution : [10, 1, 31, 25]


Solution : [10, 1, 31, 25] has cost 14.


Decide in level 6 among pending : [0, 24, 36, 2, 27, 28]

Coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 0 with phase True at level 6

After decision at level 6
 pending : [24, 36, 2, 27, 28]
 solution : [10, 1, 31, 25, 0]


New level: 7
 pending : [24, 36, 2, 27, 28]
 solution : [10, 1, 31, 25, 0]


Before reduction : 
 pending  : [24, 36, 2, 27, 28]
 solution : [10, 1, 31, 25, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 36, 24, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 1, 31, 25, 0]


Before reduction : 
 pending  : []
 solution : [10, 1, 31, 25, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 31, 25, 0]


Solution : [10, 1, 31, 25, 0] has cost 18.


Before backtrack at level 7
 pending : []
 solution : [10, 1, 31, 25, 0]

After backtrack at level 7
 pending : [24, 36, 2, 27, 28]
 solution : [10, 1, 31, 25, 0]


Invert decision for 0 at level 6


New level: 7
 pending : [24, 36, 2, 27, 28]
 solution : [10, 1, 31, 25]


Before reduction : 
 pending  : [24, 36, 2, 27, 28]
 solution : [10, 1, 31, 25]

Essensial at level 7 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 27, 36, 28}

After reduction : 
 pending  : []
 solution : [10, 1, 31, 25, 24]


Before reduction : 
 pending  : []
 solution : [10, 1, 31, 25, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 31, 25, 24]


Solution : [10, 1, 31, 25, 24] has cost 21.


Before backtrack at level 7
 pending : []
 solution : [10, 1, 31, 25, 24]

After backtrack at level 7
 pending : [24, 36, 2, 27, 28]
 solution : [10, 1, 31, 25]


Before backtrack at level 6
 pending : [24, 36, 2, 27, 28]
 solution : [10, 1, 31, 25]

After backtrack at level 6
 pending : [24, 36, 2, 27, 28, 0]
 solution : [10, 1, 31, 25]


Invert decision for 25 at level 5


New level: 6
 pending : [24, 36, 2, 27, 28, 0]
 solution : [10, 1, 31]


Before reduction : 
 pending  : [24, 36, 2, 27, 28, 0]
 solution : [10, 1, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 36, 2, 27, 28, 0]
 solution : [10, 1, 31]


Solution : [10, 1, 31] has cost 10.


Decide in level 6 among pending : [24, 36, 2, 27, 28, 0]

Coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [36, 2, 27, 28, 0]
 solution : [10, 1, 31, 24]


New level: 7
 pending : [36, 2, 27, 28, 0]
 solution : [10, 1, 31, 24]


Before reduction : 
 pending  : [36, 2, 27, 28, 0]
 solution : [10, 1, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {0, 2, 36, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 1, 31, 24]


Before reduction : 
 pending  : []
 solution : [10, 1, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 31, 24]


Solution : [10, 1, 31, 24] has cost 17.


Before backtrack at level 7
 pending : []
 solution : [10, 1, 31, 24]

After backtrack at level 7
 pending : [36, 2, 27, 28, 0]
 solution : [10, 1, 31, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [36, 2, 27, 28, 0]
 solution : [10, 1, 31]


Before reduction : 
 pending  : [36, 2, 27, 28, 0]
 solution : [10, 1, 31]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 27, 36, 28}

After reduction : 
 pending  : []
 solution : [10, 1, 31, 0]


Before reduction : 
 pending  : []
 solution : [10, 1, 31, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 31, 0]


Solution : [10, 1, 31, 0] has cost 14.


Before backtrack at level 7
 pending : []
 solution : [10, 1, 31, 0]

After backtrack at level 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 1, 31]


Before backtrack at level 6
 pending : [0, 36, 2, 27, 28]
 solution : [10, 1, 31]

After backtrack at level 6
 pending : [0, 36, 2, 27, 28, 24]
 solution : [10, 1, 31]


Before backtrack at level 5
 pending : [0, 36, 2, 27, 28, 24]
 solution : [10, 1, 31]

After backtrack at level 5
 pending : [0, 36, 2, 27, 28, 24, 25]
 solution : [10, 1, 31]


Before backtrack at level 4
 pending : [0, 36, 2, 27, 28, 24, 25]
 solution : [10, 1, 31]

After backtrack at level 4
 pending : [0, 36, 2, 27, 28, 24, 25, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]
 solution : [10, 1, 31]


Invert decision for 31 at level 3


New level: 4
 pending : [0, 36, 2, 27, 28, 24, 25, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]
 solution : [10, 1]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 25, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]
 solution : [10, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 25, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]
 solution : [10, 1]


Solution : [10, 1] has cost 6.


Decide in level 4 among pending : [0, 36, 2, 27, 28, 24, 25, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 25 with phase True at level 4

After decision at level 4
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]
 solution : [10, 1, 25]


New level: 5
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]
 solution : [10, 1, 25]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]
 solution : [10, 1, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, 8388608), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, 4194304), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]
 solution : [10, 1, 25]


Solution : [10, 1, 25] has cost 10.


Decide in level 5 among pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]

Coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, 4194304), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 5

After decision at level 5
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 32]
 solution : [10, 1, 25, 17]


New level: 6
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 32]
 solution : [10, 1, 25, 17]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 32]
 solution : [10, 1, 25, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, 4194304), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 0), (31, -1), (32, 4194304), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 32]
 solution : [10, 1, 25, 17]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 32]
 solution : [10, 1, 25, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 0), (31, -1), (32, 4194304), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, 4194304), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 32]
 solution : [10, 1, 25, 17]


Solution : [10, 1, 25, 17] has cost 17.


Before backtrack at level 6
 pending : [0, 36, 2, 27, 28, 24, 32]
 solution : [10, 1, 25, 17]

After backtrack at level 6
 pending : [0, 36, 2, 27, 28, 24, 32, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 25, 17]


Invert decision for 17 at level 5


New level: 6
 pending : [0, 36, 2, 27, 28, 24, 32, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 25]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 32, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, 4194304), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, 4194304), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 32, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 25]


Solution : [10, 1, 25] has cost 10.


Decide in level 6 among pending : [0, 36, 2, 27, 28, 24, 32, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]

Coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, 4194304), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 25, 32]


New level: 7
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 25, 32]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 25, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, 4194304), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 27, 28}

After reduction : 
 pending  : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 25, 32]


Before reduction : 
 pending  : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 25, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 25, 32]


Solution : [10, 1, 25, 32] has cost 23.


Before backtrack at level 7
 pending : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 25, 32]

After backtrack at level 7
 pending : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25]


Before reduction : 
 pending  : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 1024), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 1024), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25]


Solution : [10, 1, 25] has cost 10.


Decide in level 7 among pending : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]

Coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 36 with phase True at level 7

After decision at level 7
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25, 36]


New level: 8
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25, 36]


Before reduction : 
 pending  : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25, 36]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 524288), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, 16384), (28, 512), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25, 36]


Solution : [10, 1, 25, 36] has cost 24.


Before backtrack at level 8
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25, 36]

After backtrack at level 8
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25, 36]


Invert decision for 36 at level 7


New level: 8
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25]


Before reduction : 
 pending  : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 524288), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, 16384), (28, 512), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 1, 25]


Solution : [10, 1, 25] has cost 10.


Decide in level 8 among pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]

Coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 2, 27, 28]
 solution : [10, 1, 25, 18]


New level: 9
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 2, 27, 28]
 solution : [10, 1, 25, 18]


Before reduction : 
 pending  : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 2, 27, 28]
 solution : [10, 1, 25, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : [0, 24, 2, 27, 28]
 solution : [10, 1, 25, 18]


Before reduction : 
 pending  : [0, 24, 2, 27, 28]
 solution : [10, 1, 25, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 24, 2, 27, 28]
 solution : [10, 1, 25, 18]


Solution : [10, 1, 25, 18] has cost 17.


Before backtrack at level 9
 pending : [0, 24, 2, 27, 28]
 solution : [10, 1, 25, 18]

After backtrack at level 9
 pending : [0, 24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [0, 24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25]


Before reduction : 
 pending  : [0, 24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 16384), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25]


Solution : [10, 1, 25] has cost 10.


Decide in level 9 among pending : [0, 24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]

Coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 0 with phase True at level 9

After decision at level 9
 pending : [24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25, 0]


New level: 10
 pending : [24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25, 0]


Before reduction : 
 pending  : [24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {24, 2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25, 0]


Solution : [10, 1, 25, 0] has cost 14.


Decide in level 10 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 10

After decision at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 25, 0, 19]


New level: 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 25, 0, 19]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 25, 0, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 20, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 1, 25, 0, 19]


Before reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 1, 25, 0, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 1, 25, 0, 19]


Solution : [10, 1, 25, 0, 19] has cost 23.


Before backtrack at level 11
 pending : [30, 33, 14, 15, 13]
 solution : [10, 1, 25, 0, 19]

After backtrack at level 11
 pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 25, 0, 19]


Invert decision for 19 at level 10


New level: 11
 pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 25, 0]


Before reduction : 
 pending  : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 25, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 25, 0]


Solution : [10, 1, 25, 0] has cost 14.


Decide in level 11 among pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 1, 25, 0, 13]


New level: 12
 pending : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 1, 25, 0, 13]


Before reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 1, 25, 0, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 25, 0, 13]


Before reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 25, 0, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 25, 0, 13]


Solution : [10, 1, 25, 0, 13] has cost 21.


Before backtrack at level 12
 pending : [30, 33, 6, 21, 20]
 solution : [10, 1, 25, 0, 13]

After backtrack at level 12
 pending : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 1, 25, 0, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 1, 25, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 1, 25, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 1, 25, 0]


Solution : [10, 1, 25, 0] has cost 14.


Decide in level 12 among pending : [30, 33, 6, 21, 20, 14, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 1, 25, 0, 20]


New level: 13
 pending : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 1, 25, 0, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 1, 25, 0, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 1, 25, 0, 20]


Before reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 1, 25, 0, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 1, 25, 0, 20]


Solution : [10, 1, 25, 0, 20] has cost 23.


Before backtrack at level 13
 pending : [30, 33, 14, 15]
 solution : [10, 1, 25, 0, 20]

After backtrack at level 13
 pending : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 1, 25, 0, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 1, 25, 0]


Before reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 1, 25, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 1, 25, 0]


Solution : [10, 1, 25, 0] has cost 14.


Decide in level 13 among pending : [30, 33, 14, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [30, 33, 14, 6, 21, 16]
 solution : [10, 1, 25, 0, 15]


New level: 14
 pending : [30, 33, 14, 6, 21, 16]
 solution : [10, 1, 25, 0, 15]


Before reduction : 
 pending  : [30, 33, 14, 6, 21, 16]
 solution : [10, 1, 25, 0, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : {16, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 25, 0, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 25, 0, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 25, 0, 15]


Solution : [10, 1, 25, 0, 15] has cost 21.


Before backtrack at level 14
 pending : [30, 33, 6, 21]
 solution : [10, 1, 25, 0, 15]

After backtrack at level 14
 pending : [30, 33, 6, 21, 14, 16]
 solution : [10, 1, 25, 0, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [30, 33, 6, 21, 14, 16]
 solution : [10, 1, 25, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 16]
 solution : [10, 1, 25, 0]

Essensial at level 14 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 25, 0, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 25, 0, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 25, 0, 14]


Solution : [10, 1, 25, 0, 14] has cost 21.


Before backtrack at level 14
 pending : [30, 33, 6, 21, 16]
 solution : [10, 1, 25, 0, 14]

After backtrack at level 14
 pending : [30, 33, 6, 21, 16, 14]
 solution : [10, 1, 25, 0]


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14]
 solution : [10, 1, 25, 0]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 15]
 solution : [10, 1, 25, 0]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 15]
 solution : [10, 1, 25, 0]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 15, 20]
 solution : [10, 1, 25, 0]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20]
 solution : [10, 1, 25, 0]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 25, 0]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 25, 0]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 24, 2, 27, 28, 19]
 solution : [10, 1, 25, 0]


Invert decision for 0 at level 9


New level: 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 24, 2, 27, 28, 19]
 solution : [10, 1, 25]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 24, 2, 27, 28, 19]
 solution : [10, 1, 25]

Essensial at level 10 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25, 24]


Solution : [10, 1, 25, 24] has cost 17.


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 25, 24]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28]
 solution : [10, 1, 25]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28]
 solution : [10, 1, 25]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0]
 solution : [10, 1, 25]


Before backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0]
 solution : [10, 1, 25]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18]
 solution : [10, 1, 25]


Before backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18]
 solution : [10, 1, 25]

After backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36]
 solution : [10, 1, 25]


Before backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36]
 solution : [10, 1, 25]

After backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32]
 solution : [10, 1, 25]


Before backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32]
 solution : [10, 1, 25]

After backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32, 17]
 solution : [10, 1, 25]


Invert decision for 25 at level 4


New level: 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32, 17]
 solution : [10, 1]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32, 17]
 solution : [10, 1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32, 17]
 solution : [10, 1]


Solution : [10, 1] has cost 6.


Decide in level 5 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32, 17]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 17]
 solution : [10, 1, 32]


New level: 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 17]
 solution : [10, 1, 32]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 17]
 solution : [10, 1, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17]
 solution : [10, 1, 32]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17]
 solution : [10, 1, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17]
 solution : [10, 1, 32]


Solution : [10, 1, 32] has cost 19.


Before backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17]
 solution : [10, 1, 32]

After backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 2, 27, 28]
 solution : [10, 1, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 2, 27, 28]
 solution : [10, 1]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 2, 27, 28]
 solution : [10, 1]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 2, 27, 28]
 solution : [10, 1]


Solution : [10, 1] has cost 6.


Decide in level 6 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 2, 27, 28]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 6

After decision at level 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 2, 27, 28]
 solution : [10, 1, 17]


New level: 7
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 2, 27, 28]
 solution : [10, 1, 17]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 2, 27, 28]
 solution : [10, 1, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {33, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [24, 0, 36, 2, 27, 28]
 solution : [10, 1, 17]


Before reduction : 
 pending  : [24, 0, 36, 2, 27, 28]
 solution : [10, 1, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 0, 36, 2, 27, 28]
 solution : [10, 1, 17]


Solution : [10, 1, 17] has cost 13.


Decide in level 7 among pending : [24, 0, 36, 2, 27, 28]

Coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 1, 17, 24]


New level: 8
 pending : [0, 36, 2, 27, 28]
 solution : [10, 1, 17, 24]


Before reduction : 
 pending  : [0, 36, 2, 27, 28]
 solution : [10, 1, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {0, 2, 36, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 1, 17, 24]


Before reduction : 
 pending  : []
 solution : [10, 1, 17, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 17, 24]


Solution : [10, 1, 17, 24] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [10, 1, 17, 24]

After backtrack at level 8
 pending : [0, 36, 2, 27, 28]
 solution : [10, 1, 17, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [0, 36, 2, 27, 28]
 solution : [10, 1, 17]


Before reduction : 
 pending  : [0, 36, 2, 27, 28]
 solution : [10, 1, 17]

Essensial at level 8 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {2, 27, 36, 28}

After reduction : 
 pending  : []
 solution : [10, 1, 17, 0]


Before reduction : 
 pending  : []
 solution : [10, 1, 17, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 17, 0]


Solution : [10, 1, 17, 0] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [10, 1, 17, 0]

After backtrack at level 8
 pending : [0, 36, 2, 27, 28]
 solution : [10, 1, 17]


Before backtrack at level 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 1, 17]

After backtrack at level 7
 pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 1, 17]


Invert decision for 17 at level 6


New level: 7
 pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 1]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 1]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 1]


Solution : [10, 1] has cost 6.


Decide in level 7 among pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 0 with phase True at level 7

After decision at level 7
 pending : [36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 1, 0]


New level: 8
 pending : [36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 1, 0]


Before reduction : 
 pending  : [36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 1, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {24, 2, 27, 28}

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 0]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 1, 0]


Solution : [10, 1, 0] has cost 10.


Decide in level 8 among pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 0, 18]


New level: 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 0, 18]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 0, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 36, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 1, 0, 18]


Before reduction : 
 pending  : []
 solution : [10, 1, 0, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 0, 18]


Solution : [10, 1, 0, 18] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [10, 1, 0, 18]

After backtrack at level 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 0, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 0]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 1, 0]


Solution : [10, 1, 0] has cost 10.


Decide in level 9 among pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 0, 19]


New level: 10
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 0, 19]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 1, 0, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {16, 20, 21, 6}

After reduction : 
 pending  : [36, 30, 33, 14, 15, 13]
 solution : [10, 1, 0, 19]


Before reduction : 
 pending  : [36, 30, 33, 14, 15, 13]
 solution : [10, 1, 0, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 30, 33, 14, 15, 13]
 solution : [10, 1, 0, 19]


Solution : [10, 1, 0, 19] has cost 19.


Before backtrack at level 10
 pending : [36, 30, 33, 14, 15, 13]
 solution : [10, 1, 0, 19]

After backtrack at level 10
 pending : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 0, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 0]


Before reduction : 
 pending  : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 0]


Solution : [10, 1, 0] has cost 10.


Decide in level 10 among pending : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [36, 30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 1, 0, 13]


New level: 11
 pending : [36, 30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 1, 0, 13]


Before reduction : 
 pending  : [36, 30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 1, 0, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 36, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 0, 13]


Before reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 0, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 0, 13]


Solution : [10, 1, 0, 13] has cost 17.


Before backtrack at level 11
 pending : [30, 33, 6, 21, 20]
 solution : [10, 1, 0, 13]

After backtrack at level 11
 pending : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 1, 0, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 1, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 1, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 1, 0]


Solution : [10, 1, 0] has cost 10.


Decide in level 11 among pending : [30, 33, 6, 21, 20, 36, 14, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 11

After decision at level 11
 pending : [30, 33, 6, 21, 36, 14, 15, 16]
 solution : [10, 1, 0, 20]


New level: 12
 pending : [30, 33, 6, 21, 36, 14, 15, 16]
 solution : [10, 1, 0, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 36, 14, 15, 16]
 solution : [10, 1, 0, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 36, 14, 15]
 solution : [10, 1, 0, 20]


Before reduction : 
 pending  : [30, 33, 36, 14, 15]
 solution : [10, 1, 0, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 36, 14, 15]
 solution : [10, 1, 0, 20]


Solution : [10, 1, 0, 20] has cost 19.


Before backtrack at level 12
 pending : [30, 33, 36, 14, 15]
 solution : [10, 1, 0, 20]

After backtrack at level 12
 pending : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 1, 0, 20]


Invert decision for 20 at level 11


New level: 12
 pending : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 1, 0]


Before reduction : 
 pending  : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 1, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 1, 0]


Solution : [10, 1, 0] has cost 10.


Decide in level 12 among pending : [30, 33, 36, 14, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [30, 33, 36, 14, 6, 21, 16]
 solution : [10, 1, 0, 15]


New level: 13
 pending : [30, 33, 36, 14, 6, 21, 16]
 solution : [10, 1, 0, 15]


Before reduction : 
 pending  : [30, 33, 36, 14, 6, 21, 16]
 solution : [10, 1, 0, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 36, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 0, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 0, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 0, 15]


Solution : [10, 1, 0, 15] has cost 17.


Before backtrack at level 13
 pending : [30, 33, 6, 21]
 solution : [10, 1, 0, 15]

After backtrack at level 13
 pending : [30, 33, 6, 21, 36, 14, 16]
 solution : [10, 1, 0, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [30, 33, 6, 21, 36, 14, 16]
 solution : [10, 1, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 36, 14, 16]
 solution : [10, 1, 0]

Essensial at level 13 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {36}

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 0, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 0, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 0, 14]


Solution : [10, 1, 0, 14] has cost 17.


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16]
 solution : [10, 1, 0, 14]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 1, 0]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 1, 0]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 1, 0]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 1, 0]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 1, 0]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 1, 0]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 0]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 0]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 0]


Before backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 0]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 2, 27, 28, 24, 18]
 solution : [10, 1, 0]


Invert decision for 0 at level 7


New level: 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 2, 27, 28, 24, 18]
 solution : [10, 1]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 2, 27, 28, 24, 18]
 solution : [10, 1]

Essensial at level 8 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 1, 24]


Solution : [10, 1, 24] has cost 13.


Decide in level 8 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 24, 18]


New level: 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 24, 18]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 24, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 36, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 1, 24, 18]


Before reduction : 
 pending  : []
 solution : [10, 1, 24, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [10, 1, 24, 18]


Solution : [10, 1, 24, 18] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [10, 1, 24, 18]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 24, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 24]


Solution : [10, 1, 24] has cost 13.


Decide in level 9 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 24, 19]


New level: 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 24, 19]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 24, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {16, 20, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 36, 15, 13]
 solution : [10, 1, 24, 19]


Before reduction : 
 pending  : [30, 33, 14, 36, 15, 13]
 solution : [10, 1, 24, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 14, 36, 15, 13]
 solution : [10, 1, 24, 19]


Solution : [10, 1, 24, 19] has cost 22.


Before backtrack at level 10
 pending : [30, 33, 14, 36, 15, 13]
 solution : [10, 1, 24, 19]

After backtrack at level 10
 pending : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 24, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 24]


Before reduction : 
 pending  : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]
 solution : [10, 1, 24]


Solution : [10, 1, 24] has cost 13.


Decide in level 10 among pending : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [30, 33, 14, 36, 15, 6, 21, 16, 20]
 solution : [10, 1, 24, 13]


New level: 11
 pending : [30, 33, 14, 36, 15, 6, 21, 16, 20]
 solution : [10, 1, 24, 13]


Before reduction : 
 pending  : [30, 33, 14, 36, 15, 6, 21, 16, 20]
 solution : [10, 1, 24, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 36, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 24, 13]


Before reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 24, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 1, 24, 13]


Solution : [10, 1, 24, 13] has cost 20.


Before backtrack at level 11
 pending : [30, 33, 6, 21, 20]
 solution : [10, 1, 24, 13]

After backtrack at level 11
 pending : [30, 33, 6, 21, 20, 14, 36, 15, 16]
 solution : [10, 1, 24, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [30, 33, 6, 21, 20, 14, 36, 15, 16]
 solution : [10, 1, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 36, 15, 16]
 solution : [10, 1, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 36, 15, 16]
 solution : [10, 1, 24]


Solution : [10, 1, 24] has cost 13.


Decide in level 11 among pending : [30, 33, 6, 21, 20, 14, 36, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 11

After decision at level 11
 pending : [30, 33, 6, 21, 14, 36, 15, 16]
 solution : [10, 1, 24, 20]


New level: 12
 pending : [30, 33, 6, 21, 14, 36, 15, 16]
 solution : [10, 1, 24, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 36, 15, 16]
 solution : [10, 1, 24, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 36, 15]
 solution : [10, 1, 24, 20]


Before reduction : 
 pending  : [30, 33, 14, 36, 15]
 solution : [10, 1, 24, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 14, 36, 15]
 solution : [10, 1, 24, 20]


Solution : [10, 1, 24, 20] has cost 22.


Before backtrack at level 12
 pending : [30, 33, 14, 36, 15]
 solution : [10, 1, 24, 20]

After backtrack at level 12
 pending : [30, 33, 14, 36, 15, 6, 21, 16]
 solution : [10, 1, 24, 20]


Invert decision for 20 at level 11


New level: 12
 pending : [30, 33, 14, 36, 15, 6, 21, 16]
 solution : [10, 1, 24]


Before reduction : 
 pending  : [30, 33, 14, 36, 15, 6, 21, 16]
 solution : [10, 1, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 14, 36, 15, 6, 21, 16]
 solution : [10, 1, 24]


Solution : [10, 1, 24] has cost 13.


Decide in level 12 among pending : [30, 33, 14, 36, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [30, 33, 14, 36, 6, 21, 16]
 solution : [10, 1, 24, 15]


New level: 13
 pending : [30, 33, 14, 36, 6, 21, 16]
 solution : [10, 1, 24, 15]


Before reduction : 
 pending  : [30, 33, 14, 36, 6, 21, 16]
 solution : [10, 1, 24, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 36, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 24, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 24, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 1, 24, 15]


Solution : [10, 1, 24, 15] has cost 20.


Before backtrack at level 13
 pending : [30, 33, 6, 21]
 solution : [10, 1, 24, 15]

After backtrack at level 13
 pending : [30, 33, 6, 21, 14, 36, 16]
 solution : [10, 1, 24, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [30, 33, 6, 21, 14, 36, 16]
 solution : [10, 1, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 36, 16]
 solution : [10, 1, 24]

Essensial at level 13 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {36}

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 24, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 24, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 1, 24, 14]


Solution : [10, 1, 24, 14] has cost 20.


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16]
 solution : [10, 1, 24, 14]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 1, 24]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 1, 24]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 1, 24]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 1, 24]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 1, 24]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 1, 24]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 24]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 1, 24]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 24]


Before backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 1, 24]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18]
 solution : [10, 1]


Before backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18]
 solution : [10, 1]

After backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0]
 solution : [10, 1]


Before backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0]
 solution : [10, 1]

After backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17]
 solution : [10, 1]


Before backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17]
 solution : [10, 1]

After backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32]
 solution : [10, 1]


Before backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32]
 solution : [10, 1]

After backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25]
 solution : [10, 1]


Before backtrack at level 3
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25]
 solution : [10, 1]

After backtrack at level 3
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25, 31]
 solution : [10, 1]


Before backtrack at level 2
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25, 31]
 solution : [10, 1]

After backtrack at level 2
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25, 31, 8]
 solution : [10, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25, 31, 8]
 solution : [10]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25, 31, 8]
 solution : [10]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, 67108864), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25, 31, 8]
 solution : [10]


Solution : [10] has cost 3.


Decide in level 2 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25, 31, 8]

Coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, 67108864), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 8 with phase True at level 2

After decision at level 2
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25, 31]
 solution : [10, 8]


New level: 3
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25, 31]
 solution : [10, 8]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25, 31]
 solution : [10, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, 67108864), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 65536), (31, 8388608), (32, 16777216), (33, 65536), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25, 31]
 solution : [10, 8]


Solution : [10, 8] has cost 5.


Decide in level 3 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 25, 31]

Coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 65536), (31, 8388608), (32, 16777216), (33, 65536), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 25 with phase True at level 3

After decision at level 3
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 31]
 solution : [10, 8, 25]


New level: 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 31]
 solution : [10, 8, 25]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 31]
 solution : [10, 8, 25]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 65536), (31, 8388608), (32, 16777216), (33, 65536), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, 8388608), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 31]
 solution : [10, 8, 25]


Solution : [10, 8, 25] has cost 9.


Decide in level 4 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 32, 31]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, 8388608), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 31]
 solution : [10, 8, 25, 32]


New level: 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 31]
 solution : [10, 8, 25, 32]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 2, 27, 28, 18, 0, 17, 31]
 solution : [10, 8, 25, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, 8388608), (32, 8388608), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 18, 0, 17, 31]
 solution : [10, 8, 25, 32]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 18, 0, 17, 31]
 solution : [10, 8, 25, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 18, 0, 17, 31]
 solution : [10, 8, 25, 32]


Solution : [10, 8, 25, 32] has cost 22.


Before backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 18, 0, 17, 31]
 solution : [10, 8, 25, 32]

After backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 18, 0, 17, 31, 2, 27, 28]
 solution : [10, 8, 25, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 18, 0, 17, 31, 2, 27, 28]
 solution : [10, 8, 25]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 18, 0, 17, 31, 2, 27, 28]
 solution : [10, 8, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 18, 0, 17, 31, 2, 27, 28]
 solution : [10, 8, 25]


Solution : [10, 8, 25] has cost 9.


Decide in level 5 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 18, 0, 17, 31, 2, 27, 28]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 31 with phase True at level 5

After decision at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 18, 0, 17, 2, 27, 28]
 solution : [10, 8, 25, 31]


New level: 6
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 18, 0, 17, 2, 27, 28]
 solution : [10, 8, 25, 31]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 24, 18, 0, 17, 2, 27, 28]
 solution : [10, 8, 25, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [36, 24, 0, 2, 27, 28]
 solution : [10, 8, 25, 31]


Before reduction : 
 pending  : [36, 24, 0, 2, 27, 28]
 solution : [10, 8, 25, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [36, 24, 0, 2, 27, 28]
 solution : [10, 8, 25, 31]


Solution : [10, 8, 25, 31] has cost 13.


Decide in level 6 among pending : [36, 24, 0, 2, 27, 28]

Coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [36, 0, 2, 27, 28]
 solution : [10, 8, 25, 31, 24]


New level: 7
 pending : [36, 0, 2, 27, 28]
 solution : [10, 8, 25, 31, 24]


Before reduction : 
 pending  : [36, 0, 2, 27, 28]
 solution : [10, 8, 25, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {0, 2, 36, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 8, 25, 31, 24]


Before reduction : 
 pending  : []
 solution : [10, 8, 25, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 8, 25, 31, 24]


Solution : [10, 8, 25, 31, 24] has cost 20.


Before backtrack at level 7
 pending : []
 solution : [10, 8, 25, 31, 24]

After backtrack at level 7
 pending : [36, 0, 2, 27, 28]
 solution : [10, 8, 25, 31, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [36, 0, 2, 27, 28]
 solution : [10, 8, 25, 31]


Before reduction : 
 pending  : [36, 0, 2, 27, 28]
 solution : [10, 8, 25, 31]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 27, 36, 28}

After reduction : 
 pending  : []
 solution : [10, 8, 25, 31, 0]


Before reduction : 
 pending  : []
 solution : [10, 8, 25, 31, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 8, 25, 31, 0]


Solution : [10, 8, 25, 31, 0] has cost 17.


Before backtrack at level 7
 pending : []
 solution : [10, 8, 25, 31, 0]

After backtrack at level 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 8, 25, 31]


Before backtrack at level 6
 pending : [0, 36, 2, 27, 28]
 solution : [10, 8, 25, 31]

After backtrack at level 6
 pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 8, 25, 31]


Invert decision for 31 at level 5


New level: 6
 pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 8, 25]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 8, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 8, 25]


Solution : [10, 8, 25] has cost 9.


Decide in level 6 among pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 6

After decision at level 6
 pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 8, 25, 17]


New level: 7
 pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 8, 25, 17]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 8, 25, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {33, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [0, 36, 2, 27, 28, 24]
 solution : [10, 8, 25, 17]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24]
 solution : [10, 8, 25, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 24]
 solution : [10, 8, 25, 17]


Solution : [10, 8, 25, 17] has cost 16.


Before backtrack at level 7
 pending : [0, 36, 2, 27, 28, 24]
 solution : [10, 8, 25, 17]

After backtrack at level 7
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 25, 17]


Invert decision for 17 at level 6


New level: 7
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 25]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 25]


Solution : [10, 8, 25] has cost 9.


Decide in level 7 among pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 0 with phase True at level 7

After decision at level 7
 pending : [36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 25, 0]


New level: 8
 pending : [36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 25, 0]


Before reduction : 
 pending  : [36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 25, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, -1), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 2097152), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {24, 2, 27, 28}

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 25, 0]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 25, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 25, 0]


Solution : [10, 8, 25, 0] has cost 13.


Decide in level 8 among pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 25, 0, 18]


New level: 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 25, 0, 18]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 25, 0, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 36, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 8, 25, 0, 18]


Before reduction : 
 pending  : []
 solution : [10, 8, 25, 0, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [10, 8, 25, 0, 18]


Solution : [10, 8, 25, 0, 18] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [10, 8, 25, 0, 18]

After backtrack at level 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 25, 0, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 25, 0]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 25, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 25, 0]


Solution : [10, 8, 25, 0] has cost 13.


Decide in level 9 among pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 8, 25, 0, 19]


New level: 10
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 8, 25, 0, 19]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 8, 25, 0, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {16, 20, 21, 6}

After reduction : 
 pending  : [36, 30, 33, 14, 15, 13]
 solution : [10, 8, 25, 0, 19]


Before reduction : 
 pending  : [36, 30, 33, 14, 15, 13]
 solution : [10, 8, 25, 0, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 30, 33, 14, 15, 13]
 solution : [10, 8, 25, 0, 19]


Solution : [10, 8, 25, 0, 19] has cost 22.


Before backtrack at level 10
 pending : [36, 30, 33, 14, 15, 13]
 solution : [10, 8, 25, 0, 19]

After backtrack at level 10
 pending : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 8, 25, 0, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 8, 25, 0]


Before reduction : 
 pending  : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 8, 25, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 8, 25, 0]


Solution : [10, 8, 25, 0] has cost 13.


Decide in level 10 among pending : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [36, 30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 8, 25, 0, 13]


New level: 11
 pending : [36, 30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 8, 25, 0, 13]


Before reduction : 
 pending  : [36, 30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 8, 25, 0, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 36, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 8, 25, 0, 13]


Before reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 8, 25, 0, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 8, 25, 0, 13]


Solution : [10, 8, 25, 0, 13] has cost 20.


Before backtrack at level 11
 pending : [30, 33, 6, 21, 20]
 solution : [10, 8, 25, 0, 13]

After backtrack at level 11
 pending : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 8, 25, 0, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 8, 25, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 8, 25, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 8, 25, 0]


Solution : [10, 8, 25, 0] has cost 13.


Decide in level 11 among pending : [30, 33, 6, 21, 20, 36, 14, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 11

After decision at level 11
 pending : [30, 33, 6, 21, 36, 14, 15, 16]
 solution : [10, 8, 25, 0, 20]


New level: 12
 pending : [30, 33, 6, 21, 36, 14, 15, 16]
 solution : [10, 8, 25, 0, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 36, 14, 15, 16]
 solution : [10, 8, 25, 0, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 36, 14, 15]
 solution : [10, 8, 25, 0, 20]


Before reduction : 
 pending  : [30, 33, 36, 14, 15]
 solution : [10, 8, 25, 0, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 36, 14, 15]
 solution : [10, 8, 25, 0, 20]


Solution : [10, 8, 25, 0, 20] has cost 22.


Before backtrack at level 12
 pending : [30, 33, 36, 14, 15]
 solution : [10, 8, 25, 0, 20]

After backtrack at level 12
 pending : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 8, 25, 0, 20]


Invert decision for 20 at level 11


New level: 12
 pending : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 8, 25, 0]


Before reduction : 
 pending  : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 8, 25, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 8, 25, 0]


Solution : [10, 8, 25, 0] has cost 13.


Decide in level 12 among pending : [30, 33, 36, 14, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [30, 33, 36, 14, 6, 21, 16]
 solution : [10, 8, 25, 0, 15]


New level: 13
 pending : [30, 33, 36, 14, 6, 21, 16]
 solution : [10, 8, 25, 0, 15]


Before reduction : 
 pending  : [30, 33, 36, 14, 6, 21, 16]
 solution : [10, 8, 25, 0, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 36, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 8, 25, 0, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 8, 25, 0, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 8, 25, 0, 15]


Solution : [10, 8, 25, 0, 15] has cost 20.


Before backtrack at level 13
 pending : [30, 33, 6, 21]
 solution : [10, 8, 25, 0, 15]

After backtrack at level 13
 pending : [30, 33, 6, 21, 36, 14, 16]
 solution : [10, 8, 25, 0, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [30, 33, 6, 21, 36, 14, 16]
 solution : [10, 8, 25, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 36, 14, 16]
 solution : [10, 8, 25, 0]

Essensial at level 13 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {36}

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 8, 25, 0, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 8, 25, 0, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 8, 25, 0, 14]


Solution : [10, 8, 25, 0, 14] has cost 20.


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16]
 solution : [10, 8, 25, 0, 14]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 8, 25, 0]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 8, 25, 0]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 8, 25, 0]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 8, 25, 0]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 8, 25, 0]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 8, 25, 0]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 8, 25, 0]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 8, 25, 0]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 25, 0]


Before backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 25, 0]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 2, 27, 28, 24, 18]
 solution : [10, 8, 25, 0]


Invert decision for 0 at level 7


New level: 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 2, 27, 28, 24, 18]
 solution : [10, 8, 25]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 2, 27, 28, 24, 18]
 solution : [10, 8, 25]

Essensial at level 8 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 25, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 25, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 25, 24]


Solution : [10, 8, 25, 24] has cost 16.


Before backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 25, 24]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28]
 solution : [10, 8, 25]


Before backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28]
 solution : [10, 8, 25]

After backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0]
 solution : [10, 8, 25]


Before backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0]
 solution : [10, 8, 25]

After backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0, 17]
 solution : [10, 8, 25]


Before backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0, 17]
 solution : [10, 8, 25]

After backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0, 17, 31]
 solution : [10, 8, 25]


Before backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0, 17, 31]
 solution : [10, 8, 25]

After backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0, 17, 31, 32]
 solution : [10, 8, 25]


Invert decision for 25 at level 3


New level: 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0, 17, 31, 32]
 solution : [10, 8]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0, 17, 31, 32]
 solution : [10, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 65536), (31, 8388608), (32, 16777216), (33, 65536), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0, 17, 31, 32]
 solution : [10, 8]


Solution : [10, 8] has cost 5.


Decide in level 4 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0, 17, 31, 32]

Coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 65536), (31, 8388608), (32, 16777216), (33, 65536), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0, 17, 31]
 solution : [10, 8, 32]


New level: 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0, 17, 31]
 solution : [10, 8, 32]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 0, 17, 31]
 solution : [10, 8, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 65536), (31, 8388608), (32, 16777216), (33, 65536), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4096), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 4096), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 0, 17, 31]
 solution : [10, 8, 32]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 0, 17, 31]
 solution : [10, 8, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 4096), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 4096), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 0, 17, 31]
 solution : [10, 8, 32]


Solution : [10, 8, 32] has cost 18.


Before backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 0, 17, 31]
 solution : [10, 8, 32]

After backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 0, 17, 31, 2, 27, 28]
 solution : [10, 8, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 0, 17, 31, 2, 27, 28]
 solution : [10, 8]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 0, 17, 31, 2, 27, 28]
 solution : [10, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 32768), (22, -1), (23, -1), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 0, 17, 31, 2, 27, 28]
 solution : [10, 8]


Solution : [10, 8] has cost 5.


Decide in level 5 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 0, 17, 31, 2, 27, 28]

Coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 31 with phase True at level 5

After decision at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 0, 17, 2, 27, 28]
 solution : [10, 8, 31]


New level: 6
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 0, 17, 2, 27, 28]
 solution : [10, 8, 31]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 0, 17, 2, 27, 28]
 solution : [10, 8, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 65536), (31, 8388608), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [36, 24, 0, 2, 27, 28]
 solution : [10, 8, 31]


Before reduction : 
 pending  : [36, 24, 0, 2, 27, 28]
 solution : [10, 8, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [36, 24, 0, 2, 27, 28]
 solution : [10, 8, 31]


Solution : [10, 8, 31] has cost 9.


Decide in level 6 among pending : [36, 24, 0, 2, 27, 28]

Coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [36, 0, 2, 27, 28]
 solution : [10, 8, 31, 24]


New level: 7
 pending : [36, 0, 2, 27, 28]
 solution : [10, 8, 31, 24]


Before reduction : 
 pending  : [36, 0, 2, 27, 28]
 solution : [10, 8, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {0, 2, 36, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 8, 31, 24]


Before reduction : 
 pending  : []
 solution : [10, 8, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 8, 31, 24]


Solution : [10, 8, 31, 24] has cost 16.


Before backtrack at level 7
 pending : []
 solution : [10, 8, 31, 24]

After backtrack at level 7
 pending : [36, 0, 2, 27, 28]
 solution : [10, 8, 31, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [36, 0, 2, 27, 28]
 solution : [10, 8, 31]


Before reduction : 
 pending  : [36, 0, 2, 27, 28]
 solution : [10, 8, 31]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 27, 36, 28}

After reduction : 
 pending  : []
 solution : [10, 8, 31, 0]


Before reduction : 
 pending  : []
 solution : [10, 8, 31, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 8, 31, 0]


Solution : [10, 8, 31, 0] has cost 13.


Before backtrack at level 7
 pending : []
 solution : [10, 8, 31, 0]

After backtrack at level 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 8, 31]


Before backtrack at level 6
 pending : [0, 36, 2, 27, 28]
 solution : [10, 8, 31]

After backtrack at level 6
 pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 8, 31]


Invert decision for 31 at level 5


New level: 6
 pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 8]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 8]


Solution : [10, 8] has cost 5.


Decide in level 6 among pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]

Coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 0 with phase True at level 6

After decision at level 6
 pending : [36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 8, 0]


New level: 7
 pending : [36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 8, 0]


Before reduction : 
 pending  : [36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 8, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 32768), (17, 4194304), (18, 2097152), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, 4194304), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {24, 2, 27, 28}

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17]
 solution : [10, 8, 0]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17]
 solution : [10, 8, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, 4194304), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, 4194304), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17]
 solution : [10, 8, 0]


Solution : [10, 8, 0] has cost 9.


Decide in level 7 among pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, 4194304), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 0, 17]


New level: 8
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 0, 17]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 0, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, 4194304), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 36, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 8, 0, 17]


Before reduction : 
 pending  : []
 solution : [10, 8, 0, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [10, 8, 0, 17]


Solution : [10, 8, 0, 17] has cost 16.


Before backtrack at level 8
 pending : []
 solution : [10, 8, 0, 17]

After backtrack at level 8
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 0, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 0]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 0]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 8, 0]


Solution : [10, 8, 0] has cost 9.


Decide in level 8 among pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 0, 18]


New level: 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 0, 18]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 0, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 36, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 8, 0, 18]


Before reduction : 
 pending  : []
 solution : [10, 8, 0, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [10, 8, 0, 18]


Solution : [10, 8, 0, 18] has cost 16.


Before backtrack at level 9
 pending : []
 solution : [10, 8, 0, 18]

After backtrack at level 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 0, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 0]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 8, 0]


Solution : [10, 8, 0] has cost 9.


Decide in level 9 among pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 8, 0, 19]


New level: 10
 pending : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 8, 0, 19]


Before reduction : 
 pending  : [36, 30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 8, 0, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {16, 20, 21, 6}

After reduction : 
 pending  : [36, 30, 33, 14, 15, 13]
 solution : [10, 8, 0, 19]


Before reduction : 
 pending  : [36, 30, 33, 14, 15, 13]
 solution : [10, 8, 0, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 30, 33, 14, 15, 13]
 solution : [10, 8, 0, 19]


Solution : [10, 8, 0, 19] has cost 18.


Before backtrack at level 10
 pending : [36, 30, 33, 14, 15, 13]
 solution : [10, 8, 0, 19]

After backtrack at level 10
 pending : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 8, 0, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 8, 0]


Before reduction : 
 pending  : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 8, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 8, 0]


Solution : [10, 8, 0] has cost 9.


Decide in level 10 among pending : [36, 30, 33, 14, 15, 13, 6, 21, 16, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [36, 30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 8, 0, 13]


New level: 11
 pending : [36, 30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 8, 0, 13]


Before reduction : 
 pending  : [36, 30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 8, 0, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 36, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 8, 0, 13]


Before reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 8, 0, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 8, 0, 13]


Solution : [10, 8, 0, 13] has cost 16.


Before backtrack at level 11
 pending : [30, 33, 6, 21, 20]
 solution : [10, 8, 0, 13]

After backtrack at level 11
 pending : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 8, 0, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 8, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 8, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20, 36, 14, 15, 16]
 solution : [10, 8, 0]


Solution : [10, 8, 0] has cost 9.


Decide in level 11 among pending : [30, 33, 6, 21, 20, 36, 14, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 11

After decision at level 11
 pending : [30, 33, 6, 21, 36, 14, 15, 16]
 solution : [10, 8, 0, 20]


New level: 12
 pending : [30, 33, 6, 21, 36, 14, 15, 16]
 solution : [10, 8, 0, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 36, 14, 15, 16]
 solution : [10, 8, 0, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 36, 14, 15]
 solution : [10, 8, 0, 20]


Before reduction : 
 pending  : [30, 33, 36, 14, 15]
 solution : [10, 8, 0, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 36, 14, 15]
 solution : [10, 8, 0, 20]


Solution : [10, 8, 0, 20] has cost 18.


Before backtrack at level 12
 pending : [30, 33, 36, 14, 15]
 solution : [10, 8, 0, 20]

After backtrack at level 12
 pending : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 8, 0, 20]


Invert decision for 20 at level 11


New level: 12
 pending : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 8, 0]


Before reduction : 
 pending  : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 8, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 36, 14, 15, 6, 21, 16]
 solution : [10, 8, 0]


Solution : [10, 8, 0] has cost 9.


Decide in level 12 among pending : [30, 33, 36, 14, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [30, 33, 36, 14, 6, 21, 16]
 solution : [10, 8, 0, 15]


New level: 13
 pending : [30, 33, 36, 14, 6, 21, 16]
 solution : [10, 8, 0, 15]


Before reduction : 
 pending  : [30, 33, 36, 14, 6, 21, 16]
 solution : [10, 8, 0, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 36, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 8, 0, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 8, 0, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 8, 0, 15]


Solution : [10, 8, 0, 15] has cost 16.


Before backtrack at level 13
 pending : [30, 33, 6, 21]
 solution : [10, 8, 0, 15]

After backtrack at level 13
 pending : [30, 33, 6, 21, 36, 14, 16]
 solution : [10, 8, 0, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [30, 33, 6, 21, 36, 14, 16]
 solution : [10, 8, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 36, 14, 16]
 solution : [10, 8, 0]

Essensial at level 13 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {36}

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 8, 0, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 8, 0, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 8, 0, 14]


Solution : [10, 8, 0, 14] has cost 16.


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16]
 solution : [10, 8, 0, 14]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 8, 0]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 8, 0]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 8, 0]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 8, 0]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 8, 0]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 8, 0]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 8, 0]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 8, 0]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 0]


Before backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 0]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 0]


Before backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 0]

After backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 2, 27, 28, 24, 17]
 solution : [10, 8, 0]


Invert decision for 0 at level 6


New level: 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 2, 27, 28, 24, 17]
 solution : [10, 8]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 2, 27, 28, 24, 17]
 solution : [10, 8]

Essensial at level 7 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, 4194304), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 17]
 solution : [10, 8, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 17]
 solution : [10, 8, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, 4194304), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, 4194304), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 17]
 solution : [10, 8, 24]


Solution : [10, 8, 24] has cost 12.


Decide in level 7 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, 4194304), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 24, 17]


New level: 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 24, 17]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 24, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, 4194304), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 36, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 8, 24, 17]


Before reduction : 
 pending  : []
 solution : [10, 8, 24, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [10, 8, 24, 17]


Solution : [10, 8, 24, 17] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [10, 8, 24, 17]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 24, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 24]


Solution : [10, 8, 24] has cost 12.


Decide in level 8 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 24, 18]


New level: 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 24, 18]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 24, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, 2097152), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 36, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 8, 24, 18]


Before reduction : 
 pending  : []
 solution : [10, 8, 24, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [10, 8, 24, 18]


Solution : [10, 8, 24, 18] has cost 19.


Before backtrack at level 9
 pending : []
 solution : [10, 8, 24, 18]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 24, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 24]


Solution : [10, 8, 24] has cost 12.


Decide in level 9 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 8, 24, 19]


New level: 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 8, 24, 19]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 8, 24, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, 524288), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {16, 20, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 36, 15, 13]
 solution : [10, 8, 24, 19]


Before reduction : 
 pending  : [30, 33, 14, 36, 15, 13]
 solution : [10, 8, 24, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 14, 36, 15, 13]
 solution : [10, 8, 24, 19]


Solution : [10, 8, 24, 19] has cost 21.


Before backtrack at level 10
 pending : [30, 33, 14, 36, 15, 13]
 solution : [10, 8, 24, 19]

After backtrack at level 10
 pending : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]
 solution : [10, 8, 24, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]
 solution : [10, 8, 24]


Before reduction : 
 pending  : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]
 solution : [10, 8, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]
 solution : [10, 8, 24]


Solution : [10, 8, 24] has cost 12.


Decide in level 10 among pending : [30, 33, 14, 36, 15, 13, 6, 21, 16, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [30, 33, 14, 36, 15, 6, 21, 16, 20]
 solution : [10, 8, 24, 13]


New level: 11
 pending : [30, 33, 14, 36, 15, 6, 21, 16, 20]
 solution : [10, 8, 24, 13]


Before reduction : 
 pending  : [30, 33, 14, 36, 15, 6, 21, 16, 20]
 solution : [10, 8, 24, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 36, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 8, 24, 13]


Before reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 8, 24, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 8, 24, 13]


Solution : [10, 8, 24, 13] has cost 19.


Before backtrack at level 11
 pending : [30, 33, 6, 21, 20]
 solution : [10, 8, 24, 13]

After backtrack at level 11
 pending : [30, 33, 6, 21, 20, 14, 36, 15, 16]
 solution : [10, 8, 24, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [30, 33, 6, 21, 20, 14, 36, 15, 16]
 solution : [10, 8, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 36, 15, 16]
 solution : [10, 8, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16384), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 36, 15, 16]
 solution : [10, 8, 24]


Solution : [10, 8, 24] has cost 12.


Decide in level 11 among pending : [30, 33, 6, 21, 20, 14, 36, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 11

After decision at level 11
 pending : [30, 33, 6, 21, 14, 36, 15, 16]
 solution : [10, 8, 24, 20]


New level: 12
 pending : [30, 33, 6, 21, 14, 36, 15, 16]
 solution : [10, 8, 24, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 36, 15, 16]
 solution : [10, 8, 24, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 36, 15]
 solution : [10, 8, 24, 20]


Before reduction : 
 pending  : [30, 33, 14, 36, 15]
 solution : [10, 8, 24, 20]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 14, 36, 15]
 solution : [10, 8, 24, 20]


Solution : [10, 8, 24, 20] has cost 21.


Before backtrack at level 12
 pending : [30, 33, 14, 36, 15]
 solution : [10, 8, 24, 20]

After backtrack at level 12
 pending : [30, 33, 14, 36, 15, 6, 21, 16]
 solution : [10, 8, 24, 20]


Invert decision for 20 at level 11


New level: 12
 pending : [30, 33, 14, 36, 15, 6, 21, 16]
 solution : [10, 8, 24]


Before reduction : 
 pending  : [30, 33, 14, 36, 15, 6, 21, 16]
 solution : [10, 8, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8192), (15, 8192), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 14, 36, 15, 6, 21, 16]
 solution : [10, 8, 24]


Solution : [10, 8, 24] has cost 12.


Decide in level 12 among pending : [30, 33, 14, 36, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 12

After decision at level 12
 pending : [30, 33, 14, 36, 6, 21, 16]
 solution : [10, 8, 24, 15]


New level: 13
 pending : [30, 33, 14, 36, 6, 21, 16]
 solution : [10, 8, 24, 15]


Before reduction : 
 pending  : [30, 33, 14, 36, 6, 21, 16]
 solution : [10, 8, 24, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 131072), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 36, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 8, 24, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 8, 24, 15]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 8, 24, 15]


Solution : [10, 8, 24, 15] has cost 19.


Before backtrack at level 13
 pending : [30, 33, 6, 21]
 solution : [10, 8, 24, 15]

After backtrack at level 13
 pending : [30, 33, 6, 21, 14, 36, 16]
 solution : [10, 8, 24, 15]


Invert decision for 15 at level 12


New level: 13
 pending : [30, 33, 6, 21, 14, 36, 16]
 solution : [10, 8, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 36, 16]
 solution : [10, 8, 24]

Essensial at level 13 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16384), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 512), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {36}

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 8, 24, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 8, 24, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 8, 24, 14]


Solution : [10, 8, 24, 14] has cost 19.


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16]
 solution : [10, 8, 24, 14]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 8, 24]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36]
 solution : [10, 8, 24]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 8, 24]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15]
 solution : [10, 8, 24]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 8, 24]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20]
 solution : [10, 8, 24]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 8, 24]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13]
 solution : [10, 8, 24]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 24]


Before backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19]
 solution : [10, 8, 24]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 24]


Before backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18]
 solution : [10, 8, 24]

After backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17]
 solution : [10, 8]


Before backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17]
 solution : [10, 8]

After backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0]
 solution : [10, 8]


Before backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0]
 solution : [10, 8]

After backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31]
 solution : [10, 8]


Before backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31]
 solution : [10, 8]

After backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31, 32]
 solution : [10, 8]


Before backtrack at level 3
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31, 32]
 solution : [10, 8]

After backtrack at level 3
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31, 32, 25]
 solution : [10, 8]


Invert decision for 8 at level 2


New level: 3
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31, 32, 25]
 solution : [10]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31, 32, 25]
 solution : [10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 32768), (31, -1), (32, -1), (33, 32768), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31, 32, 25]
 solution : [10]


Solution : [10] has cost 3.


Decide in level 3 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31, 32, 25]

Coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 25 with phase True at level 3

After decision at level 3
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31, 32]
 solution : [10, 25]


New level: 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31, 32]
 solution : [10, 25]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31, 32]
 solution : [10, 25]

Essensial at level 4 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, 33554432), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, 16777216), (32, 8388608), (33, 131072), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31, 32]
 solution : [10, 25]


Solution : [10, 25] has cost 7.


Decide in level 4 among pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 31, 32]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, 16777216), (32, 8388608), (33, 131072), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 31 with phase True at level 4

After decision at level 4
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 32]
 solution : [10, 25, 31]


New level: 5
 pending : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 32]
 solution : [10, 25, 31]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 36, 15, 20, 13, 19, 18, 24, 2, 27, 28, 17, 0, 32]
 solution : [10, 25, 31]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, 16777216), (32, 8388608), (33, 131072), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, 0), (31, -1), (32, 8388608), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {33, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [36, 24, 2, 27, 28, 0, 32]
 solution : [10, 25, 31]


Before reduction : 
 pending  : [36, 24, 2, 27, 28, 0, 32]
 solution : [10, 25, 31]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, 0), (31, -1), (32, 8388608), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, 8388608), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [36, 24, 2, 27, 28, 0, 32]
 solution : [10, 25, 31]


Solution : [10, 25, 31] has cost 11.


Decide in level 5 among pending : [36, 24, 2, 27, 28, 0, 32]

Coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, 8388608), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [36, 24, 2, 27, 28, 0]
 solution : [10, 25, 31, 32]


New level: 6
 pending : [36, 24, 2, 27, 28, 0]
 solution : [10, 25, 31, 32]


Before reduction : 
 pending  : [36, 24, 2, 27, 28, 0]
 solution : [10, 25, 31, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, 8388608), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {2, 27, 36, 28}

After reduction : 
 pending  : [24, 0]
 solution : [10, 25, 31, 32]


Before reduction : 
 pending  : [24, 0]
 solution : [10, 25, 31, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 0]
 solution : [10, 25, 31, 32]


Solution : [10, 25, 31, 32] has cost 24.


Before backtrack at level 6
 pending : [24, 0]
 solution : [10, 25, 31, 32]

After backtrack at level 6
 pending : [24, 0, 36, 2, 27, 28]
 solution : [10, 25, 31, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [24, 0, 36, 2, 27, 28]
 solution : [10, 25, 31]


Before reduction : 
 pending  : [24, 0, 36, 2, 27, 28]
 solution : [10, 25, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 512), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 512), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 0, 36, 2, 27, 28]
 solution : [10, 25, 31]


Solution : [10, 25, 31] has cost 11.


Decide in level 6 among pending : [24, 0, 36, 2, 27, 28]

Coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [0, 36, 2, 27, 28]
 solution : [10, 25, 31, 24]


New level: 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 25, 31, 24]


Before reduction : 
 pending  : [0, 36, 2, 27, 28]
 solution : [10, 25, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {0, 2, 36, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 25, 31, 24]


Before reduction : 
 pending  : []
 solution : [10, 25, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 25, 31, 24]


Solution : [10, 25, 31, 24] has cost 18.


Before backtrack at level 7
 pending : []
 solution : [10, 25, 31, 24]

After backtrack at level 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 25, 31, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 25, 31]


Before reduction : 
 pending  : [0, 36, 2, 27, 28]
 solution : [10, 25, 31]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 27, 36, 28}

After reduction : 
 pending  : []
 solution : [10, 25, 31, 0]


Before reduction : 
 pending  : []
 solution : [10, 25, 31, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 25, 31, 0]


Solution : [10, 25, 31, 0] has cost 15.


Before backtrack at level 7
 pending : []
 solution : [10, 25, 31, 0]

After backtrack at level 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 25, 31]


Before backtrack at level 6
 pending : [0, 36, 2, 27, 28]
 solution : [10, 25, 31]

After backtrack at level 6
 pending : [0, 36, 2, 27, 28, 24]
 solution : [10, 25, 31]


Before backtrack at level 5
 pending : [0, 36, 2, 27, 28, 24]
 solution : [10, 25, 31]

After backtrack at level 5
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]
 solution : [10, 25, 31]


Invert decision for 31 at level 4


New level: 5
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]
 solution : [10, 25]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]
 solution : [10, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, 8388608), (33, 131072), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]
 solution : [10, 25]


Solution : [10, 25] has cost 7.


Decide in level 5 among pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 32]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, 8388608), (33, 131072), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 5

After decision at level 5
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 32]
 solution : [10, 25, 17]


New level: 6
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 32]
 solution : [10, 25, 17]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 32]
 solution : [10, 25, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, 8388608), (33, 131072), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, 0), (31, -1), (32, 8388608), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 32]
 solution : [10, 25, 17]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 32]
 solution : [10, 25, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, 0), (31, -1), (32, 8388608), (33, 0), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, 8388608), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 32]
 solution : [10, 25, 17]


Solution : [10, 25, 17] has cost 14.


Before backtrack at level 6
 pending : [0, 36, 2, 27, 28, 24, 32]
 solution : [10, 25, 17]

After backtrack at level 6
 pending : [0, 36, 2, 27, 28, 24, 32, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 25, 17]


Invert decision for 17 at level 5


New level: 6
 pending : [0, 36, 2, 27, 28, 24, 32, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 25]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 32, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, 8388608), (33, -1), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, 8388608), (33, 131072), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 32, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 25]


Solution : [10, 25] has cost 7.


Decide in level 6 among pending : [0, 36, 2, 27, 28, 24, 32, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, 8388608), (33, 131072), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 25, 32]


New level: 7
 pending : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 25, 32]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 25, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, 8388608), (33, 131072), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 65536), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 27, 28}

After reduction : 
 pending  : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 25, 32]


Before reduction : 
 pending  : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 25, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 65536), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 65536), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 25, 32]


Solution : [10, 25, 32] has cost 20.


Before backtrack at level 7
 pending : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 25, 32]

After backtrack at level 7
 pending : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25]


Before reduction : 
 pending  : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2048), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 65536), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25]


Solution : [10, 25] has cost 7.


Decide in level 7 among pending : [0, 36, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 36 with phase True at level 7

After decision at level 7
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25, 36]


New level: 8
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25, 36]


Before reduction : 
 pending  : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25, 36]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 4194304), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25, 36]


Solution : [10, 25, 36] has cost 21.


Before backtrack at level 8
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25, 36]

After backtrack at level 8
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25, 36]


Invert decision for 36 at level 7


New level: 8
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25]


Before reduction : 
 pending  : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 1048576), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, -1), (27, 32768), (28, 1024), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]
 solution : [10, 25]


Solution : [10, 25] has cost 7.


Decide in level 8 among pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 2, 27, 28]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 2, 27, 28]
 solution : [10, 25, 18]


New level: 9
 pending : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 2, 27, 28]
 solution : [10, 25, 18]


Before reduction : 
 pending  : [0, 24, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 2, 27, 28]
 solution : [10, 25, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {33, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : [0, 24, 2, 27, 28]
 solution : [10, 25, 18]


Before reduction : 
 pending  : [0, 24, 2, 27, 28]
 solution : [10, 25, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 24, 2, 27, 28]
 solution : [10, 25, 18]


Solution : [10, 25, 18] has cost 14.


Before backtrack at level 9
 pending : [0, 24, 2, 27, 28]
 solution : [10, 25, 18]

After backtrack at level 9
 pending : [0, 24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [0, 24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25]


Before reduction : 
 pending  : [0, 24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 1024), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [0, 24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25]


Solution : [10, 25] has cost 7.


Decide in level 9 among pending : [0, 24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]

Coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 0 with phase True at level 9

After decision at level 9
 pending : [24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25, 0]


New level: 10
 pending : [24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25, 0]


Before reduction : 
 pending  : [24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, -1), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {24, 2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25, 0]


Solution : [10, 25, 0] has cost 11.


Decide in level 10 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 10

After decision at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 25, 0, 19]


New level: 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 25, 0, 19]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 25, 0, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 16384), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 20, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 25, 0, 19]


Before reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 25, 0, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 16384), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 25, 0, 19]


Solution : [10, 25, 0, 19] has cost 20.


Before backtrack at level 11
 pending : [30, 33, 14, 15, 13]
 solution : [10, 25, 0, 19]

After backtrack at level 11
 pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 25, 0, 19]


Invert decision for 19 at level 10


New level: 11
 pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 25, 0]


Before reduction : 
 pending  : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 25, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 25, 0]


Solution : [10, 25, 0] has cost 11.


Decide in level 11 among pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 25, 0, 13]


New level: 12
 pending : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 25, 0, 13]


Before reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 25, 0, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 25, 0, 13]


Before reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 25, 0, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 25, 0, 13]


Solution : [10, 25, 0, 13] has cost 18.


Before backtrack at level 12
 pending : [30, 33, 6, 21, 20]
 solution : [10, 25, 0, 13]

After backtrack at level 12
 pending : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 25, 0, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 25, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 25, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 25, 0]


Solution : [10, 25, 0] has cost 11.


Decide in level 12 among pending : [30, 33, 6, 21, 20, 14, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 25, 0, 20]


New level: 13
 pending : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 25, 0, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 25, 0, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 25, 0, 20]


Before reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 25, 0, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 25, 0, 20]


Solution : [10, 25, 0, 20] has cost 20.


Before backtrack at level 13
 pending : [30, 33, 14, 15]
 solution : [10, 25, 0, 20]

After backtrack at level 13
 pending : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 25, 0, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 25, 0]


Before reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 25, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 25, 0]


Solution : [10, 25, 0] has cost 11.


Decide in level 13 among pending : [30, 33, 14, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [30, 33, 14, 6, 21, 16]
 solution : [10, 25, 0, 15]


New level: 14
 pending : [30, 33, 14, 6, 21, 16]
 solution : [10, 25, 0, 15]


Before reduction : 
 pending  : [30, 33, 14, 6, 21, 16]
 solution : [10, 25, 0, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : {16, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 25, 0, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 25, 0, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 25, 0, 15]


Solution : [10, 25, 0, 15] has cost 18.


Before backtrack at level 14
 pending : [30, 33, 6, 21]
 solution : [10, 25, 0, 15]

After backtrack at level 14
 pending : [30, 33, 6, 21, 14, 16]
 solution : [10, 25, 0, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [30, 33, 6, 21, 14, 16]
 solution : [10, 25, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 16]
 solution : [10, 25, 0]

Essensial at level 14 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 25, 0, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 25, 0, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 25, 0, 14]


Solution : [10, 25, 0, 14] has cost 18.


Before backtrack at level 14
 pending : [30, 33, 6, 21, 16]
 solution : [10, 25, 0, 14]

After backtrack at level 14
 pending : [30, 33, 6, 21, 16, 14]
 solution : [10, 25, 0]


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14]
 solution : [10, 25, 0]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 15]
 solution : [10, 25, 0]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 15]
 solution : [10, 25, 0]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 15, 20]
 solution : [10, 25, 0]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20]
 solution : [10, 25, 0]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 25, 0]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 25, 0]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 24, 2, 27, 28, 19]
 solution : [10, 25, 0]


Invert decision for 0 at level 9


New level: 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 24, 2, 27, 28, 19]
 solution : [10, 25]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 24, 2, 27, 28, 19]
 solution : [10, 25]

Essensial at level 10 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25, 24]


Solution : [10, 25, 24] has cost 14.


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 25, 24]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28]
 solution : [10, 25]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28]
 solution : [10, 25]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0]
 solution : [10, 25]


Before backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0]
 solution : [10, 25]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18]
 solution : [10, 25]


Before backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18]
 solution : [10, 25]

After backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36]
 solution : [10, 25]


Before backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36]
 solution : [10, 25]

After backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32]
 solution : [10, 25]


Before backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32]
 solution : [10, 25]

After backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32, 17]
 solution : [10, 25]


Before backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32, 17]
 solution : [10, 25]

After backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32, 17, 31]
 solution : [10, 25]


Invert decision for 25 at level 3


New level: 4
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32, 17, 31]
 solution : [10]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32, 17, 31]
 solution : [10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32, 17, 31]
 solution : [10]


Solution : [10] has cost 3.


Decide in level 4 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 32, 17, 31]

Coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 32 with phase True at level 4

After decision at level 4
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 17, 31]
 solution : [10, 32]


New level: 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 17, 31]
 solution : [10, 32]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 2, 27, 28, 0, 18, 36, 17, 31]
 solution : [10, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, 16777216), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4096), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 65536), (22, -1), (23, -1), (24, 4096), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 131072), (31, 16777216), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 8192), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 31]
 solution : [10, 32]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 31]
 solution : [10, 32]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 4096), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 65536), (22, -1), (23, -1), (24, 4096), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 131072), (31, 16777216), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 8192), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 65536), (22, -1), (23, -1), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 16777216), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 8192), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 31]
 solution : [10, 32]


Solution : [10, 32] has cost 16.


Before backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 31]
 solution : [10, 32]

After backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 31, 2, 27, 28]
 solution : [10, 32]


Invert decision for 32 at level 4


New level: 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 31, 2, 27, 28]
 solution : [10]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 31, 2, 27, 28]
 solution : [10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, 4096), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 65536), (22, -1), (23, -1), (24, 4096), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 131072), (31, 16777216), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 8192), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 31, 2, 27, 28]
 solution : [10]


Solution : [10] has cost 3.


Decide in level 5 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 31, 2, 27, 28]

Coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 31 with phase True at level 5

After decision at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 2, 27, 28]
 solution : [10, 31]


New level: 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 2, 27, 28]
 solution : [10, 31]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 24, 0, 18, 36, 17, 2, 27, 28]
 solution : [10, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, 16777216), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : {33, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [24, 0, 36, 2, 27, 28]
 solution : [10, 31]


Before reduction : 
 pending  : [24, 0, 36, 2, 27, 28]
 solution : [10, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [24, 0, 36, 2, 27, 28]
 solution : [10, 31]


Solution : [10, 31] has cost 7.


Decide in level 6 among pending : [24, 0, 36, 2, 27, 28]

Coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [0, 36, 2, 27, 28]
 solution : [10, 31, 24]


New level: 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 31, 24]


Before reduction : 
 pending  : [0, 36, 2, 27, 28]
 solution : [10, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {0, 2, 36, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 31, 24]


Before reduction : 
 pending  : []
 solution : [10, 31, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 31, 24]


Solution : [10, 31, 24] has cost 14.


Before backtrack at level 7
 pending : []
 solution : [10, 31, 24]

After backtrack at level 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 31, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 31]


Before reduction : 
 pending  : [0, 36, 2, 27, 28]
 solution : [10, 31]

Essensial at level 7 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : {2, 27, 36, 28}

After reduction : 
 pending  : []
 solution : [10, 31, 0]


Before reduction : 
 pending  : []
 solution : [10, 31, 0]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [10, 31, 0]


Solution : [10, 31, 0] has cost 11.


Before backtrack at level 7
 pending : []
 solution : [10, 31, 0]

After backtrack at level 7
 pending : [0, 36, 2, 27, 28]
 solution : [10, 31]


Before backtrack at level 6
 pending : [0, 36, 2, 27, 28]
 solution : [10, 31]

After backtrack at level 6
 pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 31]


Invert decision for 31 at level 5


New level: 6
 pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10]


Before reduction : 
 pending  : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10]


Solution : [10] has cost 3.


Decide in level 6 among pending : [0, 36, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]

Coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 36 with phase True at level 6

After decision at level 6
 pending : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 36]


New level: 7
 pending : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 36]


Before reduction : 
 pending  : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 36]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, 8388608), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 36]


Solution : [10, 36] has cost 17.


Before backtrack at level 7
 pending : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 36]

After backtrack at level 7
 pending : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10, 36]


Invert decision for 36 at level 6


New level: 7
 pending : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10]


Before reduction : 
 pending  : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, 2097152), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, 8388608), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, 65536), (28, 2048), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]
 solution : [10]


Solution : [10] has cost 3.


Decide in level 7 among pending : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 17, 24]

Coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 17 with phase True at level 7

After decision at level 7
 pending : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 17]


New level: 8
 pending : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 17]


Before reduction : 
 pending  : [0, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 24]
 solution : [10, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, 8388608), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : {33, 6, 13, 14, 15, 16, 18, 19, 20, 21, 30}

After reduction : 
 pending  : [0, 2, 27, 28, 24]
 solution : [10, 17]


Before reduction : 
 pending  : [0, 2, 27, 28, 24]
 solution : [10, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [0, 2, 27, 28, 24]
 solution : [10, 17]


Solution : [10, 17] has cost 10.


Decide in level 8 among pending : [0, 2, 27, 28, 24]

Coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 0 with phase True at level 8

After decision at level 8
 pending : [2, 27, 28, 24]
 solution : [10, 17, 0]


New level: 9
 pending : [2, 27, 28, 24]
 solution : [10, 17, 0]


Before reduction : 
 pending  : [2, 27, 28, 24]
 solution : [10, 17, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 2048), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {24, 2, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 17, 0]


Before reduction : 
 pending  : []
 solution : [10, 17, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [10, 17, 0]


Solution : [10, 17, 0] has cost 14.


Before backtrack at level 9
 pending : []
 solution : [10, 17, 0]

After backtrack at level 9
 pending : [2, 27, 28, 24]
 solution : [10, 17, 0]


Invert decision for 0 at level 8


New level: 9
 pending : [2, 27, 28, 24]
 solution : [10, 17]


Before reduction : 
 pending  : [2, 27, 28, 24]
 solution : [10, 17]

Essensial at level 9 : {24}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {2, 27, 28}

After reduction : 
 pending  : []
 solution : [10, 17, 24]


Before reduction : 
 pending  : []
 solution : [10, 17, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [10, 17, 24]


Solution : [10, 17, 24] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [10, 17, 24]

After backtrack at level 9
 pending : [24, 2, 27, 28]
 solution : [10, 17]


Before backtrack at level 8
 pending : [24, 2, 27, 28]
 solution : [10, 17]

After backtrack at level 8
 pending : [24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 0]
 solution : [10, 17]


Invert decision for 17 at level 7


New level: 8
 pending : [24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 0]
 solution : [10]


Before reduction : 
 pending  : [24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 0]
 solution : [10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 0]
 solution : [10]


Solution : [10] has cost 3.


Decide in level 8 among pending : [24, 2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 0]

Coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 0]
 solution : [10, 24]


New level: 9
 pending : [2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 0]
 solution : [10, 24]


Before reduction : 
 pending  : [2, 27, 28, 30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18, 0]
 solution : [10, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 4194304), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, 131072), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 65536), (17, -1), (18, 4194304), (19, 2097152), (20, 1048576), (21, 131072), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, -1), (27, 131072), (28, 4096), (29, -1), (30, 131072), (31, -1), (32, -1), (33, 131072), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {0, 2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, 0), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 24]


Solution : [10, 24] has cost 10.


Decide in level 9 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 24, 18]


New level: 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 24, 18]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 24, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {33, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 24, 18]


Before reduction : 
 pending  : []
 solution : [10, 24, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [10, 24, 18]


Solution : [10, 24, 18] has cost 17.


Before backtrack at level 10
 pending : []
 solution : [10, 24, 18]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 24, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 24]


Solution : [10, 24] has cost 10.


Decide in level 10 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 10

After decision at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 24, 19]


New level: 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 24, 19]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 24, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 16384), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 20, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 24, 19]


Before reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 24, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 16384), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 24, 19]


Solution : [10, 24, 19] has cost 19.


Before backtrack at level 11
 pending : [30, 33, 14, 15, 13]
 solution : [10, 24, 19]

After backtrack at level 11
 pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 24, 19]


Invert decision for 19 at level 10


New level: 11
 pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 24]


Before reduction : 
 pending  : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 24]


Solution : [10, 24] has cost 10.


Decide in level 11 among pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 24, 13]


New level: 12
 pending : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 24, 13]


Before reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 24, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 24, 13]


Before reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 24, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 24, 13]


Solution : [10, 24, 13] has cost 17.


Before backtrack at level 12
 pending : [30, 33, 6, 21, 20]
 solution : [10, 24, 13]

After backtrack at level 12
 pending : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 24, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 24]


Solution : [10, 24] has cost 10.


Decide in level 12 among pending : [30, 33, 6, 21, 20, 14, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 24, 20]


New level: 13
 pending : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 24, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 24, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 24, 20]


Before reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 24, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 24, 20]


Solution : [10, 24, 20] has cost 19.


Before backtrack at level 13
 pending : [30, 33, 14, 15]
 solution : [10, 24, 20]

After backtrack at level 13
 pending : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 24, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 24]


Before reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 24]


Solution : [10, 24] has cost 10.


Decide in level 13 among pending : [30, 33, 14, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [30, 33, 14, 6, 21, 16]
 solution : [10, 24, 15]


New level: 14
 pending : [30, 33, 14, 6, 21, 16]
 solution : [10, 24, 15]


Before reduction : 
 pending  : [30, 33, 14, 6, 21, 16]
 solution : [10, 24, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : {16, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 24, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 24, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 24, 15]


Solution : [10, 24, 15] has cost 17.


Before backtrack at level 14
 pending : [30, 33, 6, 21]
 solution : [10, 24, 15]

After backtrack at level 14
 pending : [30, 33, 6, 21, 14, 16]
 solution : [10, 24, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [30, 33, 6, 21, 14, 16]
 solution : [10, 24]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 16]
 solution : [10, 24]

Essensial at level 14 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 24, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 24, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 24, 14]


Solution : [10, 24, 14] has cost 17.


Before backtrack at level 14
 pending : [30, 33, 6, 21, 16]
 solution : [10, 24, 14]

After backtrack at level 14
 pending : [30, 33, 6, 21, 16, 14]
 solution : [10, 24]


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14]
 solution : [10, 24]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 15]
 solution : [10, 24]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 15]
 solution : [10, 24]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 15, 20]
 solution : [10, 24]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20]
 solution : [10, 24]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 24]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 24]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 24]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 24]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 2, 27, 28, 0, 18]
 solution : [10, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 2, 27, 28, 0, 18]
 solution : [10]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 2, 27, 28, 0, 18]
 solution : [10]

Essensial at level 9 : {0}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : {2, 27, 28}

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 0]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]
 solution : [10, 0]


Solution : [10, 0] has cost 7.


Decide in level 9 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 18 with phase True at level 9

After decision at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 0, 18]


New level: 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 0, 18]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 0, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, 4194304), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : {33, 6, 13, 14, 15, 16, 19, 20, 21, 30}

After reduction : 
 pending  : []
 solution : [10, 0, 18]


Before reduction : 
 pending  : []
 solution : [10, 0, 18]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [10, 0, 18]


Solution : [10, 0, 18] has cost 14.


Before backtrack at level 10
 pending : []
 solution : [10, 0, 18]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 0, 18]


Invert decision for 18 at level 9


New level: 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 0]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 0]


Solution : [10, 0] has cost 7.


Decide in level 10 among pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 19 with phase True at level 10

After decision at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 0, 19]


New level: 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 0, 19]


Before reduction : 
 pending  : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 0, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, 1048576), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 16384), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : {16, 20, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 0, 19]


Before reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 0, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 16384), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 13]
 solution : [10, 0, 19]


Solution : [10, 0, 19] has cost 16.


Before backtrack at level 11
 pending : [30, 33, 14, 15, 13]
 solution : [10, 0, 19]

After backtrack at level 11
 pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 0, 19]


Invert decision for 19 at level 10


New level: 11
 pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 0]


Before reduction : 
 pending  : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 0]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 13, 6, 21, 16, 20]
 solution : [10, 0]


Solution : [10, 0] has cost 7.


Decide in level 11 among pending : [30, 33, 14, 15, 13, 6, 21, 16, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 0, 13]


New level: 12
 pending : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 0, 13]


Before reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16, 20]
 solution : [10, 0, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 524288), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : {16, 14, 15}

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 0, 13]


Before reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 0, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20]
 solution : [10, 0, 13]


Solution : [10, 0, 13] has cost 14.


Before backtrack at level 12
 pending : [30, 33, 6, 21, 20]
 solution : [10, 0, 13]

After backtrack at level 12
 pending : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 0, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 0]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 20, 14, 15, 16]
 solution : [10, 0]


Solution : [10, 0] has cost 7.


Decide in level 12 among pending : [30, 33, 6, 21, 20, 14, 15, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 0, 20]


New level: 13
 pending : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 0, 20]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 15, 16]
 solution : [10, 0, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 524288), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : {16, 21, 6}

After reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 0, 20]


Before reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 0, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 14, 15]
 solution : [10, 0, 20]


Solution : [10, 0, 20] has cost 16.


Before backtrack at level 13
 pending : [30, 33, 14, 15]
 solution : [10, 0, 20]

After backtrack at level 13
 pending : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 0, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 0]


Before reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 0]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 33, 14, 15, 6, 21, 16]
 solution : [10, 0]


Solution : [10, 0] has cost 7.


Decide in level 13 among pending : [30, 33, 14, 15, 6, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [30, 33, 14, 6, 21, 16]
 solution : [10, 0, 15]


New level: 14
 pending : [30, 33, 14, 6, 21, 16]
 solution : [10, 0, 15]


Before reduction : 
 pending  : [30, 33, 14, 6, 21, 16]
 solution : [10, 0, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 262144), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : {16, 14}

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 0, 15]


Before reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 0, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21]
 solution : [10, 0, 15]


Solution : [10, 0, 15] has cost 14.


Before backtrack at level 14
 pending : [30, 33, 6, 21]
 solution : [10, 0, 15]

After backtrack at level 14
 pending : [30, 33, 6, 21, 14, 16]
 solution : [10, 0, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [30, 33, 6, 21, 14, 16]
 solution : [10, 0]


Before reduction : 
 pending  : [30, 33, 6, 21, 14, 16]
 solution : [10, 0]

Essensial at level 14 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32768), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 1024), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 0, 14]


Before reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 0, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 65536), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 65536), (31, -1), (32, -1), (33, 65536), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 33, 6, 21, 16]
 solution : [10, 0, 14]


Solution : [10, 0, 14] has cost 14.


Before backtrack at level 14
 pending : [30, 33, 6, 21, 16]
 solution : [10, 0, 14]

After backtrack at level 14
 pending : [30, 33, 6, 21, 16, 14]
 solution : [10, 0]


Before backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14]
 solution : [10, 0]

After backtrack at level 13
 pending : [30, 33, 6, 21, 16, 14, 15]
 solution : [10, 0]


Before backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 15]
 solution : [10, 0]

After backtrack at level 12
 pending : [30, 33, 6, 21, 16, 14, 15, 20]
 solution : [10, 0]


Before backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20]
 solution : [10, 0]

After backtrack at level 11
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 0]


Before backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13]
 solution : [10, 0]

After backtrack at level 10
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 0]


Before backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19]
 solution : [10, 0]

After backtrack at level 9
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18]
 solution : [10]


Before backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18]
 solution : [10]

After backtrack at level 8
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24]
 solution : [10]


Before backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24]
 solution : [10]

After backtrack at level 7
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17]
 solution : [10]


Before backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17]
 solution : [10]

After backtrack at level 6
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36]
 solution : [10]


Before backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36]
 solution : [10]

After backtrack at level 5
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 31]
 solution : [10]


Before backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 31]
 solution : [10]

After backtrack at level 4
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 31, 32]
 solution : [10]


Before backtrack at level 3
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 31, 32]
 solution : [10]

After backtrack at level 3
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 31, 32, 25]
 solution : [10]


Before backtrack at level 2
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 31, 32, 25]
 solution : [10]

After backtrack at level 2
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 31, 32, 25, 8]
 solution : [10]


Before backtrack at level 1
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 31, 32, 25, 8]
 solution : [10]

After backtrack at level 1
 pending : [30, 33, 6, 21, 16, 14, 15, 20, 13, 19, 0, 2, 27, 28, 18, 24, 17, 36, 31, 32, 25, 8, 1]
 solution : [10]


=====================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

=====================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 11

[MIN NOTE]: maximum branch and bound depth: 14

Definitions (length=2)

invariant [def_didNotPromise] didNotPromise(A) = forall P. ~promise(A,P) # definition

invariant [def_chosenAt] chosenAt(Q,P) = forall A. member(A,Q) -> promise(A,P) # definition

Equality Relations (length=0)

Solution 0 : [10, 31, 0] (length = 3)

invariant [invar_10] forall ACCEPTOR0. (exists PROPOSER0. ~promise(ACCEPTOR0,PROPOSER0)) # qcost: 3

invariant [invar_31] forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0)) # qcost: 4

invariant [invar_0] forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) # qcost: 4




[QRM NOTE]: Time elapsed since start: 9.210 seconds

[QRM NOTE]: Time elapsed since last: 0.711 seconds

[QRM NOTE]: Peak memory: 2734166 bytes


========================================================================================================================

	[MIN_CHECK] Minimization Sanity Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

========================================================================================================================

Minimization check for Solution 0

[MIN_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 9.273 seconds

[QRM NOTE]: Time elapsed since last: 0.063 seconds

[QRM NOTE]: Peak memory: 1684025 bytes


=========================================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2]

=========================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 65: invar_10
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 66: invar_31
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 67: invar_0

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 65: invar_10 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 66: invar_31 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 67: invar_0 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 65: invar_10 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 66: invar_31 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 67: invar_0 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 65: invar_10 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 66: invar_31 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 67: invar_0 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 65: invar_10 ... FAIL
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 66: invar_31 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 67: invar_0 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy: line 49: assumption

error: failed checks: 1
[IVY_CHECK RESULT]: FAIL ... exit with return code 1

[QRM NOTE]: Time elapsed since start: 11.006 seconds

[QRM NOTE]: Time elapsed since last: 1.733 seconds

[QRM NOTE]: Peak memory: 1695930 bytes


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=2

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy -s acceptor=5,proposer=2 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=5,proposer=2]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm simple-election.acceptor_5_proposer_2.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_5_proposer_2.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_5_proposer_2.finite.cpp simple-election.acceptor_5_proposer_2.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_5_proposer_2.finite.o simple-election.acceptor_5_proposer_2.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 39

[FW NOTE]: number of interpreted atoms (e.g. member,le): 50

[FW NOTE]: number of branching actions: 32

[FW NOTE]: symmetric group order: 240

[QRM NOTE]: Time elapsed since start: 6.879 seconds

[QRM NOTE]: Time elapsed since last: 6.879 seconds

[QRM NOTE]: Peak memory: 1237651 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 8

[FW NOTE]: number of total reachable states:        442

[FW NOTE]: number of dfs representative states:     28

[FW NOTE]: number of dfs non-representative states: 414


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=5,proposer=2]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2', 'acceptor3', 'acceptor4']
sort: proposer=['proposer0', 'proposer1']
sort: quorum=['quorum__acceptor0_acceptor1_acceptor2', 'quorum__acceptor0_acceptor1_acceptor3', 'quorum__acceptor0_acceptor1_acceptor4', 'quorum__acceptor0_acceptor2_acceptor3', 'quorum__acceptor0_acceptor2_acceptor4', 'quorum__acceptor0_acceptor3_acceptor4', 'quorum__acceptor1_acceptor2_acceptor3', 'quorum__acceptor1_acceptor2_acceptor4', 'quorum__acceptor1_acceptor3_acceptor4', 'quorum__acceptor2_acceptor3_acceptor4']
predicate: start('proposer',)
predicate: leader('proposer',)
predicate: promise('acceptor', 'proposer')
predicate: member('acceptor', 'quorum')
predicate: chosenAt('quorum', 'proposer')
predicate: didNotPromise('acceptor',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor0,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor0,quorum__acceptor0_acceptor1_acceptor4)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2_acceptor4)': '1', 'member(acceptor0,quorum__acceptor0_acceptor3_acceptor4)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2_acceptor3)': '0', 'member(acceptor0,quorum__acceptor1_acceptor2_acceptor4)': '0', 'member(acceptor0,quorum__acceptor1_acceptor3_acceptor4)': '0', 'member(acceptor0,quorum__acceptor2_acceptor3_acceptor4)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor4)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2_acceptor3)': '0', 'member(acceptor1,quorum__acceptor0_acceptor2_acceptor4)': '0', 'member(acceptor1,quorum__acceptor0_acceptor3_acceptor4)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor1,quorum__acceptor1_acceptor2_acceptor4)': '1', 'member(acceptor1,quorum__acceptor1_acceptor3_acceptor4)': '1', 'member(acceptor1,quorum__acceptor2_acceptor3_acceptor4)': '0', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor3)': '0', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor4)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor2,quorum__acceptor0_acceptor2_acceptor4)': '1', 'member(acceptor2,quorum__acceptor0_acceptor3_acceptor4)': '0', 'member(acceptor2,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2_acceptor4)': '1', 'member(acceptor2,quorum__acceptor1_acceptor3_acceptor4)': '0', 'member(acceptor2,quorum__acceptor2_acceptor3_acceptor4)': '1', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor2)': '0', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor4)': '0', 'member(acceptor3,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor3,quorum__acceptor0_acceptor2_acceptor4)': '0', 'member(acceptor3,quorum__acceptor0_acceptor3_acceptor4)': '1', 'member(acceptor3,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor3,quorum__acceptor1_acceptor2_acceptor4)': '0', 'member(acceptor3,quorum__acceptor1_acceptor3_acceptor4)': '1', 'member(acceptor3,quorum__acceptor2_acceptor3_acceptor4)': '1', 'member(acceptor4,quorum__acceptor0_acceptor1_acceptor2)': '0', 'member(acceptor4,quorum__acceptor0_acceptor1_acceptor3)': '0', 'member(acceptor4,quorum__acceptor0_acceptor1_acceptor4)': '1', 'member(acceptor4,quorum__acceptor0_acceptor2_acceptor3)': '0', 'member(acceptor4,quorum__acceptor0_acceptor2_acceptor4)': '1', 'member(acceptor4,quorum__acceptor0_acceptor3_acceptor4)': '1', 'member(acceptor4,quorum__acceptor1_acceptor2_acceptor3)': '0', 'member(acceptor4,quorum__acceptor1_acceptor2_acceptor4)': '1', 'member(acceptor4,quorum__acceptor1_acceptor3_acceptor4)': '1', 'member(acceptor4,quorum__acceptor2_acceptor3_acceptor4)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor4,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor4,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor4,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor4,proposer1)', 'chosenAt(quorum__acceptor0_acceptor3_acceptor4,proposer0)', 'chosenAt(quorum__acceptor0_acceptor3_acceptor4,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor4,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor4,proposer1)', 'chosenAt(quorum__acceptor1_acceptor3_acceptor4,proposer0)', 'chosenAt(quorum__acceptor1_acceptor3_acceptor4,proposer1)', 'chosenAt(quorum__acceptor2_acceptor3_acceptor4,proposer0)', 'chosenAt(quorum__acceptor2_acceptor3_acceptor4,proposer1)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'didNotPromise(acceptor3)', 'didNotPromise(acceptor4)', 'leader(proposer0)', 'leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor3,proposer0)', 'promise(acceptor3,proposer1)', 'promise(acceptor4,proposer0)', 'promise(acceptor4,proposer1)', 'start(proposer0)', 'start(proposer1)']
representative states : 571850175570473479351, 571851301470380321975, 571853553270194007223, 277858569595448028343, 130572847381923327159, 1033116730705107578039, 50470679078622857620663, 206323144655841051045883063, 206323149267527069473270967, 50177837016452718488759, 50182448702471145876663, 50475290764641285008567, 740274668534968446135, 593277176697595456695, 597888862716022844599, 744886354553395834039, 1037728416723534965943, 56929986275160976567, 20072526924760837303, 130861077758075038903, 277856317795634343095, 130570595582109641911, 1033114478905293892791, 50470676826823043935415, 206323144653589251232197815, 206323149265275269659585719, 50475288512841471323319, 1037726164923721280695


=== State Orbit 0 =====================
size : 1
repr state: 000000000000000000001111100000000000000
lex min decimal: 571850175570473479351
states:
000000000000000000001111100000000000000




=== State Orbit 1 =====================
size : 2
repr state: 000000000000000000001111100000000000010
lex min decimal: 571851301470380321975
states:
000000000000000000001111100000000000001
000000000000000000001111100000000000010




=== State Orbit 2 =====================
size : 1
repr state: 000000000000000000001111100000000000011
lex min decimal: 571853553270194007223
states:
000000000000000000001111100000000000011




=== State Orbit 3 =====================
size : 10
repr state: 000000000000000000000111100100000000011
lex min decimal: 277858569595448028343
states:
000000000000000000000111100010000000011
000000000000000000001011100000100000011
000000000000000000001110100000000100011
000000000000000000001011100001000000011
000000000000000000001101100000010000011
000000000000000000001111000000000001011
000000000000000000001110100000000010011
000000000000000000001111000000000000111
000000000000000000001101100000001000011
000000000000000000000111100100000000011




=== State Orbit 4 =====================
size : 20
repr state: 000000000000000000000011100101000000011
lex min decimal: 130572847381923327159
states:
000000000000000000001011000000100000111
000000000000000000001001100001010000011
000000000000000000000011100101000000011
000000000000000000001101000000001000111
000000000000000000000110100100000100011
000000000000000000001110000000000101011
000000000000000000001100100000010100011
000000000000000000000101100100010000011
000000000000000000001001100000101000011
000000000000000000000011100010100000011
000000000000000000000110100010000010011
000000000000000000001010100001000100011
000000000000000000001101000000010001011
000000000000000000001011000001000001011
000000000000000000001010100000100010011
000000000000000000001110000000000010111
000000000000000000000111000010000000111
000000000000000000000101100010001000011
000000000000000000001100100000001010011
000000000000000000000111000100000001011




=== State Orbit 5 =====================
size : 20
repr state: 100000000000000000000001100101010000011
lex min decimal: 1033116730705107578039
states:
001000000000000000000010100101000100011
000000000000000100001001000000101000111
000000100000000000000100100100010100011
000000000000001000001001000001010001011
000000000000000000101100000000010101011
000000000100000000000101000010001000111
000000010000000000000100100010001010011
000000000000100000001000100001010100011
000010000000000000000011000101000001011
000000000000000010001010000001000101011
010000000000000000000001100010101000011
000000000000010000001000100000101010011
000000000010000000000110000100000101011
000000000001000000000110000010000010111
000000001000000000000101000100010001011
000001000000000000000011000010100000111
000000000000000001001010000000100010111
000000000000000000011100000000001010111
100000000000000000000001100101010000011
000100000000000000000010100010100010011




=== State Orbit 6 =====================
size : 10
repr state: 101000100000100000000000100101010100011
lex min decimal: 50470679078622857620663
states:
001010000010000010000010000101000101011
100010001000001000000001000101010001011
010001000100000100000001000010101000111
000000000000010101011000000000101010111
101000100000100000000000100101010100011
010100010000010000000000100010101010011
000000000000101010101000000001010101011
000101000001000001000010000010100010111
000000010101000000010100000010001010111
000000101010000000100100000100010101011




=== State Orbit 7 =====================
size : 2
repr state: 101010101010101010100000000101010101011
lex min decimal: 206323144655841051045883063
states:
010101010101010101010000000010101010111
101010101010101010100000000101010101011




=== State Orbit 8 =====================
size : 2
repr state: 101010101010101010100000010101010101011
lex min decimal: 206323149267527069473270967
states:
010101010101010101010000001010101010111
101010101010101010100000010101010101011




=== State Orbit 9 =====================
size : 10
repr state: 101000100000100000000000000101010100111
lex min decimal: 50177837016452718488759
states:
001010000010000010000000000101001101011
000101000001000001000000000010110010111
000000000000101010100000000011010101011
000000101010000000100000000100110101011
010100010000010000000000000010101011011
010001000100000100000000000010101100111
000000010101000000010000000011001010111
000000000000010101010000000100101010111
100010001000001000000000000101010011011
101000100000100000000000000101010100111




=== State Orbit 10 =====================
size : 10
repr state: 101000100000100000000000010101010100111
lex min decimal: 50182448702471145876663
states:
101000100000100000000000010101010100111
000000101010000000100000010100110101011
000000000000101010100000010011010101011
100010001000001000000000010101010011011
000000000000010101010000001100101010111
000101000001000001000000001010110010111
000000010101000000010000001011001010111
001010000010000010000000010101001101011
010001000100000100000000001010101100111
010100010000010000000000001010101011011




=== State Orbit 11 =====================
size : 10
repr state: 101000100000100000000000110101010100011
lex min decimal: 50475290764641285008567
states:
010100010000010000000000101010101010011
100010001000001000000001010101010001011
101000100000100000000000110101010100011
010001000100000100000001001010101000111
000000000000101010101000010001010101011
000000010101000000010100001010001010111
001010000010000010000010010101000101011
000000000000010101011000001000101010111
000101000001000001000010001010100010111
000000101010000000100100010100010101011




=== State Orbit 12 =====================
size : 40
repr state: 100000000000000000000000100101010010011
lex min decimal: 740274668534968446135
states:
000000000000010000000000100100101010011
000000100000000000000100000100010100111
000000000000100000001000000001010100111
000000000000010000001000000000101011011
000000000000001000001000000001010011011
000000000000100000000000100011010100011
000000000000001000000001000011010001011
010000000000000000000001000010101001011
000001000000000000000001000010110000111
000000000001000000000100000010010010111
000000000000000010000010000011000101011
000001000000000000000010000010100100111
000000000000000000010100000100001010111
000000000100000000000100000010001100111
000000000000000000101000000000110101011
000000001000000000000001000100110001011
000000010000000000000100000010001011011
000000000000000100000001000100101000111
001000000000000000000000100101001100011
000100000000000000000000100010110010011
000100000000000000000010000010100011011
000000000000000100001000000000101100111
000000000000000001001000000000110010111
000000010000000000000000100011001010011
000010000000000000000010000101000011011
001000000000000000000010000101000100111
000000001000000000000100000100010011011
000000000000000001000010000100100010111
100000000000000000000001000101010000111
000000000100000000000001000011001000111
010000000000000000000000100010101100011
000000000000000000011000000001001010111
100000000000000000000000100101010010011
000000000010000000000010000100100101011
000000000010000000000100000100001101011
000000000000000010001000000001001101011
000000100000000000000000100100110100011
000000000000000000100100000010010101011
000010000000000000000001000101001001011
000000000001000000000010000011000010111




=== State Orbit 13 =====================
size : 20
repr state: 100000000000000000000000000101010010111
lex min decimal: 593277176697595456695
states:
000000010000000000000000000011001011011
000000000000000000010000000101001010111
000000000001000000000000000011010010111
000000000010000000000000000100101101011
000000000100000000000000000011001100111
000000000000100000000000000011010100111
000000000000010000000000000100101011011
000000000000000010000000000011001101011
000000000000000000100000000010110101011
100000000000000000000000000101010010111
000000000000001000000000000011010011011
000100000000000000000000000010110011011
000000000000000001000000000100110010111
000000100000000000000000000100110100111
000000001000000000000000000100110011011
010000000000000000000000000010101101011
000010000000000000000000000101001011011
001000000000000000000000000101001100111
000000000000000100000000000100101100111
000001000000000000000000000010110100111




=== State Orbit 14 =====================
size : 20
repr state: 100000000000000000000000010101010010111
lex min decimal: 597888862716022844599
states:
000000100000000000000000010100110100111
000000000010000000000000010100101101011
000000000000000010000000010011001101011
000000000000100000000000010011010100111
000100000000000000000000001010110011011
000000010000000000000000001011001011011
000000000000000100000000001100101100111
000000000001000000000000001011010010111
000000000000000001000000001100110010111
001000000000000000000000010101001100111
000000000100000000000000001011001100111
000010000000000000000000010101001011011
000000000000001000000000010011010011011
100000000000000000000000010101010010111
010000000000000000000000001010101101011
000001000000000000000000001010110100111
000000000000000000010000001101001010111
000000001000000000000000010100110011011
000000000000010000000000001100101011011
000000000000000000100000010010110101011




=== State Orbit 15 =====================
size : 40
repr state: 100000000000000000000000110101010010011
lex min decimal: 744886354553395834039
states:
000000000000010000000000101100101010011
000000000000100000000000110011010100011
000000000000100000001000010001010100111
000000000001000000000100001010010010111
000000000000000000010100001100001010111
000000010000000000000100001010001011011
001000000000000000000010010101000100111
000000010000000000000000101011001010011
000100000000000000000010001010100011011
010000000000000000000000101010101100011
000000000000000100000001001100101000111
000000000000000000011000001001001010111
000000001000000000000001010100110001011
000000000000000001000010001100100010111
100000000000000000000000110101010010011
010000000000000000000001001010101001011
000000000000000010001000010001001101011
000000100000000000000100010100010100111
000000000000000010000010010011000101011
000000000001000000000010001011000010111
000010000000000000000001010101001001011
000000000000000000101000010000110101011
000000100000000000000000110100110100011
000010000000000000000010010101000011011
100000000000000000000001010101010000111
000000000000000000100100010010010101011
000000001000000000000100010100010011011
000000000010000000000010010100100101011
000000000000000100001000001000101100111
000000000000000001001000001000110010111
000000000000010000001000001000101011011
000000000000001000001000010001010011011
000001000000000000000010001010100100111
000100000000000000000000101010110010011
001000000000000000000000110101001100011
000001000000000000000001001010110000111
000000000000001000000001010011010001011
000000000010000000000100010100001101011
000000000100000000000100001010001100111
000000000100000000000001001011001000111




=== State Orbit 16 =====================
size : 20
repr state: 100000000000000000000001110101010000011
lex min decimal: 1037728416723534965943
states:
000000000000000100001001001000101000111
000000000000000001001010001000100010111
000010000000000000000011010101000001011
000000000000000000011100001000001010111
000000010000000000000100101010001010011
000000100000000000000100110100010100011
100000000000000000000001110101010000011
000000001000000000000101010100010001011
000001000000000000000011001010100000111
000100000000000000000010101010100010011
001000000000000000000010110101000100011
000000000000100000001000110001010100011
000000000010000000000110010100000101011
000000000000001000001001010001010001011
000000000000000010001010010001000101011
000000000001000000000110001010000010111
010000000000000000000001101010101000011
000000000000010000001000101000101010011
000000000000000000101100010000010101011
000000000100000000000101001010001000111




=== State Orbit 17 =====================
size : 60
repr state: 000000000000000000000001100101001000011
lex min decimal: 56929986275160976567
states:
000000000000000000000101000010001001011
000000000000000000000100100010010010011
000000000000000000000100100010001100011
000000000000000000000001100010110000011
000000000000000000000001100011001000011
000000000000000000000001100100101000011
000000000000000000001100000000010100111
000000000000000000000011000100100001011
000000000000000000001001000000110000111
000000000000000000001001000001001001011
000000000000000000000101000010010001011
000000000000000000000010100100100010011
000000000000000000001010000000100100111
000000000000000000000010100100100100011
000000000000000000000001100011010000011
000000000000000000001000100001001010011
000000000000000000000100100100001010011
000000000000000000000011000011000001011
000000000000000000000101000100001000111
000000000000000000001000100001010010011
000000000000000000001100000000010011011
000000000000000000001010000000100011011
000000000000000000001001000000101001011
000000000000000000000010100101000010011
000000000000000000000011000101000000111
000000000000000000000110000100000100111
000000000000000000001000100000110100011
000000000000000000000110000100000010111
000000000000000000001000100000110010011
000000000000000000001001000001001000111
000000000000000000000001100101001000011
000000000000000000001100000000001101011
000000000000000000001010000001000100111
000000000000000000000101000010010000111
000000000000000000000110000010000101011
000000000000000000001001000000110001011
000000000000000000000011000100100000111
000000000000000000001010000001000011011
000000000000000000001100000000001100111
000000000000000000000010100011000100011
000000000000000000000101000100010000111
000000000000000000000100100100001100011
000000000000000000000011000010100001011
000000000000000000001000100001001100011
000000000000000000001100000000001011011
000000000000000000000101000100001001011
000000000000000000000100100100010010011
000000000000000000000011000011000000111
000000000000000000000110000100000011011
000000000000000000000010100010100100011
000000000000000000000110000010000011011
000000000000000000000100100010010100011
000000000000000000001010000000100101011
000000000000000000001000100000101100011
000000000000000000001010000001000010111
000000000000000000001001000001010000111
000000000000000000001100000000010010111
000000000000000000000110000010000100111
000000000000000000000010100011000010011
000000000000000000000001100100110000011




=== State Orbit 18 =====================
size : 30
repr state: 000000000000000000000000100101001010011
lex min decimal: 20072526924760837303
states:
000000000000000000000010000011000100111
000000000000000000001000000000110100111
000000000000000000000001000011001001011
000000000000000000001000000001010010111
000000000000000000000000100100101100011
000000000000000000000000100011010010011
000000000000000000000001000100101001011
000000000000000000000000100101001010011
000000000000000000000010000010100101011
000000000000000000001000000000101101011
000000000000000000000100000100001100111
000000000000000000000100000010010011011
000000000000000000000001000100110000111
000000000000000000000001000010110001011
000000000000000000000100000100001011011
000000000000000000000010000100100011011
000000000000000000000000100010110100011
000000000000000000000010000011000011011
000000000000000000000100000010010100111
000000000000000000000100000010001101011
000000000000000000000000100011001100011
000000000000000000000100000100010010111
000000000000000000001000000000110011011
000000000000000000000001000101001000111
000000000000000000000010000100100100111
000000000000000000001000000001001011011
000000000000000000001000000001001100111
000000000000000000000001000011010000111
000000000000000000000000100100110010011
000000000000000000000010000101000010111




=== State Orbit 19 =====================
size : 20
repr state: 000000000000000000000011100100100000011
lex min decimal: 130861077758075038903
states:
000000000000000000001100100000010010011
000000000000000000001100100000001100011
000000000000000000001101000000010000111
000000000000000000001110000000000100111
000000000000000000000111000100000000111
000000000000000000001110000000000011011
000000000000000000000011100011000000011
000000000000000000000110100010000100011
000000000000000000001011000001000000111
000000000000000000001010100000100100011
000000000000000000000110100100000010011
000000000000000000000111000010000001011
000000000000000000001011000000100001011
000000000000000000000101100010010000011
000000000000000000001001100001001000011
000000000000000000000011100100100000011
000000000000000000000101100100001000011
000000000000000000001101000000001001011
000000000000000000001001100000110000011
000000000000000000001010100001000010011




=== State Orbit 20 =====================
size : 10
repr state: 000000000000000000000111100100000000010
lex min decimal: 277856317795634343095
states:
000000000000000000001011100000100000001
000000000000000000000111100010000000001
000000000000000000000111100100000000010
000000000000000000001110100000000010001
000000000000000000001101100000010000010
000000000000000000001101100000001000001
000000000000000000001111000000000001010
000000000000000000001110100000000100010
000000000000000000001111000000000000101
000000000000000000001011100001000000010




=== State Orbit 21 =====================
size : 20
repr state: 000000000000000000000011100101000000010
lex min decimal: 130570595582109641911
states:
000000000000000000001011000000100000101
000000000000000000000101100010001000001
000000000000000000001101000000010001010
000000000000000000001001100000101000001
000000000000000000001010100000100010001
000000000000000000001010100001000100010
000000000000000000001110000000000101010
000000000000000000001100100000001010001
000000000000000000000111000100000001010
000000000000000000000110100010000010001
000000000000000000000110100100000100010
000000000000000000001100100000010100010
000000000000000000001101000000001000101
000000000000000000000101100100010000010
000000000000000000001001100001010000010
000000000000000000000111000010000000101
000000000000000000001011000001000001010
000000000000000000001110000000000010101
000000000000000000000011100101000000010
000000000000000000000011100010100000001




=== State Orbit 22 =====================
size : 20
repr state: 100000000000000000000001100101010000010
lex min decimal: 1033114478905293892791
states:
000000100000000000000100100100010100010
000000000000100000001000100001010100010
000000000000000001001010000000100010101
000000000000010000001000100000101010001
000000000000000000011100000000001010101
000000010000000000000100100010001010001
001000000000000000000010100101000100010
000000000000000010001010000001000101010
100000000000000000000001100101010000010
000000000100000000000101000010001000101
000010000000000000000011000101000001010
000000000001000000000110000010000010101
000000000000000000101100000000010101010
000001000000000000000011000010100000101
010000000000000000000001100010101000001
000000000000001000001001000001010001010
000000000000000100001001000000101000101
000100000000000000000010100010100010001
000000001000000000000101000100010001010
000000000010000000000110000100000101010




=== State Orbit 23 =====================
size : 10
repr state: 101000100000100000000000100101010100010
lex min decimal: 50470676826823043935415
states:
010001000100000100000001000010101000101
001010000010000010000010000101000101010
100010001000001000000001000101010001010
000000010101000000010100000010001010101
000000000000010101011000000000101010101
000000000000101010101000000001010101010
101000100000100000000000100101010100010
000000101010000000100100000100010101010
000101000001000001000010000010100010101
010100010000010000000000100010101010001




=== State Orbit 24 =====================
size : 2
repr state: 101010101010101010100000000101010101010
lex min decimal: 206323144653589251232197815
states:
101010101010101010100000000101010101010
010101010101010101010000000010101010101




=== State Orbit 25 =====================
size : 2
repr state: 101010101010101010100000010101010101010
lex min decimal: 206323149265275269659585719
states:
010101010101010101010000001010101010101
101010101010101010100000010101010101010




=== State Orbit 26 =====================
size : 10
repr state: 101000100000100000000000110101010100010
lex min decimal: 50475288512841471323319
states:
010100010000010000000000101010101010001
000101000001000001000010001010100010101
000000101010000000100100010100010101010
010001000100000100000001001010101000101
101000100000100000000000110101010100010
000000000000101010101000010001010101010
000000010101000000010100001010001010101
100010001000001000000001010101010001010
001010000010000010000010010101000101010
000000000000010101011000001000101010101




=== State Orbit 27 =====================
size : 20
repr state: 100000000000000000000001110101010000010
lex min decimal: 1037726164923721280695
states:
001000000000000000000010110101000100010
000000000010000000000110010100000101010
000000000100000000000101001010001000101
000000000000000001001010001000100010101
000000010000000000000100101010001010001
000000000000000010001010010001000101010
000000000000000000011100001000001010101
000000000000010000001000101000101010001
000100000000000000000010101010100010001
000000000000001000001001010001010001010
000000000000100000001000110001010100010
010000000000000000000001101010101000001
100000000000000000000001110101010000010
000000000000000100001001001000101000101
000010000000000000000011010101000001010
000001000000000000000011001010100000101
000000001000000000000101010100010001010
000000000000000000101100010000010101010
000000100000000000000100110100010100010
000000000001000000000110001010000010101



[QRM NOTE]: Time elapsed since start: 10.240 seconds

[QRM NOTE]: Time elapsed since last: 3.360 seconds

[QRM NOTE]: Peak memory: 1416948 bytes


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=5,proposer=2]

=========================================================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 14.332 seconds

[QRM NOTE]: Time elapsed since last: 4.092 seconds

[QRM NOTE]: Peak memory: 1024090 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_2.0.ivy -s acceptor=3,proposer=3 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_3.finite.cpp simple-election.acceptor_3_proposer_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_3.finite.o simple-election.acceptor_3_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 27

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: number of branching actions: 21

[FW NOTE]: symmetric group order: 36

[QRM NOTE]: Time elapsed since start: 6.368 seconds

[QRM NOTE]: Time elapsed since last: 6.368 seconds

[QRM NOTE]: Peak memory: 1193993 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        254

[FW NOTE]: number of dfs representative states:     26

[FW NOTE]: number of dfs non-representative states: 228


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: leader('proposer',)
predicate: start('proposer',)
predicate: member('acceptor', 'quorum')
predicate: promise('acceptor', 'proposer')
predicate: didNotPromise('acceptor',)
predicate: chosenAt('quorum', 'proposer')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 117440939, 117441451, 117442475, 117444523, 50597803, 201367467, 9798197163, 9800294315, 134782891, 136880043, 203464619, 17108907, 348075, 50595755, 201365419, 9798195115, 9800292267, 134780843, 136877995, 203462571, 17106859, 50594731, 201364395, 9798194091, 9800291243, 203461547


=== State Orbit 0 =====================
size : 1
repr state: 000000000111000000000000000
lex min decimal: 117440939
states:
000000000111000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 000000000111000000000000100
lex min decimal: 117441451
states:
000000000111000000000000010
000000000111000000000000100
000000000111000000000000001




=== State Orbit 2 =====================
size : 3
repr state: 000000000111000000000000110
lex min decimal: 117442475
states:
000000000111000000000000110
000000000111000000000000101
000000000111000000000000011




=== State Orbit 3 =====================
size : 1
repr state: 000000000111000000000000111
lex min decimal: 117444523
states:
000000000111000000000000111




=== State Orbit 4 =====================
size : 9
repr state: 000000000011000100000000111
lex min decimal: 50597803
states:
000000000011000100000000111
000000000011000001000000111
000000000011000010000000111
000000000110000000000100111
000000000101000000100000111
000000000101000000001000111
000000000110000000000001111
000000000101000000010000111
000000000110000000000010111




=== State Orbit 5 =====================
size : 9
repr state: 100000000001000100100000111
lex min decimal: 201367467
states:
001000000001000001001000111
000001000010000001000001111
000000010100000000010010111
000000100100000000100100111
000010000010000010000010111
100000000001000100100000111
000100000010000100000100111
010000000001000010010000111
000000001100000000001001111




=== State Orbit 6 =====================
size : 3
repr state: 100100100000000100100100111
lex min decimal: 9798197163
states:
100100100000000100100100111
010010010000000010010010111
001001001000000001001001111




=== State Orbit 7 =====================
size : 3
repr state: 100100100000100100100100111
lex min decimal: 9800294315
states:
001001001000001001001001111
010010010000010010010010111
100100100000100100100100111




=== State Orbit 8 =====================
size : 18
repr state: 100000000000000100100010111
lex min decimal: 134782891
states:
100000000000000100100001111
000000100000000001100100111
000000010000000001010010111
100000000000000100100010111
000100000000000100010100111
000000010000000100010010111
001000000000000001001010111
000000001000000010001001111
000010000000000010001010111
000001000000000001100001111
000000100000000010100100111
000010000000000010100010111
001000000000000001001100111
000100000000000100001100111
000001000000000001010001111
000000001000000100001001111
010000000000000010010001111
010000000000000010010100111




=== State Orbit 9 =====================
size : 18
repr state: 100000000000100100100010111
lex min decimal: 136880043
states:
001000000000001001001010111
000010000000010010001010111
000001000000001001010001111
000100000000100100010100111
000010000000010010100010111
000000001000001100001001111
100000000000100100100010111
000000100000100001100100111
010000000000010010010001111
000000001000001010001001111
000100000000100100001100111
010000000000010010010100111
000000010000010100010010111
000000100000100010100100111
000000010000010001010010111
000001000000001001100001111
100000000000100100100001111
001000000000001001001100111




=== State Orbit 10 =====================
size : 9
repr state: 100000000001100100100000111
lex min decimal: 203464619
states:
000000100100100000100100111
100000000001100100100000111
000010000010010010000010111
000100000010100100000100111
000000001100001000001001111
001000000001001001001000111
000001000010001001000001111
010000000001010010010000111
000000010100010000010010111




=== State Orbit 11 =====================
size : 18
repr state: 000000000001000100010000111
lex min decimal: 17108907
states:
000000000001000010100000111
000000000010000100000001111
000000000100000000001010111
000000000001000010001000111
000000000010000001000100111
000000000100000000010001111
000000000100000000100010111
000000000010000010000001111
000000000001000100001000111
000000000010000001000010111
000000000001000100010000111
000000000100000000100001111
000000000001000001100000111
000000000001000001010000111
000000000100000000010100111
000000000010000010000100111
000000000100000000001100111
000000000010000100000010111




=== State Orbit 12 =====================
size : 6
repr state: 000000000000000100010001111
lex min decimal: 348075
states:
000000000000000010100001111
000000000000000001100010111
000000000000000100010001111
000000000000000001010100111
000000000000000010001100111
000000000000000100001010111




=== State Orbit 13 =====================
size : 18
repr state: 000000000011000100000000110
lex min decimal: 50595755
states:
000000000101000000100000110
000000000101000000001000011
000000000110000000000100110
000000000110000000000001011
000000000011000001000000011
000000000011000010000000110
000000000110000000000010110
000000000011000100000000101
000000000101000000100000101
000000000101000000001000101
000000000110000000000010011
000000000110000000000001101
000000000011000100000000110
000000000011000001000000101
000000000101000000010000110
000000000011000010000000011
000000000110000000000100101
000000000101000000010000011




=== State Orbit 14 =====================
size : 18
repr state: 100000000001000100100000110
lex min decimal: 201365419
states:
000100000010000100000100110
100000000001000100100000110
000000001100000000001001101
000000100100000000100100110
000000010100000000010010011
001000000001000001001000011
000010000010000010000010011
000000010100000000010010110
000001000010000001000001101
000100000010000100000100101
000010000010000010000010110
000000100100000000100100101
000000001100000000001001011
000001000010000001000001011
001000000001000001001000101
100000000001000100100000101
010000000001000010010000011
010000000001000010010000110




=== State Orbit 15 =====================
size : 6
repr state: 100100100000000100100100110
lex min decimal: 9798195115
states:
010010010000000010010010110
010010010000000010010010011
001001001000000001001001101
100100100000000100100100110
100100100000000100100100101
001001001000000001001001011




=== State Orbit 16 =====================
size : 6
repr state: 100100100000100100100100110
lex min decimal: 9800292267
states:
100100100000100100100100101
100100100000100100100100110
001001001000001001001001011
001001001000001001001001101
010010010000010010010010110
010010010000010010010010011




=== State Orbit 17 =====================
size : 18
repr state: 100000000000000100100010110
lex min decimal: 134780843
states:
000000010000000001010010011
000000001000000010001001011
010000000000000010010100110
000100000000000100010100110
001000000000000001001100101
000001000000000001010001011
000000010000000100010010110
100000000000000100100010110
000001000000000001100001101
001000000000000001001010011
000010000000000010100010110
100000000000000100100001101
010000000000000010010001011
000010000000000010001010011
000100000000000100001100101
000000100000000010100100110
000000100000000001100100101
000000001000000100001001101




=== State Orbit 18 =====================
size : 18
repr state: 100000000000100100100010110
lex min decimal: 136877995
states:
000000010000010001010010011
001000000000001001001100101
010000000000010010010100110
000010000000010010100010110
001000000000001001001010011
000100000000100100010100110
000001000000001001010001011
000100000000100100001100101
000000001000001100001001101
100000000000100100100010110
000000001000001010001001011
000000100000100001100100101
000000010000010100010010110
000001000000001001100001101
010000000000010010010001011
100000000000100100100001101
000010000000010010001010011
000000100000100010100100110




=== State Orbit 19 =====================
size : 18
repr state: 100000000001100100100000110
lex min decimal: 203462571
states:
001000000001001001001000011
000000001100001000001001101
000000100100100000100100101
000001000010001001000001101
000000100100100000100100110
100000000001100100100000110
001000000001001001001000101
000100000010100100000100110
010000000001010010010000011
000010000010010010000010110
000001000010001001000001011
000000010100010000010010011
000100000010100100000100101
000010000010010010000010011
000000001100001000001001011
000000010100010000010010110
100000000001100100100000101
010000000001010010010000110




=== State Orbit 20 =====================
size : 18
repr state: 000000000001000100010000110
lex min decimal: 17106859
states:
000000000010000100000010110
000000000100000000100001101
000000000100000000001100101
000000000001000010100000110
000000000001000001100000101
000000000010000010000001011
000000000010000001000100101
000000000100000000010100110
000000000001000100001000101
000000000100000000100010110
000000000001000100010000110
000000000001000010001000011
000000000010000001000010011
000000000010000010000100110
000000000010000100000001101
000000000100000000001010011
000000000100000000010001011
000000000001000001010000011




=== State Orbit 21 =====================
size : 9
repr state: 000000000011000100000000100
lex min decimal: 50594731
states:
000000000110000000000010010
000000000011000100000000100
000000000011000001000000001
000000000011000010000000010
000000000101000000010000010
000000000101000000001000001
000000000110000000000100100
000000000101000000100000100
000000000110000000000001001




=== State Orbit 22 =====================
size : 9
repr state: 100000000001000100100000100
lex min decimal: 201364395
states:
000100000010000100000100100
000000001100000000001001001
001000000001000001001000001
000001000010000001000001001
100000000001000100100000100
000010000010000010000010010
000000100100000000100100100
000000010100000000010010010
010000000001000010010000010




=== State Orbit 23 =====================
size : 3
repr state: 100100100000000100100100100
lex min decimal: 9798194091
states:
010010010000000010010010010
100100100000000100100100100
001001001000000001001001001




=== State Orbit 24 =====================
size : 3
repr state: 100100100000100100100100100
lex min decimal: 9800291243
states:
010010010000010010010010010
100100100000100100100100100
001001001000001001001001001




=== State Orbit 25 =====================
size : 9
repr state: 100000000001100100100000100
lex min decimal: 203461547
states:
001000000001001001001000001
000001000010001001000001001
000000100100100000100100100
100000000001100100100000100
000100000010100100000100100
000000001100001000001001001
010000000001010010010000010
000000010100010000010010010
000010000010010010000010010



[QRM NOTE]: Time elapsed since start: 6.764 seconds

[QRM NOTE]: Time elapsed since last: 0.396 seconds

[QRM NOTE]: Peak memory: 1300577 bytes


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 29400874923, binary: 011011011000011011011011111

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 6.934 seconds

[QRM NOTE]: Time elapsed since last: 0.170 seconds

[QRM NOTE]: Peak memory: 326548 bytes

next size: acceptor=3,proposer=3


*****************************************************************************************************

	[Synthesize Rmin]: ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3

*****************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.ivy -s acceptor=3,proposer=3 -f 1 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.040 seconds

[QRM NOTE]: Time elapsed since last: 0.040 seconds

[QRM NOTE]: Peak memory: 109108 bytes


====================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

====================================================================================================================


===============================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

===============================================================================================================


=== Prime Orbit 0 =====================
size : 18
num_suborbits: 1
0 (*) : 1---------1----------------
0     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
1     : -1--------1----------------
1     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
2     : --1-------1----------------
2     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor1)']
3     : ---1-------1---------------
3     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
4     : ----1------1---------------
4     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
5     : -----1-----1---------------
5     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
6     : 1--------1-----------------
6     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
7     : -1-------1-----------------
7     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
8     : --1------1-----------------
8     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor0)']
9     : ------1----1---------------
9     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
10     : -------1---1---------------
10     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
11     : --------1--1---------------
11     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
12     : ---1-----1-----------------
12     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
13     : ----1----1-----------------
13     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
14     : -----1---1-----------------
14     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor0)']
15     : ------1---1----------------
15     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
16     : -------1--1----------------
16     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
17     : --------1-1----------------
17     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 9
num_suborbits: 1
18 (*) : ----------1-------1--------
18     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
19     : ----------1--------1-------
19     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
20     : ----------1---------1------
20     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer2)']
21     : -----------1---------1-----
21     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
22     : -----------1----------1----
22     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
23     : -----------1-----------1---
23     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer2)']
24     : ---------1-----1-----------
24     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
25     : ---------1------1----------
25     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
26     : ---------1-------1---------
26     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 9
num_suborbits: 1
27 (*) : ---------------1--------0--
27     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
28     : ----------------1--------0-
28     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
29     : -----------------1--------0
29     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
30     : ------------------1-----0--
30     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
31     : -------------------1-----0-
31     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
32     : --------------------1-----0
32     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
33     : ---------------------1--0--
33     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
34     : ----------------------1--0-
34     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
35     : -----------------------1--0
35     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 9
num_suborbits: 1
36 (*) : 1-----------------------0--
36     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
37     : -1-----------------------0-
37     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
38     : --1-----------------------0
38     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
39     : ---1--------------------0--
39     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
40     : ----1--------------------0-
40     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
41     : -----1--------------------0
41     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
42     : ------1-----------------0--
42     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
43     : -------1-----------------0-
43     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
44     : --------1-----------------0
44     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 9
num_suborbits: 1
45 (*) : -------------------11------
45     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
46     : ------------------1-1------
46     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
47     : ------------------11-------
47     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
48     : ----------------------11---
48     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
49     : ---------------------1-1---
49     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
50     : ---------------------11----
50     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
51     : ----------------11---------
51     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
52     : ---------------1-1---------
52     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
53     : ---------------11----------
53     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 18
num_suborbits: 1
54 (*) : 1-----------------0--------
54     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
55     : -1-----------------0-------
55     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
56     : --1-----------------0------
56     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor1,proposer2)']
57     : ---1-----------------0-----
57     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
58     : ----1-----------------0----
58     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
59     : -----1-----------------0---
59     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
60     : 1--------------0-----------
60     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
61     : -1--------------0----------
61     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
62     : --1--------------0---------
62     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor0,proposer2)']
63     : ------1--------------0-----
63     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
64     : -------1--------------0----
64     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
65     : --------1--------------0---
65     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
66     : ---1-----------0-----------
66     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
67     : ----1-----------0----------
67     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
68     : -----1-----------0---------
68     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
69     : ------1-----------0--------
69     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
70     : -------1-----------0-------
70     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
71     : --------1-----------0------
71     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 36
num_suborbits: 1
72 (*) : 1-------------------1------
72     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
73     : 1------------------1-------
73     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
74     : -1------------------1------
74     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
75     : -1----------------1--------
75     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
76     : --1----------------1-------
76     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer1)']
77     : --1---------------1--------
77     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer0)']
78     : ---1-------------------1---
78     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
79     : ---1------------------1----
79     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
80     : ----1------------------1---
80     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
81     : ----1----------------1-----
81     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
82     : -----1----------------1----
82     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
83     : -----1---------------1-----
83     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
84     : 1----------------1---------
84     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer2)']
85     : 1---------------1----------
85     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
86     : -1---------------1---------
86     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer2)']
87     : -1-------------1-----------
87     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
88     : --1-------------1----------
88     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer1)']
89     : --1------------1-----------
89     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer0)']
90     : ------1----------------1---
90     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
91     : ------1---------------1----
91     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
92     : -------1---------------1---
92     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
93     : -------1-------------1-----
93     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
94     : --------1-------------1----
94     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
95     : --------1------------1-----
95     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
96     : ---1-------------1---------
96     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer2)']
97     : ---1------------1----------
97     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
98     : ----1------------1---------
98     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer2)']
99     : ----1----------1-----------
99     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
100     : -----1----------1----------
100     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer1)']
101     : -----1---------1-----------
101     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer0)']
102     : ------1-------------1------
102     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer2)']
103     : ------1------------1-------
103     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
104     : -------1------------1------
104     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer2)']
105     : -------1----------1--------
105     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
106     : --------1----------1-------
106     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer1)']
107     : --------1---------1--------
107     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 27
num_suborbits: 2
108 (*) : 11-------------------------
108     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
109     : 1-1------------------------
109     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
110     : -11------------------------
110     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
111     : ---11----------------------
111     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
112     : ---1-1---------------------
112     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
113     : ----11---------------------
113     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
114     : ------11-------------------
114     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
115     : ------1-1------------------
115     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
116     : -------11------------------
116     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
117 (*) : --1-1----------------------
117     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
118     : -1---1---------------------
118     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
119     : --11-----------------------
119     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
120     : 1----1---------------------
120     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
121     : -1-1-----------------------
121     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
122     : 1---1----------------------
122     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
123     : --1----1-------------------
123     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
124     : -1------1------------------
124     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
125     : --1---1--------------------
125     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
126     : 1-------1------------------
126     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
127     : -1----1--------------------
127     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
128     : 1------1-------------------
128     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
129     : -----1-1-------------------
129     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
130     : ----1---1------------------
130     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
131     : -----11--------------------
131     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
132     : ---1----1------------------
132     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
133     : ----1-1--------------------
133     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
134     : ---1---1-------------------
134     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 18
num_suborbits: 1
135 (*) : ----1-------1--------------
135     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
136     : -----1------1--------------
136     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
137     : ---1---------1-------------
137     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
138     : -----1-------1-------------
138     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
139     : ---1----------1------------
139     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
140     : ----1---------1------------
140     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
141     : -1----------1--------------
141     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
142     : --1---------1--------------
142     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
143     : 1------------1-------------
143     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
144     : --1----------1-------------
144     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
145     : 1-------------1------------
145     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
146     : -1------------1------------
146     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
147     : -------1----1--------------
147     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
148     : --------1---1--------------
148     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
149     : ------1------1-------------
149     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
150     : --------1----1-------------
150     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
151     : ------1-------1------------
151     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
152     : -------1------1------------
152     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 3
num_suborbits: 1
153 (*) : ------------11-------------
153     : ['leader(proposer0)', 'leader(proposer1)']
154     : ------------1-1------------
154     : ['leader(proposer0)', 'leader(proposer2)']
155     : -------------11------------
155     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : ------------1-----------0--
156     : ['leader(proposer0)', '~start(proposer0)']
157     : -------------1-----------0-
157     : ['leader(proposer1)', '~start(proposer1)']
158     : --------------1-----------0
158     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 18
num_suborbits: 1
159 (*) : 0-----1--------1-----------
159     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
160     : -0-----1--------1----------
160     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
161     : --0-----1--------1---------
161     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
162     : ---0--1--------1-----------
162     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
163     : ----0--1--------1----------
163     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
164     : -----0--1--------1---------
164     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
165     : 0--1--------------1--------
165     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
166     : -0--1--------------1-------
166     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
167     : --0--1--------------1------
167     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
168     : ---1--0-----------1--------
168     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
169     : ----1--0-----------1-------
169     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
170     : -----1--0-----------1------
170     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
171     : 1--0-----------------1-----
171     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
172     : -1--0-----------------1----
172     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
173     : --1--0-----------------1---
173     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
174     : 1-----0--------------1-----
174     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
175     : -1-----0--------------1----
175     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
176     : --1-----0--------------1---
176     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 9
num_suborbits: 1
177 (*) : 0--1--1--------------------
177     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
178     : -0--1--1-------------------
178     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
179     : --0--1--1------------------
179     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
180     : 1--0--1--------------------
180     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
181     : -1--0--1-------------------
181     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
182     : --1--0--1------------------
182     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
183     : 1--1--0--------------------
183     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
184     : -1--1--0-------------------
184     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
185     : --1--1--0------------------
185     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : ------0--1--1--------------
186     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
187     : -------0-1---1-------------
187     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
188     : --------01----1------------
188     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
189     : ---0------1-1--------------
189     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
190     : ----0-----1--1-------------
190     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
191     : -----0----1---1------------
191     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
192     : 0----------11--------------
192     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
193     : -0---------1-1-------------
193     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
194     : --0--------1--1------------
194     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 36
num_suborbits: 1
195 (*) : ---------1--1----------1---
195     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
196     : ---------1--1---------1----
196     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
197     : ---------1---1---------1---
197     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
198     : ---------1---1-------1-----
198     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
199     : ---------1----1-------1----
199     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
200     : ---------1----1------1-----
200     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
201     : ---------1--1-------1------
201     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
202     : ---------1--1------1-------
202     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
203     : ---------1---1------1------
203     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
204     : ---------1---1----1--------
204     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
205     : ---------1----1----1-------
205     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
206     : ---------1----1---1--------
206     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
207     : ----------1-1----------1---
207     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
208     : ----------1-1---------1----
208     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
209     : ----------1--1---------1---
209     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
210     : ----------1--1-------1-----
210     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
211     : ----------1---1-------1----
211     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
212     : ----------1---1------1-----
212     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
213     : ----------1-1----1---------
213     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
214     : ----------1-1---1----------
214     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
215     : ----------1--1---1---------
215     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
216     : ----------1--1-1-----------
216     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
217     : ----------1---1-1----------
217     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
218     : ----------1---11-----------
218     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
219     : -----------11-------1------
219     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
220     : -----------11------1-------
220     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
221     : -----------1-1------1------
221     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
222     : -----------1-1----1--------
222     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
223     : -----------1--1----1-------
223     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
224     : -----------1--1---1--------
224     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
225     : -----------11----1---------
225     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
226     : -----------11---1----------
226     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
227     : -----------1-1---1---------
227     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
228     : -----------1-1-1-----------
228     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
229     : -----------1--1-1----------
229     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
230     : -----------1--11-----------
230     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 18
num_suborbits: 1
231 (*) : ---------1--1-----0--------
231     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
232     : ---------1---1-----0-------
232     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
233     : ---------1----1-----0------
233     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
234     : ---------1--1--------0-----
234     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
235     : ---------1---1--------0----
235     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
236     : ---------1----1--------0---
236     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
237     : ----------1-1--0-----------
237     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
238     : ----------1--1--0----------
238     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
239     : ----------1---1--0---------
239     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
240     : ----------1-1--------0-----
240     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
241     : ----------1--1--------0----
241     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
242     : ----------1---1--------0---
242     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
243     : -----------11--0-----------
243     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
244     : -----------1-1--0----------
244     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
245     : -----------1--1--0---------
245     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
246     : -----------11-----0--------
246     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
247     : -----------1-1-----0-------
247     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
248     : -----------1--1-----0------
248     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
249 (*) : ---------1-11--------------
249     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
250     : ---------1-1-1-------------
250     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
251     : ---------1-1--1------------
251     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
252     : ---------11-1--------------
252     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
253     : ---------11--1-------------
253     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
254     : ---------11---1------------
254     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
255     : ----------111--------------
255     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
256     : ----------11-1-------------
256     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
257     : ----------11--1------------
257     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
258 (*) : --------0-----------1--1---
258     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
259     : -------0-----------1--1----
259     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
260     : ------0-----------1--1-----
260     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
261     : -----0-----------1-----1---
261     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
262     : ----0-----------1-----1----
262     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
263     : ---0-----------1-----1-----
263     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
264     : --0--------------1--1------
264     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
265     : -0--------------1--1-------
265     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
266     : 0--------------1--1--------
266     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 18
num_suborbits: 1
267 (*) : 0-----------1---------1----
267     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
268     : 0-----------1----------1---
268     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
269     : -0-----------1-------1-----
269     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
270     : -0-----------1---------1---
270     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
271     : --0-----------1------1-----
271     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
272     : --0-----------1-------1----
272     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
273     : ---0--------1------1-------
273     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
274     : ---0--------1-------1------
274     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
275     : ----0--------1----1--------
275     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
276     : ----0--------1------1------
276     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
277     : -----0--------1---1--------
277     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
278     : -----0--------1----1-------
278     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
279     : ------0-----1---1----------
279     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
280     : ------0-----1----1---------
280     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
281     : -------0-----1-1-----------
281     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
282     : -------0-----1---1---------
282     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
283     : --------0-----11-----------
283     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
284     : --------0-----1-1----------
284     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 36
num_suborbits: 1
285 (*) : ------------1-----0---1----
285     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
286     : ------------1-----0----1---
286     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
287     : -------------1-----0-1-----
287     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
288     : -------------1-----0---1---
288     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
289     : --------------1-----01-----
289     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
290     : --------------1-----0-1----
290     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
291     : ------------1------1-0-----
291     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
292     : ------------1-------10-----
292     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
293     : -------------1----1---0----
293     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
294     : -------------1------1-0----
294     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
295     : --------------1---1----0---
295     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
296     : --------------1----1---0---
296     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
297     : ------------1--0------1----
297     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
298     : ------------1--0-------1---
298     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
299     : -------------1--0----1-----
299     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
300     : -------------1--0------1---
300     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
301     : --------------1--0---1-----
301     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
302     : --------------1--0----1----
302     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
303     : ------------1---1----0-----
303     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
304     : ------------1----1---0-----
304     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
305     : -------------1-1------0----
305     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
306     : -------------1---1----0----
306     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
307     : --------------11-------0---
307     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
308     : --------------1-1------0---
308     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
309     : ------------1--0---1-------
309     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
310     : ------------1--0----1------
310     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
311     : -------------1--0-1--------
311     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
312     : -------------1--0---1------
312     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
313     : --------------1--01--------
313     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
314     : --------------1--0-1-------
314     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
315     : ------------1---1-0--------
315     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
316     : ------------1----10--------
316     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
317     : -------------1-1---0-------
317     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
318     : -------------1---1-0-------
318     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
319     : --------------11----0------
319     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
320     : --------------1-1---0------
320     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 36
num_suborbits: 2
321 (*) : ------------1---1-----1----
321     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
322     : ------------1----1-----1---
322     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
323     : -------------1-1-----1-----
323     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
324     : -------------1---1-----1---
324     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
325     : --------------11-----1-----
325     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
326     : --------------1-1-----1----
326     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
327     : ------------1---1--1-------
327     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
328     : ------------1----1--1------
328     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
329     : -------------1-1--1--------
329     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
330     : -------------1---1--1------
330     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
331     : --------------11--1--------
331     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
332     : --------------1-1--1-------
332     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
333     : ------------1------1--1----
333     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
334     : ------------1-------1--1---
334     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
335     : -------------1----1--1-----
335     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
336     : -------------1------1--1---
336     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
337     : --------------1---1--1-----
337     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
338     : --------------1----1--1----
338     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
357 (*) : ------------1------1---1---
357     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
358     : ------------1-------1-1----
358     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
359     : -------------1----1----1---
359     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
360     : -------------1------11-----
360     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
361     : --------------1---1---1----
361     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
362     : --------------1----1-1-----
362     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
363     : ------------1---1------1---
363     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
364     : ------------1----1----1----
364     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
365     : -------------1-1-------1---
365     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
366     : -------------1---1---1-----
366     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
367     : --------------11------1----
367     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
368     : --------------1-1----1-----
368     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
369     : ------------1---1---1------
369     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
370     : ------------1----1-1-------
370     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
371     : -------------1-1----1------
371     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
372     : -------------1---11--------
372     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
373     : --------------11---1-------
373     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
374     : --------------1-1-1--------
374     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
339 (*) : 0-----------1--------0-----
339     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
340     : -0-----------1--------0----
340     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
341     : --0-----------1--------0---
341     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
342     : ---0--------1-----0--------
342     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
343     : ----0--------1-----0-------
343     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
344     : -----0--------1-----0------
344     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
345     : ------0-----1--0-----------
345     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
346     : -------0-----1--0----------
346     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
347     : --------0-----1--0---------
347     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
348 (*) : ------------1--0-----0-----
348     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
349     : -------------1--0-----0----
349     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
350     : --------------1--0-----0---
350     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
351     : ------------1--0--0--------
351     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
352     : -------------1--0--0-------
352     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
353     : --------------1--0--0------
353     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
354     : ------------1-----0--0-----
354     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
355     : -------------1-----0--0----
355     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
356     : --------------1-----0--0---
356     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 3
num_suborbits: 1
375 (*) : ----------0-------000------
375     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
376     : -----------0---------000---
376     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
377     : ---------0-----000---------
377     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
378 (*) : -0--0--------1--1----------
378     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
379     : --0--0--------1--1---------
379     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
380     : 0--0--------1--1-----------
380     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
381     : -0-----0-----1-----1-------
381     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
382     : --0-----0-----1-----1------
382     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
383     : 0-----0-----1-----1--------
383     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
384     : ----0--0-----1--------1----
384     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
385     : -----0--0-----1--------1---
385     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
386     : ---0--0-----1--------1-----
386     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
387 (*) : -0--0--0-----1-------------
387     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
388     : --0--0--0-----1------------
388     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
389     : 0--0--0-----1--------------
389     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
390 (*) : ----------0-------00------0
390     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
391     : ----------0-------0-0----0-
391     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
392     : ----------0--------00---0--
392     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
393     : -----------0---------00---0
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
394     : -----------0---------0-0-0-
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
395     : -----------0----------000--
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
396     : ---------0-----00---------0
396     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
397     : ---------0-----0-0-------0-
397     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
398     : ---------0------00------0--
398     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : ----------0--------0----0-0
399     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
400     : ----------0---------0---00-
400     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
401     : ----------0-------0------00
401     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
402     : -----------0----------0-0-0
402     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
403     : -----------0-----------000-
403     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
404     : -----------0---------0---00
404     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
405     : ---------0------0-------0-0
405     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
406     : ---------0-------0------00-
406     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
407     : ---------0-----0---------00
407     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : -----------0------------000
408     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : ---------0--------------000
410     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : ------0---0--------0-1----0
411     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
412     : ------0---0---------01---0-
412     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
413     : -------0--0-------0---1---0
413     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
414     : -------0--0---------0-1-0--
414     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
415     : --------0-0-------0----1-0-
415     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
416     : --------0-0--------0---10--
416     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
417     : ------0----0------1---0---0
417     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
418     : ------0----0------1----0-0-
418     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
419     : -------0---0-------1-0----0
419     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
420     : -------0---0-------1---00--
420     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
421     : --------0--0--------10---0-
421     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
422     : --------0--0--------1-0-0--
422     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
423     : ---0-----0------0----1----0
423     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
424     : ---0-----0-------0---1---0-
424     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
425     : ----0----0-----0------1---0
425     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
426     : ----0----0-------0----1-0--
426     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
427     : -----0---0-----0-------1-0-
427     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
428     : -----0---0------0------10--
428     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
429     : ---0-------0---1------0---0
429     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
430     : ---0-------0---1-------0-0-
430     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
431     : ----0------0----1----0----0
431     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
432     : ----0------0----1------00--
432     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
433     : -----0-----0-----1---0---0-
433     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
434     : -----0-----0-----1----0-0--
434     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
435     : 0--------0------0-1-------0
435     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
436     : 0--------0-------01------0-
436     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
437     : -0-------0-----0---1------0
437     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
438     : -0-------0-------0-1----0--
438     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
439     : --0------0-----0----1----0-
439     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
440     : --0------0------0---1---0--
440     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
441     : 0---------0----1---0------0
441     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
442     : 0---------0----1----0----0-
442     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
443     : -0--------0-----1-0-------0
443     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
444     : -0--------0-----1---0---0--
444     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
445     : --0-------0------10------0-
445     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
446     : --0-------0------1-0----0--
446     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : ---0-----0------00---1-----
447     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
448     : ----0----0-----0-0----1----
448     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
449     : -----0---0-----00------1---
449     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
450     : 0--------0------001--------
450     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
451     : -0-------0-----0-0-1-------
451     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
452     : --0------0-----00---1------
452     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
453     : ------0---0--------001-----
453     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
454     : -------0--0-------0-0-1----
454     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
455     : --------0-0-------00---1---
455     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
456     : 0---------0----1---00------
456     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
457     : -0--------0-----1-0-0------
457     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
458     : --0-------0------100-------
458     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
459     : ------0----0------1---00---
459     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
460     : -------0---0-------1-0-0---
460     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
461     : --------0--0--------100----
461     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
462     : ---0-------0---1------00---
462     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
463     : ----0------0----1----0-0---
463     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
464     : -----0-----0-----1---00----
464     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : ---0-----0-----------1---00
465     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
466     : ----0----0------------1-0-0
466     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
467     : -----0---0-------------100-
467     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
468     : 0--------0--------1------00
468     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
469     : -0-------0---------1----0-0
469     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
470     : --0------0----------1---00-
470     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
471     : ------0---0----------1---00
471     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
472     : -------0--0-----------1-0-0
472     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
473     : --------0-0------------100-
473     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
474     : 0---------0----1---------00
474     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
475     : -0--------0-----1-------0-0
475     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
476     : --0-------0------1------00-
476     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
477     : ------0----0------1------00
477     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
478     : -------0---0-------1----0-0
478     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
479     : --------0--0--------1---00-
479     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
480     : ---0-------0---1---------00
480     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
481     : ----0------0----1-------0-0
481     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
482     : -----0-----0-----1------00-
482     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 18
num_suborbits: 1
483 (*) : ---0--1--0------00---------
483     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
484     : ----0--1-0-----0-0---------
484     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
485     : -----0--10-----00----------
485     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
486     : 0-----1--0------00---------
486     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
487     : -0-----1-0-----0-0---------
487     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
488     : --0-----10-----00----------
488     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
489     : ---1--0---0--------00------
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
490     : ----1--0--0-------0-0------
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
491     : -----1--0-0-------00-------
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
492     : 0--1------0--------00------
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
493     : -0--1-----0-------0-0------
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
494     : --0--1----0-------00-------
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
495     : 1-----0----0----------00---
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
496     : -1-----0---0---------0-0---
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
497     : --1-----0--0---------00----
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
498     : 1--0-------0----------00---
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
499     : -1--0------0---------0-0---
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
500     : --1--0-----0---------00----
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 36
num_suborbits: 1
501 (*) : 1--0-------0----------0---0
501     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
502     : 1--0-------0-----------0-0-
502     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
503     : -1--0------0---------0----0
503     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
504     : -1--0------0-----------00--
504     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
505     : --1--0-----0---------0---0-
505     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
506     : --1--0-----0----------0-0--
506     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
507     : 0--1------0--------0------0
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
508     : 0--1------0---------0----0-
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
509     : -0--1-----0-------0-------0
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
510     : -0--1-----0---------0---0--
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
511     : --0--1----0-------0------0-
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
512     : --0--1----0--------0----0--
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
513     : 1-----0----0----------0---0
513     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
514     : 1-----0----0-----------0-0-
514     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
515     : -1-----0---0---------0----0
515     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
516     : -1-----0---0-----------00--
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
517     : --1-----0--0---------0---0-
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
518     : --1-----0--0----------0-0--
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
519     : 0-----1--0------0---------0
519     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
520     : 0-----1--0-------0-------0-
520     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
521     : -0-----1-0-----0----------0
521     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
522     : -0-----1-0-------0------0--
522     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
523     : --0-----10-----0---------0-
523     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
524     : --0-----10------0-------0--
524     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
525     : ---1--0---0--------0------0
525     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
526     : ---1--0---0---------0----0-
526     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
527     : ----1--0--0-------0-------0
527     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
528     : ----1--0--0---------0---0--
528     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
529     : -----1--0-0-------0------0-
529     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
530     : -----1--0-0--------0----0--
530     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
531     : ---0--1--0------0---------0
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
532     : ---0--1--0-------0-------0-
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
533     : ----0--1-0-----0----------0
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
534     : ----0--1-0-------0------0--
534     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
535     : -----0--10-----0---------0-
535     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
536     : -----0--10------0-------0--
536     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 9
num_suborbits: 1
537 (*) : ---0-----0-0-------------00
537     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
538     : ----0----0-0------------0-0
538     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
539     : -----0---0-0------------00-
539     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
540     : 0--------00--------------00
540     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
541     : -0-------00-------------0-0
541     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
542     : --0------00-------------00-
542     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
543     : ------0---00-------------00
543     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
544     : -------0--00------------0-0
544     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
545     : --------0-00------------00-
545     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
546 (*) : ---0--1--0---------------00
546     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
547     : ----0--1-0--------------0-0
547     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
548     : -----0--10--------------00-
548     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
549     : 0-----1--0---------------00
549     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
550     : -0-----1-0--------------0-0
550     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
551     : --0-----10--------------00-
551     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
552     : ---1--0---0--------------00
552     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
553     : ----1--0--0-------------0-0
553     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
554     : -----1--0-0-------------00-
554     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
555     : 0--1------0--------------00
555     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
556     : -0--1-----0-------------0-0
556     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
557     : --0--1----0-------------00-
557     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
558     : 1-----0----0-------------00
558     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
559     : -1-----0---0------------0-0
559     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
560     : --1-----0--0------------00-
560     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
561     : 1--0-------0-------------00
561     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
562     : -1--0------0------------0-0
562     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
563     : --1--0-----0------------00-
563     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : -----0---0-0----0-----0-0--
564     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
565     : ----0----0-0-----0-----00--
565     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
566     : -----0---0-0---0-----0---0-
566     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
567     : ---0-----0-0-----0-----0-0-
567     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
568     : ----0----0-0---0-----0----0
568     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
569     : ---0-----0-0----0-----0---0
569     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
570     : --0------00-----0--0----0--
570     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
571     : -0-------00------0--0---0--
571     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
572     : --0------00----0--0------0-
572     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
573     : 0--------00------0--0----0-
573     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
574     : -0-------00----0--0-------0
574     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
575     : 0--------00-----0--0------0
575     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
576     : --------0-00-------0--0-0--
576     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
577     : -------0--00--------0--00--
577     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
578     : --------0-00------0--0---0-
578     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
579     : ------0---00--------0--0-0-
579     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
580     : -------0--00------0--0----0
580     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
581     : ------0---00-------0--0---0
581     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 9
num_suborbits: 1
582 (*) : -----0--0--0--1---------00-
582     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
583     : ----0--0---0-1----------0-0
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
584     : ---0--0----01------------00
584     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
585     : --0-----0-0---1---------00-
585     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
586     : -0-----0--0--1----------0-0
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
587     : 0-----0---0-1------------00
587     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
588     : --0--0---0----1---------00-
588     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
589     : -0--0----0---1----------0-0
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
590     : 0--0-----0--1------------00
590     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
591 (*) : -----0--0--0--1------0---0-
591     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
592     : ----0--0---0-1-------0----0
592     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
593     : -----0--0--0--1-------0-0--
593     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
594     : ---0--0----01---------0---0
594     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
595     : ----0--0---0-1---------00--
595     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
596     : ---0--0----01----------0-0-
596     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
597     : --0-----0-0---1---0------0-
597     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
598     : -0-----0--0--1----0-------0
598     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
599     : --0-----0-0---1----0----0--
599     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
600     : 0-----0---0-1------0------0
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
601     : -0-----0--0--1------0---0--
601     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
602     : 0-----0---0-1-------0----0-
602     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
603     : --0--0---0----10---------0-
603     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
604     : -0--0----0---1-0----------0
604     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
605     : --0--0---0----1-0-------0--
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
606     : 0--0-----0--1---0---------0
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
607     : -0--0----0---1---0------0--
607     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
608     : 0--0-----0--1----0-------0-
608     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
609 (*) : -----0--0--0--1------00----
609     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
610     : ----0--0---0-1-------0-0---
610     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
611     : ---0--0----01---------00---
611     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
612     : --0-----0-0---1---00-------
612     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
613     : -0-----0--0--1----0-0------
613     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
614     : 0-----0---0-1------00------
614     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
615     : --0--0---0----100----------
615     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
616     : -0--0----0---1-0-0---------
616     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
617     : 0--0-----0--1---00---------
617     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
618 (*) : --0-0----0----------1-1-0--
618     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
619     : -0---0---0---------1---10--
619     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
620     : --00-----0----------11---0-
620     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
621     : 0----0---0--------1----1-0-
621     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
622     : -0-0-----0---------1-1----0
622     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
623     : 0---0----0--------1---1---0
623     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
624     : --0----0--0------1----1-0--
624     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
625     : -0------0-0-----1------10--
625     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
626     : --0---0---0------1---1---0-
626     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
627     : 0-------0-0----1-------1-0-
627     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
628     : -0----0---0-----1----1----0
628     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
629     : 0------0--0----1------1---0
629     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
630     : -----0-0---0-----1-1----0--
630     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
631     : ----0---0--0----1---1---0--
631     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
632     : -----00----0-----11------0-
632     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
633     : ---0----0--0---1----1----0-
633     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
634     : ----0-0----0----1-1-------0
634     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
635     : ---0---0---0---1---1------0
635     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : --0----0--0------10---1----
636     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
637     : -0------0-0-----1-0----1---
637     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
638     : --0---0---0------1-0-1-----
638     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
639     : 0-------0-0----1---0---1---
639     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
640     : -0----0---0-----1---01-----
640     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
641     : 0------0--0----1----0-1----
641     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
642     : -----0-0---0-----1-1-0-----
642     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
643     : ----0---0--0----1---10-----
643     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
644     : -----00----0-----11---0----
644     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
645     : ---0----0--0---1----1-0----
645     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
646     : ----0-0----0----1-1----0---
646     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
647     : ---0---0---0---1---1---0---
647     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
648     : --0-0----0-----0----1-1----
648     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
649     : -0---0---0-----0---1---1---
649     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
650     : --00-----0------0---11-----
650     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
651     : 0----0---0------0-1----1---
651     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
652     : -0-0-----0-------0-1-1-----
652     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
653     : 0---0----0-------01---1----
653     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : -0---0--000------------10--
654     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
655     : --0-0--0-00-----------1-0--
655     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
656     : 0----0--000------------1-0-
656     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
657     : --00--0--00----------1---0-
657     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
658     : 0---0--0-00-----------1---0
658     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
659     : -0-0--0--00----------1----0
659     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
660     : --0-0---00-0--------1---0--
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
661     : -0---0-0-0-0-------1----0--
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
662     : --00----00-0--------1----0-
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
663     : 0----00--0-0------1------0-
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
664     : -0-0---0-0-0-------1------0
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
665     : 0---0-0--0-0------1-------0
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
666     : --0--0-0--00-----1------0--
666     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
667     : -0--0---0-00----1-------0--
667     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
668     : --0--00---00-----1-------0-
668     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
669     : 0--0----0-00---1---------0-
669     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
670     : -0--0-0---00----1---------0
670     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
671     : 0--0---0--00---1----------0
671     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : -0------000------0-----10--
672     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
673     : --0----0-00-----0-----1-0--
673     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
674     : 0-------000------0-----1-0-
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
675     : --0---0--00----0-----1---0-
675     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
676     : 0------0-00-----0-----1---0
676     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
677     : -0----0--00----0-----1----0
677     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
678     : ----0---00-0-----0--1---0--
678     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
679     : -----0-0-0-0----0--1----0--
679     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
680     : ---0----00-0-----0--1----0-
680     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
681     : -----00--0-0---0--1------0-
681     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
682     : ---0---0-0-0----0--1------0
682     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
683     : ----0-0--0-0---0--1-------0
683     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
684     : -0---0---00---------0--10--
684     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
685     : --0-0----00--------0--1-0--
685     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
686     : 0----0---00---------0--1-0-
686     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
687     : --00-----00-------0--1---0-
687     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
688     : 0---0----00--------0--1---0
688     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
689     : -0-0-----00-------0--1----0
689     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
690     : -----0-0--00-----1--0---0--
690     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
691     : ----0---0-00----1--0----0--
691     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
692     : -----00---00-----1--0----0-
692     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
693     : ---0----0-00---1--0------0-
693     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
694     : ----0-0---00----1--0------0
694     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
695     : ---0---0--00---1--0-------0
695     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
696     : --0-0----0-0--------1--00--
696     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
697     : -0---0---0-0-------1--0-0--
697     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
698     : --00-----0-0--------1--0-0-
698     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
699     : 0----0---0-0------1--0---0-
699     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
700     : -0-0-----0-0-------1--0---0
700     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
701     : 0---0----0-0------1--0----0
701     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
702     : --0----0--00-----1-----00--
702     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
703     : -0------0-00----1-----0-0--
703     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
704     : --0---0---00-----1-----0-0-
704     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
705     : 0-------0-00---1-----0---0-
705     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
706     : -0----0---00----1-----0---0
706     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
707     : 0------0--00---1-----0----0
707     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 9
num_suborbits: 1
708 (*) : -0-------00----0-00-0------
708     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
709     : --0------00----00-00-------
709     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
710     : 0--------00-----00-00------
710     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
711     : ----0----0-0---0-0---0-0---
711     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
712     : -----0---0-0---00----00----
712     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
713     : ---0-----0-0----00----00---
713     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
714     : -------0--00------0-00-0---
714     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
715     : --------0-00------00-00----
715     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
716     : ------0---00-------00-00---
716     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 18
num_suborbits: 1
717 (*) : --0--00---00-----1-0--0----
717     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
718     : -0--0-0---00----1---0--0---
718     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
719     : --0--0-0--00-----10--0-----
719     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
720     : 0--0---0--00---1----0--0---
720     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
721     : -0--0---0-00----1-0--0-----
721     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
722     : 0--0----0-00---1---0--0----
722     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
723     : --00----00-0----0---1-0----
723     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
724     : -0-0---0-0-0-----0-1---0---
724     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
725     : --0-0---00-0---0----10-----
725     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
726     : 0---0-0--0-0-----01----0---
726     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
727     : -0---0-0-0-0---0---1-0-----
727     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
728     : 0----00--0-0----0-1---0----
728     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
729     : 0----0--000-----0--0---1---
729     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
730     : 0---0--0-00------0--0-1----
730     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
731     : -0---0--000----0--0----1---
731     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
732     : -0-0--0--00------0--01-----
732     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
733     : --0-0--0-00----0--0---1----
733     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
734     : --00--0--00-----0--0-1-----
734     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 36
num_suborbits: 1
735 (*) : --0---0---00-----1-0--00---
735     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
736     : -0----0---00----1---0-00---
736     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
737     : --0----0--00-----10--0-0---
737     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
738     : 0------0--00---1----00-0---
738     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
739     : -0------0-00----1-0--00----
739     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
740     : 0-------0-00---1---0-00----
740     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
741     : -----00---00-----1-00-0----
741     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
742     : ----0-0---00----1--00--0---
742     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
743     : -----0-0--00-----10-00-----
743     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
744     : ---0---0--00---1--0-0--0---
744     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
745     : ----0---0-00----1-00-0-----
745     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
746     : ---0----0-00---1--00--0----
746     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
747     : --00-----0-0----0---1-00---
747     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
748     : -0-0-----0-0-----0-1--00---
748     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
749     : --0-0----0-0---0----10-0---
749     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
750     : 0---0----0-0-----01--0-0---
750     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
751     : -0---0---0-0---0---1-00----
751     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
752     : 0----0---0-0----0-1--00----
752     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
753     : ---0----00-0----00--1-0----
753     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
754     : ---0---0-0-0----00-1---0---
754     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
755     : ----0---00-0---0-0--10-----
755     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
756     : ----0-0--0-0---0-01----0---
756     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
757     : -----0-0-0-0---00--1-0-----
757     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
758     : -----00--0-0---00-1---0----
758     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
759     : 0----0---00-----0--00--1---
759     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
760     : 0---0----00------0-00-1----
760     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
761     : -0---0---00----0--0-0--1---
761     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
762     : -0-0-----00------00-01-----
762     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
763     : --0-0----00----0--00--1----
763     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
764     : --00-----00-----0-00-1-----
764     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
765     : 0-------000-----00-0---1---
765     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
766     : 0------0-00-----00--0-1----
766     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
767     : -0------000----0-00----1---
767     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
768     : -0----0--00----0-0--01-----
768     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
769     : --0----0-00----00-0---1----
769     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
770     : --0---0--00----00--0-1-----
770     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : --0-0--0-000-----------00--
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
772     : -0---0--0000----------0-0--
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
773     : --00--0--000-----------0-0-
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
774     : 0----0--0000---------0---0-
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
775     : -0-0--0--000----------0---0
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
776     : 0---0--0-000---------0----0
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
777     : -0---0-0-000--------0---0--
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
778     : --0-0---0000-------0----0--
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
779     : 0----00--000--------0----0-
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
780     : --00----0000------0------0-
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
781     : 0---0-0--000-------0------0
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
782     : -0-0---0-000------0-------0
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
783     : -0--0---0000-----0------0--
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
784     : --0--0-0-000----0-------0--
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
785     : 0--0----0000-----0-------0-
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
786     : --0--00--000---0---------0-
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
787     : 0--0---0-000----0---------0
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
788     : -0--0-0--000---0----------0
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : --0----0-000----0------00--
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
790     : -0------0000-----0----0-0--
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
791     : --0---0--000---0-------0-0-
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
792     : 0-------0000-----0---0---0-
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
793     : -0----0--000---0------0---0
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
794     : 0------0-000----0----0----0
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
795     : -----0-0-000----0---0---0--
795     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
796     : ----0---0000-----0-0----0--
796     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
797     : -----00--000---0----0----0-
797     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
798     : ---0----0000-----00------0-
798     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
799     : ----0-0--000---0---0------0
799     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
800     : ---0---0-000----0-0-------0
800     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
801     : --0-0----000-------0---00--
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
802     : -0---0---000--------0-0-0--
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
803     : --00-----000------0----0-0-
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
804     : 0----0---000--------00---0-
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
805     : -0-0-----000------0---0---0
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
806     : 0---0----000-------0-0----0
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 18
num_suborbits: 1
807 (*) : -0----0--000---0-0--0-00---
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
808     : --0---0--000---00--0--00---
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
809     : 0------0-000----00--00-0---
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
810     : --0----0-000---00-0--0-0---
810     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
811     : 0-------0000----00-0-00----
811     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
812     : -0------0000---0-00--00----
812     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
813     : ----0-0--000---0-0-00--0---
813     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
814     : -----00--000---00--00-0----
814     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
815     : ---0---0-000----000-0--0---
815     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
816     : -----0-0-000---00-0-00-----
816     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
817     : ---0----0000----0000--0----
817     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
818     : ----0---0000---0-000-0-----
818     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
819     : -0-0-----000-----00-0-00---
819     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
820     : --00-----000----0-00--00---
820     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
821     : 0---0----000-----0-000-0---
821     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
822     : --0-0----000---0--00-0-0---
822     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
823     : 0----0---000----0--0000----
823     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
824     : -0---0---000---0--0-000----
824     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
825 (*) : -0-0--0--000-----0--0-00---
825     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
826     : --00--0--000----0--0--00---
826     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
827     : 0---0--0-000-----0--00-0---
827     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
828     : --0-0--0-000---0--0--0-0---
828     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
829     : 0----0--0000----0--0-00----
829     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
830     : -0---0--0000---0--0--00----
830     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
831     : 0---0-0--000-----0-00--0---
831     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
832     : 0----00--000----0--00-0----
832     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
833     : -0-0---0-000-----00-0--0---
833     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
834     : -0---0-0-000---0--0-00-----
834     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
835     : --00----0000----0-00--0----
835     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
836     : --0-0---0000---0--00-0-----
836     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
837     : 0--0---0-000----00--0--0---
837     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
838     : 0--0----0000----00-0--0----
838     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
839     : -0--0-0--000---0-0--0--0---
839     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
840     : -0--0---0000---0-00--0-----
840     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
841     : --0--00--000---00--0--0----
841     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
842     : --0--0-0-000---00-0--0-----
842     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
843 (*) : 0-00-00-0000-------------0-
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
844     : 00-00-00-000--------------0
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
845     : -00-00-00000------------0--
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 3
num_suborbits: 1
846 (*) : 0-00-00-0000----0--0--0----
846     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
847     : 00-00-00-000-----0--0--0---
847     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
848     : -00-00-00000---0--0--0-----
848     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 53

[PRIME NOTE]: number of orbits before merging: 55

[PRIME NOTE]: number of primes: 849

[QRM NOTE]: Time elapsed since start: 0.427 seconds

[QRM NOTE]: Time elapsed since last: 0.387 seconds

[QRM NOTE]: Peak memory: 2306180 bytes


=========================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

definition primes: {0, 1, 32, 5, 41, 11, 12, 44, 45, 46, 17, 49, 50, 52, 23, 30}


New level: 0
 pending : [2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : []


Before reduction : 
 pending  : [2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : []

Essensial at level 0 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, 0), (7, 0), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 0 : {6, 7}

After reduction : 
 pending  : [2, 3, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4]


Before reduction : 
 pending  : [2, 3, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, 0), (7, 0), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [2, 3, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4]

[QRM NOTE]: Time elapsed since start: 0.527 seconds

[QRM NOTE]: Time elapsed since last: 0.100 seconds

[QRM NOTE]: Peak memory: 1092419 bytes


=============================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=============================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 4 =====================
size : 9
num_suborbits: 1
45 (*) : -------------------11------
45     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
46     : ------------------1-1------
46     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
47     : ------------------11-------
47     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
48     : ----------------------11---
48     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
49     : ---------------------1-1---
49     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
50     : ---------------------11----
50     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
51     : ----------------11---------
51     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
52     : ---------------1-1---------
52     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
53     : ---------------11----------
53     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']

sign_func_name2args: {'0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1


---------- Quantifier Inference: orbit 4 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 2 =====================
size : 9
num_suborbits: 1
27 (*) : ---------------1--------0--
27     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
28     : ----------------1--------0-
28     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
29     : -----------------1--------0
29     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
30     : ------------------1-----0--
30     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
31     : -------------------1-----0-
31     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
32     : --------------------1-----0
32     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
33     : ---------------------1--0--
33     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
34     : ----------------------1--0-
34     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
35     : -----------------------1--0
35     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor0,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor0,proposer0)', '~start(proposer0)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)


---------- Quantifier Inference: orbit 2 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 3 =====================
size : 9
num_suborbits: 1
36 (*) : 1-----------------------0--
36     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
37     : -1-----------------------0-
37     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
38     : --1-----------------------0
38     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
39     : ---1--------------------0--
39     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
40     : ----1--------------------0-
40     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
41     : -----1--------------------0
41     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
42     : ------1-----------------0--
42     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
43     : -------1-----------------0-
43     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
44     : --------1-----------------0
44     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)


---------- Quantifier Inference: orbit 3 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 8 =====================
size : 18
num_suborbits: 1
135 (*) : ----1-------1--------------
135     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
136     : -----1------1--------------
136     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
137     : ---1---------1-------------
137     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
138     : -----1-------1-------------
138     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
139     : ---1----------1------------
139     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
140     : ----1---------1------------
140     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
141     : -1----------1--------------
141     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
142     : --1---------1--------------
142     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
143     : 1------------1-------------
143     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
144     : --1----------1-------------
144     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
145     : 1-------------1------------
145     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
146     : -1------------1------------
146     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
147     : -------1----1--------------
147     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
148     : --------1---1--------------
148     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
149     : ------1------1-------------
149     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
150     : --------1----1-------------
150     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
151     : ------1-------1------------
151     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
152     : -------1------1------------
152     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


---------- Quantifier Inference: orbit 8 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 9 =====================
size : 3
num_suborbits: 1
153 (*) : ------------11-------------
153     : ['leader(proposer0)', 'leader(proposer1)']
154     : ------------1-1------------
154     : ['leader(proposer0)', 'leader(proposer2)']
155     : -------------11------------
155     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'leader(proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'leader(proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


---------- Quantifier Inference: orbit 9 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : ------------1-----------0--
156     : ['leader(proposer0)', '~start(proposer0)']
157     : -------------1-----------0-
157     : ['leader(proposer1)', '~start(proposer1)']
158     : --------------1-----------0
158     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~start(proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)


---------- Quantifier Inference: orbit 10 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : ------0--1--1--------------
186     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
187     : -------0-1---1-------------
187     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
188     : --------01----1------------
188     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
189     : ---0------1-1--------------
189     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
190     : ----0-----1--1-------------
190     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
191     : -----0----1---1------------
191     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
192     : 0----------11--------------
192     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
193     : -0---------1-1-------------
193     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
194     : --0--------1--1------------
194     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor0)', 'leader(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor0)', 'leader(proposer0)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~didNotPromise(ACCEPTOR0)


---------- Quantifier Inference: orbit 13 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 14 =====================
size : 36
num_suborbits: 1
195 (*) : ---------1--1----------1---
195     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
196     : ---------1--1---------1----
196     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
197     : ---------1---1---------1---
197     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
198     : ---------1---1-------1-----
198     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
199     : ---------1----1-------1----
199     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
200     : ---------1----1------1-----
200     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
201     : ---------1--1-------1------
201     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
202     : ---------1--1------1-------
202     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
203     : ---------1---1------1------
203     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
204     : ---------1---1----1--------
204     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
205     : ---------1----1----1-------
205     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
206     : ---------1----1---1--------
206     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
207     : ----------1-1----------1---
207     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
208     : ----------1-1---------1----
208     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
209     : ----------1--1---------1---
209     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
210     : ----------1--1-------1-----
210     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
211     : ----------1---1-------1----
211     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
212     : ----------1---1------1-----
212     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
213     : ----------1-1----1---------
213     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
214     : ----------1-1---1----------
214     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
215     : ----------1--1---1---------
215     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
216     : ----------1--1-1-----------
216     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
217     : ----------1---1-1----------
217     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
218     : ----------1---11-----------
218     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
219     : -----------11-------1------
219     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
220     : -----------11------1-------
220     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
221     : -----------1-1------1------
221     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
222     : -----------1-1----1--------
222     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
223     : -----------1--1----1-------
223     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
224     : -----------1--1---1--------
224     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
225     : -----------11----1---------
225     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
226     : -----------11---1----------
226     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
227     : -----------1-1---1---------
227     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
228     : -----------1-1-1-----------
228     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
229     : -----------1--1-1----------
229     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
230     : -----------1--11-----------
230     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)', 'promise(ACCEPTOR1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER1,ACCEPTOR1. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


---------- Quantifier Inference: orbit 14 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 15 =====================
size : 18
num_suborbits: 1
231 (*) : ---------1--1-----0--------
231     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
232     : ---------1---1-----0-------
232     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
233     : ---------1----1-----0------
233     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
234     : ---------1--1--------0-----
234     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
235     : ---------1---1--------0----
235     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
236     : ---------1----1--------0---
236     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
237     : ----------1-1--0-----------
237     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
238     : ----------1--1--0----------
238     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
239     : ----------1---1--0---------
239     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
240     : ----------1-1--------0-----
240     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
241     : ----------1--1--------0----
241     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
242     : ----------1---1--------0---
242     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
243     : -----------11--0-----------
243     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
244     : -----------1-1--0----------
244     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
245     : -----------1--1--0---------
245     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
246     : -----------11-----0--------
246     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
247     : -----------1-1-----0-------
247     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
248     : -----------1--1-----0------
248     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER0)', 'leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1


---------- Quantifier Inference: orbit 15 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
249 (*) : ---------1-11--------------
249     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
250     : ---------1-1-1-------------
250     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
251     : ---------1-1--1------------
251     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
252     : ---------11-1--------------
252     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
253     : ---------11--1-------------
253     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
254     : ---------11---1------------
254     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
255     : ----------111--------------
255     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
256     : ----------11-1-------------
256     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
257     : ----------11--1------------
257     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'didNotPromise(ACCEPTOR0)', 'didNotPromise(ACCEPTOR1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~didNotPromise(ACCEPTOR1) | ACCEPTOR0 = ACCEPTOR1


---------- Quantifier Inference: orbit 16 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 18 =====================
size : 18
num_suborbits: 1
267 (*) : 0-----------1---------1----
267     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
268     : 0-----------1----------1---
268     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
269     : -0-----------1-------1-----
269     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
270     : -0-----------1---------1---
270     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
271     : --0-----------1------1-----
271     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
272     : --0-----------1-------1----
272     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
273     : ---0--------1------1-------
273     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
274     : ---0--------1-------1------
274     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
275     : ----0--------1----1--------
275     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
276     : ----0--------1------1------
276     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
277     : -----0--------1---1--------
277     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
278     : -----0--------1----1-------
278     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
279     : ------0-----1---1----------
279     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
280     : ------0-----1----1---------
280     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
281     : -------0-----1-1-----------
281     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
282     : -------0-----1---1---------
282     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
283     : --------0-----11-----------
283     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
284     : --------0-----1-1----------
284     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1


---------- Quantifier Inference: orbit 18 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 19 =====================
size : 36
num_suborbits: 1
285 (*) : ------------1-----0---1----
285     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
286     : ------------1-----0----1---
286     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
287     : -------------1-----0-1-----
287     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
288     : -------------1-----0---1---
288     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
289     : --------------1-----01-----
289     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
290     : --------------1-----0-1----
290     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
291     : ------------1------1-0-----
291     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
292     : ------------1-------10-----
292     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
293     : -------------1----1---0----
293     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
294     : -------------1------1-0----
294     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
295     : --------------1---1----0---
295     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
296     : --------------1----1---0---
296     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
297     : ------------1--0------1----
297     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
298     : ------------1--0-------1---
298     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
299     : -------------1--0----1-----
299     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
300     : -------------1--0------1---
300     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
301     : --------------1--0---1-----
301     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
302     : --------------1--0----1----
302     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
303     : ------------1---1----0-----
303     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
304     : ------------1----1---0-----
304     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
305     : -------------1-1------0----
305     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
306     : -------------1---1----0----
306     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
307     : --------------11-------0---
307     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
308     : --------------1-1------0---
308     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
309     : ------------1--0---1-------
309     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
310     : ------------1--0----1------
310     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
311     : -------------1--0-1--------
311     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
312     : -------------1--0---1------
312     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
313     : --------------1--01--------
313     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
314     : --------------1--0-1-------
314     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
315     : ------------1---1-0--------
315     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
316     : ------------1----10--------
316     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
317     : -------------1-1---0-------
317     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
318     : -------------1---1-0-------
318     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
319     : --------------11----0------
319     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
320     : --------------1-1---0------
320     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER0)', 'leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER1,ACCEPTOR1. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


---------- Quantifier Inference: orbit 19 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 20 =====================
size : 36
num_suborbits: 2
321 (*) : ------------1---1-----1----
321     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
322     : ------------1----1-----1---
322     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
323     : -------------1-1-----1-----
323     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
324     : -------------1---1-----1---
324     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
325     : --------------11-----1-----
325     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
326     : --------------1-1-----1----
326     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
327     : ------------1---1--1-------
327     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
328     : ------------1----1--1------
328     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
329     : -------------1-1--1--------
329     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
330     : -------------1---1--1------
330     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
331     : --------------11--1--------
331     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
332     : --------------1-1--1-------
332     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
333     : ------------1------1--1----
333     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
334     : ------------1-------1--1---
334     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
335     : -------------1----1--1-----
335     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
336     : -------------1------1--1---
336     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
337     : --------------1---1--1-----
337     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
338     : --------------1----1--1----
338     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
357 (*) : ------------1------1---1---
357     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
358     : ------------1-------1-1----
358     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
359     : -------------1----1----1---
359     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
360     : -------------1------11-----
360     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
361     : --------------1---1---1----
361     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
362     : --------------1----1-1-----
362     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
363     : ------------1---1------1---
363     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
364     : ------------1----1----1----
364     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
365     : -------------1-1-------1---
365     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
366     : -------------1---1---1-----
366     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
367     : --------------11------1----
367     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
368     : --------------1-1----1-----
368     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
369     : ------------1---1---1------
369     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
370     : ------------1----1-1-------
370     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
371     : -------------1-1----1------
371     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
372     : -------------1---11--------
372     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
373     : --------------11---1-------
373     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
374     : --------------1-1-1--------
374     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR1,PROPOSER2)', 'leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER2:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0 | acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

class signature: acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR1:acceptor', 'ACCEPTOR0:acceptor']

eq_terms: ['ACCEPTOR0:acceptor ~= ACCEPTOR1']

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER2:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor ~= ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER2:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer']

eq_terms: []

class signature: proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER2:proposer']

eq_terms: []


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER2:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER0:proposer ~= PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1', 'PROPOSER1:proposer ~= PROPOSER2']


---------- QFormula: _get_partition_constraint ----------

partition: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')[]

sort partition signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1

class signature: acceptor$0$promise$0$0; acceptor$0$promise$0$1


---------- QFormula: _get_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor', 'ACCEPTOR1:acceptor']

eq_terms: ['ACCEPTOR0:acceptor = ACCEPTOR1']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['ACCEPTOR0:acceptor']

eq_terms: []

sort partition signature: proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1

class signature: proposer$0$leader$0$0


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER0:proposer']

eq_terms: []

class signature: proposer$0$promise$1$0; proposer$0$promise$1$1


---------- QFormula: _get_class_constraint ----------

qvars: ['PROPOSER1:proposer', 'PROPOSER2:proposer']

eq_terms: ['PROPOSER1:proposer = PROPOSER2']


---------- QFormula: _get_diff_class_constraint ----------

qvars: ['PROPOSER0:proposer', 'PROPOSER1:proposer']

eq_terms: ['PROPOSER0:proposer ~= PROPOSER1']

constraint: ['ACCEPTOR0:acceptor = ACCEPTOR1', 'PROPOSER1:proposer = PROPOSER2', 'PROPOSER0:proposer ~= PROPOSER1']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER2,ACCEPTOR1,PROPOSER1. ~promise(ACCEPTOR1,PROPOSER2) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2))


---------- Quantifier Inference: orbit 20 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
339 (*) : 0-----------1--------0-----
339     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
340     : -0-----------1--------0----
340     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
341     : --0-----------1--------0---
341     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
342     : ---0--------1-----0--------
342     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
343     : ----0--------1-----0-------
343     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
344     : -----0--------1-----0------
344     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
345     : ------0-----1--0-----------
345     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
346     : -------0-----1--0----------
346     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
347     : --------0-----1--0---------
347     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER0)


---------- Quantifier Inference: orbit 21 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
348 (*) : ------------1--0-----0-----
348     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
349     : -------------1--0-----0----
349     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
350     : --------------1--0-----0---
350     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
351     : ------------1--0--0--------
351     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
352     : -------------1--0--0-------
352     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
353     : --------------1--0--0------
353     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
354     : ------------1-----0--0-----
354     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
355     : -------------1-----0--0----
355     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
356     : --------------1-----0--0---
356     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR1,PROPOSER0)', 'leader(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


---------- Quantifier Inference: orbit 22 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
378 (*) : -0--0--------1--1----------
378     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
379     : --0--0--------1--1---------
379     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
380     : 0--0--------1--1-----------
380     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
381     : -0-----0-----1-----1-------
381     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
382     : --0-----0-----1-----1------
382     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
383     : 0-----0-----1-----1--------
383     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
384     : ----0--0-----1--------1----
384     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
385     : -----0--0-----1--------1---
385     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
386     : ---0--0-----1--------1-----
386     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor0,proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer1)', 'promise(acceptor0,proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)', 'leader(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,QUORUM0,QUORUM1. ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | QUORUM0 = QUORUM1


---------- Quantifier Inference: orbit 24 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
387 (*) : -0--0--0-----1-------------
387     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
388     : --0--0--0-----1------------
388     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
389     : 0--0--0-----1--------------
389     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))


---------- Quantifier Inference: orbit 25 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
390 (*) : ----------0-------00------0
390     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
391     : ----------0-------0-0----0-
391     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
392     : ----------0--------00---0--
392     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
393     : -----------0---------00---0
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
394     : -----------0---------0-0-0-
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
395     : -----------0----------000--
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
396     : ---------0-----00---------0
396     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
397     : ---------0-----0-0-------0-
397     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
398     : ---------0------00------0--
398     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 2, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER1)', '~promise(ACCEPTOR0,PROPOSER0)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))


---------- Quantifier Inference: orbit 26 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : ----------0--------0----0-0
399     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
400     : ----------0---------0---00-
400     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
401     : ----------0-------0------00
401     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
402     : -----------0----------0-0-0
402     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
403     : -----------0-----------000-
403     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
404     : -----------0---------0---00
404     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
405     : ---------0------0-------0-0
405     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
406     : ---------0-------0------00-
406     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
407     : ---------0-----0---------00
407     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER1)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))


---------- Quantifier Inference: orbit 27 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : -----------0------------000
408     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : ---------0--------------000
410     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$2]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~didNotPromise(ACCEPTOR0)', '~start(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))


---------- Quantifier Inference: orbit 28 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : ------0---0--------0-1----0
411     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
412     : ------0---0---------01---0-
412     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
413     : -------0--0-------0---1---0
413     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
414     : -------0--0---------0-1-0--
414     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
415     : --------0-0-------0----1-0-
415     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
416     : --------0-0--------0---10--
416     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
417     : ------0----0------1---0---0
417     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
418     : ------0----0------1----0-0-
418     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
419     : -------0---0-------1-0----0
419     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
420     : -------0---0-------1---00--
420     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
421     : --------0--0--------10---0-
421     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
422     : --------0--0--------1-0-0--
422     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
423     : ---0-----0------0----1----0
423     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
424     : ---0-----0-------0---1---0-
424     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
425     : ----0----0-----0------1---0
425     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
426     : ----0----0-------0----1-0--
426     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
427     : -----0---0-----0-------1-0-
427     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
428     : -----0---0------0------10--
428     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
429     : ---0-------0---1------0---0
429     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
430     : ---0-------0---1-------0-0-
430     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
431     : ----0------0----1----0----0
431     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
432     : ----0------0----1------00--
432     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
433     : -----0-----0-----1---0---0-
433     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
434     : -----0-----0-----1----0-0--
434     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
435     : 0--------0------0-1-------0
435     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
436     : 0--------0-------01------0-
436     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
437     : -0-------0-----0---1------0
437     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
438     : -0-------0-------0-1----0--
438     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
439     : --0------0-----0----1----0-
439     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
440     : --0------0------0---1---0--
440     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
441     : 0---------0----1---0------0
441     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
442     : 0---------0----1----0----0-
442     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
443     : -0--------0-----1-0-------0
443     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
444     : -0--------0-----1---0---0--
444     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
445     : --0-------0------10------0-
445     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
446     : --0-------0------1-0----0--
446     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER0)', '~start(PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER2,QUORUM0,ACCEPTOR1,PROPOSER1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER0) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2)


---------- Quantifier Inference: orbit 29 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : ---0-----0-----------1---00
465     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
466     : ----0----0------------1-0-0
466     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
467     : -----0---0-------------100-
467     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
468     : 0--------0--------1------00
468     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
469     : -0-------0---------1----0-0
469     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
470     : --0------0----------1---00-
470     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
471     : ------0---0----------1---00
471     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
472     : -------0--0-----------1-0-0
472     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
473     : --------0-0------------100-
473     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
474     : 0---------0----1---------00
474     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
475     : -0--------0-----1-------0-0
475     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
476     : --0-------0------1------00-
476     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
477     : ------0----0------1------00
477     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
478     : -------0---0-------1----0-0
478     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
479     : --------0--0--------1---00-
479     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
480     : ---0-------0---1---------00
480     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
481     : ----0------0----1-------0-0
481     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
482     : -----0-----0-----1------00-
482     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', 'promise(ACCEPTOR1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER1,QUORUM0. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


---------- Quantifier Inference: orbit 31 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 33 =====================
size : 36
num_suborbits: 1
501 (*) : 1--0-------0----------0---0
501     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
502     : 1--0-------0-----------0-0-
502     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
503     : -1--0------0---------0----0
503     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
504     : -1--0------0-----------00--
504     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
505     : --1--0-----0---------0---0-
505     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
506     : --1--0-----0----------0-0--
506     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
507     : 0--1------0--------0------0
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
508     : 0--1------0---------0----0-
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
509     : -0--1-----0-------0-------0
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
510     : -0--1-----0---------0---0--
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
511     : --0--1----0-------0------0-
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
512     : --0--1----0--------0----0--
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
513     : 1-----0----0----------0---0
513     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
514     : 1-----0----0-----------0-0-
514     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
515     : -1-----0---0---------0----0
515     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
516     : -1-----0---0-----------00--
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
517     : --1-----0--0---------0---0-
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
518     : --1-----0--0----------0-0--
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
519     : 0-----1--0------0---------0
519     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
520     : 0-----1--0-------0-------0-
520     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
521     : -0-----1-0-----0----------0
521     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
522     : -0-----1-0-------0------0--
522     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
523     : --0-----10-----0---------0-
523     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
524     : --0-----10------0-------0--
524     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
525     : ---1--0---0--------0------0
525     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
526     : ---1--0---0---------0----0-
526     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
527     : ----1--0--0-------0-------0
527     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
528     : ----1--0--0---------0---0--
528     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
529     : -----1--0-0-------0------0-
529     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
530     : -----1--0-0--------0----0--
530     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
531     : ---0--1--0------0---------0
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
532     : ---0--1--0-------0-------0-
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
533     : ----0--1-0-----0----------0
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
534     : ----0--1-0-------0------0--
534     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
535     : -----0--10-----0---------0-
535     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
536     : -----0--10------0-------0--
536     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'0$chosenAt': 1, '1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '1$start': 1, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~chosenAt(QUORUM1,PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER1)', 'chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER2,QUORUM0,PROPOSER1,QUORUM1. chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


---------- Quantifier Inference: orbit 33 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 34 =====================
size : 9
num_suborbits: 1
537 (*) : ---0-----0-0-------------00
537     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
538     : ----0----0-0------------0-0
538     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
539     : -----0---0-0------------00-
539     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
540     : 0--------00--------------00
540     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
541     : -0-------00-------------0-0
541     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
542     : --0------00-------------00-
542     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
543     : ------0---00-------------00
543     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
544     : -------0--00------------0-0
544     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
545     : --------0-00------------00-
545     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR1,ACCEPTOR0,PROPOSER1,QUORUM0. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


---------- Quantifier Inference: orbit 34 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
546 (*) : ---0--1--0---------------00
546     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
547     : ----0--1-0--------------0-0
547     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
548     : -----0--10--------------00-
548     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
549     : 0-----1--0---------------00
549     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
550     : -0-----1-0--------------0-0
550     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
551     : --0-----10--------------00-
551     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
552     : ---1--0---0--------------00
552     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
553     : ----1--0--0-------------0-0
553     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
554     : -----1--0-0-------------00-
554     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
555     : 0--1------0--------------00
555     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
556     : -0--1-----0-------------0-0
556     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
557     : --0--1----0-------------00-
557     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
558     : 1-----0----0-------------00
558     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
559     : -1-----0---0------------0-0
559     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
560     : --1-----0--0------------00-
560     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
561     : 1--0-------0-------------00
561     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
562     : -1--0------0------------0-0
562     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
563     : --1--0-----0------------00-
563     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$chosenAt': 1, '1$didNotPromise': 1, '1$start': 2, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'chosenAt(QUORUM0,PROPOSER1)', '~member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1,QUORUM0,QUORUM1. ~chosenAt(QUORUM0,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


---------- Quantifier Inference: orbit 35 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : -----0---0-0----0-----0-0--
564     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
565     : ----0----0-0-----0-----00--
565     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
566     : -----0---0-0---0-----0---0-
566     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
567     : ---0-----0-0-----0-----0-0-
567     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
568     : ----0----0-0---0-----0----0
568     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
569     : ---0-----0-0----0-----0---0
569     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
570     : --0------00-----0--0----0--
570     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
571     : -0-------00------0--0---0--
571     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
572     : --0------00----0--0------0-
572     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
573     : 0--------00------0--0----0-
573     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
574     : -0-------00----0--0-------0
574     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
575     : 0--------00-----0--0------0
575     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
576     : --------0-00-------0--0-0--
576     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
577     : -------0--00--------0--00--
577     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
578     : --------0-00------0--0---0-
578     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
579     : ------0---00--------0--0-0-
579     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
580     : -------0--00------0--0----0
580     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
581     : ------0---00-------0--0---0
581     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0, proposer$1$promise$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$promise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$promise$1; proposer$1$promise$1': [proposer$1$promise$1$0; proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$promise$1; proposer$1$promise$1': proposer$1$promise$1$0; proposer$1$promise$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~promise(ACCEPTOR1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER2,QUORUM0,ACCEPTOR1,PROPOSER1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2)


---------- Quantifier Inference: orbit 36 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 37 =====================
size : 9
num_suborbits: 1
582 (*) : -----0--0--0--1---------00-
582     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
583     : ----0--0---0-1----------0-0
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
584     : ---0--0----01------------00
584     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
585     : --0-----0-0---1---------00-
585     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
586     : -0-----0--0--1----------0-0
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
587     : 0-----0---0-1------------00
587     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
588     : --0--0---0----1---------00-
588     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
589     : -0--0----0---1----------0-0
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
590     : 0--0-----0--1------------00
590     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'leader(proposer2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'leader(proposer2)', '~start(proposer0)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER1)', '~start(PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1,QUORUM0,QUORUM1. ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


---------- Quantifier Inference: orbit 37 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
591 (*) : -----0--0--0--1------0---0-
591     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
592     : ----0--0---0-1-------0----0
592     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
593     : -----0--0--0--1-------0-0--
593     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
594     : ---0--0----01---------0---0
594     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
595     : ----0--0---0-1---------00--
595     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
596     : ---0--0----01----------0-0-
596     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
597     : --0-----0-0---1---0------0-
597     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
598     : -0-----0--0--1----0-------0
598     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
599     : --0-----0-0---1----0----0--
599     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
600     : 0-----0---0-1------0------0
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
601     : -0-----0--0--1------0---0--
601     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
602     : 0-----0---0-1-------0----0-
602     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
603     : --0--0---0----10---------0-
603     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
604     : -0--0----0---1-0----------0
604     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
605     : --0--0---0----1-0-------0--
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
606     : 0--0-----0--1---0---------0
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
607     : -0--0----0---1---0------0--
607     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
608     : 0--0-----0--1----0-------0-
608     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)', 'leader(PROPOSER0)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER2,QUORUM0,PROPOSER1,QUORUM1. ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | ~leader(PROPOSER0) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


---------- Quantifier Inference: orbit 38 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
609 (*) : -----0--0--0--1------00----
609     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
610     : ----0--0---0-1-------0-0---
610     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
611     : ---0--0----01---------00---
611     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
612     : --0-----0-0---1---00-------
612     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
613     : -0-----0--0--1----0-0------
613     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
614     : 0-----0---0-1------00------
614     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
615     : --0--0---0----100----------
615     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
616     : -0--0----0---1-0-0---------
616     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
617     : 0--0-----0--1---00---------
617     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1,QUORUM0,QUORUM1. ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


---------- Quantifier Inference: orbit 39 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
618 (*) : --0-0----0----------1-1-0--
618     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
619     : -0---0---0---------1---10--
619     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
620     : --00-----0----------11---0-
620     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
621     : 0----0---0--------1----1-0-
621     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
622     : -0-0-----0---------1-1----0
622     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
623     : 0---0----0--------1---1---0
623     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
624     : --0----0--0------1----1-0--
624     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
625     : -0------0-0-----1------10--
625     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
626     : --0---0---0------1---1---0-
626     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
627     : 0-------0-0----1-------1-0-
627     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
628     : -0----0---0-----1----1----0
628     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
629     : 0------0--0----1------1---0
629     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
630     : -----0-0---0-----1-1----0--
630     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
631     : ----0---0--0----1---1---0--
631     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
632     : -----00----0-----11------0-
632     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
633     : ---0----0--0---1----1----0-
633     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
634     : ----0-0----0----1-1-------0
634     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
635     : ---0---0---0---1---1------0
635     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$0$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1, acceptor$0$member$0$1, acceptor$1$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0, proposer$1$chosenAt$1$0, proposer$0$promise$1$1, proposer$1$chosenAt$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$promise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$promise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$promise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)', '~member(ACCEPTOR1,QUORUM1)', 'promise(ACCEPTOR1,PROPOSER1)', 'promise(ACCEPTOR2,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER1)', '~start(PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER1,QUORUM1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR1,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER1) | ~promise(ACCEPTOR2,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | start(PROPOSER2) | (ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


---------- Quantifier Inference: orbit 40 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : -0---0--000------------10--
654     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
655     : --0-0--0-00-----------1-0--
655     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
656     : 0----0--000------------1-0-
656     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
657     : --00--0--00----------1---0-
657     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
658     : 0---0--0-00-----------1---0
658     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
659     : -0-0--0--00----------1----0
659     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
660     : --0-0---00-0--------1---0--
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
661     : -0---0-0-0-0-------1----0--
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
662     : --00----00-0--------1----0-
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
663     : 0----00--0-0------1------0-
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
664     : -0-0---0-0-0-------1------0
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
665     : 0---0-0--0-0------1-------0
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
666     : --0--0-0--00-----1------0--
666     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
667     : -0--0---0-00----1-------0--
667     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
668     : --0--00---00-----1-------0-
668     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
669     : 0--0----0-00---1---------0-
669     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
670     : -0--0-0---00----1---------0
670     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
671     : 0--0---0--00---1----------0
671     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', 'promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 2, '0$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$0$promise$0$0; acceptor$1$member$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR2,QUORUM2)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER0)', '~didNotPromise(ACCEPTOR2)', '~chosenAt(QUORUM2,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR2,QUORUM1)', '~member(ACCEPTOR0,QUORUM2)', 'member(ACCEPTOR1,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM1,PROPOSER1)', 'promise(ACCEPTOR1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~start(PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM2,ACCEPTOR0,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER1,QUORUM1. ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | didNotPromise(ACCEPTOR2) | chosenAt(QUORUM2,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR1,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | (ACCEPTOR0 = ACCEPTOR1 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM2 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


---------- Quantifier Inference: orbit 42 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : -0------000------0-----10--
672     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
673     : --0----0-00-----0-----1-0--
673     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
674     : 0-------000------0-----1-0-
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
675     : --0---0--00----0-----1---0-
675     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
676     : 0------0-00-----0-----1---0
676     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
677     : -0----0--00----0-----1----0
677     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
678     : ----0---00-0-----0--1---0--
678     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
679     : -----0-0-0-0----0--1----0--
679     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
680     : ---0----00-0-----0--1----0-
680     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
681     : -----00--0-0---0--1------0-
681     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
682     : ---0---0-0-0----0--1------0
682     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
683     : ----0-0--0-0---0--1-------0
683     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
684     : -0---0---00---------0--10--
684     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
685     : --0-0----00--------0--1-0--
685     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
686     : 0----0---00---------0--1-0-
686     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
687     : --00-----00-------0--1---0-
687     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
688     : 0---0----00--------0--1---0
688     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
689     : -0-0-----00-------0--1----0
689     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
690     : -----0-0--00-----1--0---0--
690     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
691     : ----0---0-00----1--0----0--
691     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
692     : -----00---00-----1--0----0-
692     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
693     : ---0----0-00---1--0------0-
693     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
694     : ----0-0---00----1--0------0
694     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
695     : ---0---0--00---1--0-------0
695     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
696     : --0-0----0-0--------1--00--
696     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
697     : -0---0---0-0-------1--0-0--
697     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
698     : --00-----0-0--------1--0-0-
698     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
699     : 0----0---0-0------1--0---0-
699     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
700     : -0-0-----0-0-------1--0---0
700     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
701     : 0---0----0-0------1--0----0
701     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
702     : --0----0--00-----1-----00--
702     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
703     : -0------0-00----1-----0-0--
703     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
704     : --0---0---00-----1-----0-0-
704     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
705     : 0-------0-00---1-----0---0-
705     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
706     : -0----0---00----1-----0---0
706     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
707     : 0------0--00---1-----0----0
707     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 2, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$chosenAt$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$chosenAt$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$1; proposer$1$promise$1$0, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1], 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, 'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$3; acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER0)', 'promise(ACCEPTOR2,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM0,PROPOSER1)', '~start(PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER1,QUORUM1. promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | ~promise(ACCEPTOR2,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | start(PROPOSER2) | (ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


---------- Quantifier Inference: orbit 43 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : --0-0--0-000-----------00--
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
772     : -0---0--0000----------0-0--
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
773     : --00--0--000-----------0-0-
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
774     : 0----0--0000---------0---0-
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
775     : -0-0--0--000----------0---0
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
776     : 0---0--0-000---------0----0
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
777     : -0---0-0-000--------0---0--
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
778     : --0-0---0000-------0----0--
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
779     : 0----00--000--------0----0-
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
780     : --00----0000------0------0-
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
781     : 0---0-0--000-------0------0
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
782     : -0-0---0-000------0-------0
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
783     : -0--0---0000-----0------0--
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
784     : --0--0-0-000----0-------0--
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
785     : 0--0----0000-----0-------0-
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
786     : --0--00--000---0---------0-
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
787     : 0--0---0-000----0---------0
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
788     : -0--0-0--000---0----------0
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 3, '1$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$0], 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': proposer$1$chosenAt$1$0; proposer$1$promise$1$0, 'proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1; acceptor$1$promise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR2,QUORUM2)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR2)', '~promise(ACCEPTOR1,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', 'member(ACCEPTOR2,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR1,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR0,QUORUM2)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~didNotPromise(ACCEPTOR0)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM2,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER1)', '~start(PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM2,ACCEPTOR0,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER1,QUORUM1. ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR2) | promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR1,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM2,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | start(PROPOSER2) | (ACCEPTOR0 = ACCEPTOR1 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM2 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


---------- Quantifier Inference: orbit 47 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : --0----0-000----0------00--
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
790     : -0------0000-----0----0-0--
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
791     : --0---0--000---0-------0-0-
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
792     : 0-------0000-----0---0---0-
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
793     : -0----0--000---0------0---0
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
794     : 0------0-000----0----0----0
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
795     : -----0-0-000----0---0---0--
795     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
796     : ----0---0000-----0-0----0--
796     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
797     : -----00--000---0----0----0-
797     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
798     : ---0----0000-----00------0-
798     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
799     : ----0-0--000---0---0------0
799     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
800     : ---0---0-000----0-0-------0
800     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
801     : --0-0----000-------0---00--
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
802     : -0---0---000--------0-0-0--
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
803     : --00-----000------0----0-0-
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
804     : 0----0---000--------00---0-
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
805     : -0-0-----000------0---0---0
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
806     : 0---0----000-------0-0----0
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$1$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 3, '1$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0, proposer$1$promise$1$1, proposer$1$chosenAt$1$1, proposer$1$promise$1$0]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$0; acceptor$1$promise$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~didNotPromise(ACCEPTOR0)', '~promise(ACCEPTOR0,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR2,QUORUM1)', '~start(PROPOSER2)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER1,QUORUM1. promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | start(PROPOSER2) | (ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)


---------- Quantifier Inference: orbit 48 ----------

[QI_CHECK RESULT]: PASS


=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
843 (*) : 0-00-00-0000-------------0-
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
844     : 00-00-00-000--------------0
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
845     : -00-00-00000------------0--
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$3': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$4': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$5': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 6, '1$didNotPromise': 3, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR2,QUORUM2)', 'member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR2)', '~chosenAt(QUORUM2,PROPOSER0)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR0,QUORUM2)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR1,QUORUM2)', '~member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR2,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER1)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM2,ACCEPTOR0,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER1,QUORUM1. ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR1,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | start(PROPOSER1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. ((chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (ACCEPTOR0 = ACCEPTOR1 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1)


---------- Quantifier Inference: orbit 51 ----------

[QI_CHECK RESULT]: PASS


=======================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=======================================================================================================================


=== Prime Orbit 4 =====================
size : 9
num_suborbits: 1
45 (*) : -------------------11------
45     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
46     : ------------------1-1------
46     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
47     : ------------------11-------
47     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
48     : ----------------------11---
48     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
49     : ---------------------1-1---
49     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
50     : ---------------------11----
50     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
51     : ----------------11---------
51     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
52     : ---------------1-1---------
52     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
53     : ---------------11----------
53     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 2 =====================
size : 9
num_suborbits: 1
27 (*) : ---------------1--------0--
27     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
28     : ----------------1--------0-
28     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
29     : -----------------1--------0
29     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
30     : ------------------1-----0--
30     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
31     : -------------------1-----0-
31     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
32     : --------------------1-----0
32     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
33     : ---------------------1--0--
33     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
34     : ----------------------1--0-
34     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
35     : -----------------------1--0
35     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 3 =====================
size : 9
num_suborbits: 1
36 (*) : 1-----------------------0--
36     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
37     : -1-----------------------0-
37     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
38     : --1-----------------------0
38     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
39     : ---1--------------------0--
39     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
40     : ----1--------------------0-
40     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
41     : -----1--------------------0
41     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
42     : ------1-----------------0--
42     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
43     : -------1-----------------0-
43     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
44     : --------1-----------------0
44     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER0)
qcost : 4




=== Prime Orbit 8 =====================
size : 18
num_suborbits: 1
135 (*) : ----1-------1--------------
135     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
136     : -----1------1--------------
136     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
137     : ---1---------1-------------
137     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
138     : -----1-------1-------------
138     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
139     : ---1----------1------------
139     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
140     : ----1---------1------------
140     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
141     : -1----------1--------------
141     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
142     : --1---------1--------------
142     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
143     : 1------------1-------------
143     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
144     : --1----------1-------------
144     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
145     : 1-------------1------------
145     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
146     : -1------------1------------
146     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
147     : -------1----1--------------
147     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
148     : --------1---1--------------
148     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
149     : ------1------1-------------
149     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
150     : --------1----1-------------
150     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
151     : ------1-------1------------
151     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
152     : -------1------1------------
152     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,PROPOSER1,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 9 =====================
size : 3
num_suborbits: 1
153 (*) : ------------11-------------
153     : ['leader(proposer0)', 'leader(proposer1)']
154     : ------------1-1------------
154     : ['leader(proposer0)', 'leader(proposer2)']
155     : -------------11------------
155     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,PROPOSER1. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 5




=== Prime Orbit 10 =====================
size : 3
num_suborbits: 1
156 (*) : ------------1-----------0--
156     : ['leader(proposer0)', '~start(proposer0)']
157     : -------------1-----------0-
157     : ['leader(proposer1)', '~start(proposer1)']
158     : --------------1-----------0
158     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. ~leader(PROPOSER0) | start(PROPOSER0)
qcost : 3




=== Prime Orbit 13 =====================
size : 9
num_suborbits: 1
186 (*) : ------0--1--1--------------
186     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
187     : -------0-1---1-------------
187     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
188     : --------01----1------------
188     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
189     : ---0------1-1--------------
189     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
190     : ----0-----1--1-------------
190     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
191     : -----0----1---1------------
191     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
192     : 0----------11--------------
192     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
193     : -0---------1-1-------------
193     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
194     : --0--------1--1------------
194     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~didNotPromise(ACCEPTOR0)
qcost : 7




=== Prime Orbit 14 =====================
size : 36
num_suborbits: 1
195 (*) : ---------1--1----------1---
195     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
196     : ---------1--1---------1----
196     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
197     : ---------1---1---------1---
197     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
198     : ---------1---1-------1-----
198     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
199     : ---------1----1-------1----
199     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
200     : ---------1----1------1-----
200     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
201     : ---------1--1-------1------
201     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
202     : ---------1--1------1-------
202     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
203     : ---------1---1------1------
203     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
204     : ---------1---1----1--------
204     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
205     : ---------1----1----1-------
205     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
206     : ---------1----1---1--------
206     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
207     : ----------1-1----------1---
207     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
208     : ----------1-1---------1----
208     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
209     : ----------1--1---------1---
209     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
210     : ----------1--1-------1-----
210     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
211     : ----------1---1-------1----
211     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
212     : ----------1---1------1-----
212     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
213     : ----------1-1----1---------
213     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
214     : ----------1-1---1----------
214     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
215     : ----------1--1---1---------
215     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
216     : ----------1--1-1-----------
216     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
217     : ----------1---1-1----------
217     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
218     : ----------1---11-----------
218     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
219     : -----------11-------1------
219     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
220     : -----------11------1-------
220     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
221     : -----------1-1------1------
221     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
222     : -----------1-1----1--------
222     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
223     : -----------1--1----1-------
223     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
224     : -----------1--1---1--------
224     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
225     : -----------11----1---------
225     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
226     : -----------11---1----------
226     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
227     : -----------1-1---1---------
227     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
228     : -----------1-1-1-----------
228     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
229     : -----------1--1-1----------
229     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
230     : -----------1--11-----------
230     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER1,ACCEPTOR1. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 15 =====================
size : 18
num_suborbits: 1
231 (*) : ---------1--1-----0--------
231     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
232     : ---------1---1-----0-------
232     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
233     : ---------1----1-----0------
233     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
234     : ---------1--1--------0-----
234     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
235     : ---------1---1--------0----
235     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
236     : ---------1----1--------0---
236     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
237     : ----------1-1--0-----------
237     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
238     : ----------1--1--0----------
238     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
239     : ----------1---1--0---------
239     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
240     : ----------1-1--------0-----
240     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
241     : ----------1--1--------0----
241     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
242     : ----------1---1--------0---
242     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
243     : -----------11--0-----------
243     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
244     : -----------1-1--0----------
244     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
245     : -----------1--1--0---------
245     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
246     : -----------11-----0--------
246     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
247     : -----------1-1-----0-------
247     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
248     : -----------1--1-----0------
248     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 16 =====================
size : 9
num_suborbits: 1
249 (*) : ---------1-11--------------
249     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
250     : ---------1-1-1-------------
250     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
251     : ---------1-1--1------------
251     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
252     : ---------11-1--------------
252     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
253     : ---------11--1-------------
253     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
254     : ---------11---1------------
254     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
255     : ----------111--------------
255     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
256     : ----------11-1-------------
256     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
257     : ----------11--1------------
257     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR0) | ~didNotPromise(ACCEPTOR1) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 18 =====================
size : 18
num_suborbits: 1
267 (*) : 0-----------1---------1----
267     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
268     : 0-----------1----------1---
268     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
269     : -0-----------1-------1-----
269     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
270     : -0-----------1---------1---
270     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
271     : --0-----------1------1-----
271     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
272     : --0-----------1-------1----
272     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
273     : ---0--------1------1-------
273     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
274     : ---0--------1-------1------
274     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
275     : ----0--------1----1--------
275     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
276     : ----0--------1------1------
276     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
277     : -----0--------1---1--------
277     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
278     : -----0--------1----1-------
278     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
279     : ------0-----1---1----------
279     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
280     : ------0-----1----1---------
280     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
281     : -------0-----1-1-----------
281     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
282     : -------0-----1---1---------
282     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
283     : --------0-----11-----------
283     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
284     : --------0-----1-1----------
284     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER1,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 19 =====================
size : 36
num_suborbits: 1
285 (*) : ------------1-----0---1----
285     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
286     : ------------1-----0----1---
286     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
287     : -------------1-----0-1-----
287     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
288     : -------------1-----0---1---
288     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
289     : --------------1-----01-----
289     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
290     : --------------1-----0-1----
290     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
291     : ------------1------1-0-----
291     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
292     : ------------1-------10-----
292     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
293     : -------------1----1---0----
293     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
294     : -------------1------1-0----
294     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
295     : --------------1---1----0---
295     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
296     : --------------1----1---0---
296     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
297     : ------------1--0------1----
297     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
298     : ------------1--0-------1---
298     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
299     : -------------1--0----1-----
299     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
300     : -------------1--0------1---
300     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
301     : --------------1--0---1-----
301     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
302     : --------------1--0----1----
302     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
303     : ------------1---1----0-----
303     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
304     : ------------1----1---0-----
304     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
305     : -------------1-1------0----
305     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
306     : -------------1---1----0----
306     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
307     : --------------11-------0---
307     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
308     : --------------1-1------0---
308     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
309     : ------------1--0---1-------
309     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
310     : ------------1--0----1------
310     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
311     : -------------1--0-1--------
311     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
312     : -------------1--0---1------
312     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
313     : --------------1--01--------
313     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
314     : --------------1--0-1-------
314     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
315     : ------------1---1-0--------
315     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
316     : ------------1----10--------
316     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
317     : -------------1-1---0-------
317     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
318     : -------------1---1-0-------
318     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
319     : --------------11----0------
319     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
320     : --------------1-1---0------
320     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER1,ACCEPTOR1. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 20 =====================
size : 36
num_suborbits: 2
321 (*) : ------------1---1-----1----
321     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
322     : ------------1----1-----1---
322     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
323     : -------------1-1-----1-----
323     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
324     : -------------1---1-----1---
324     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
325     : --------------11-----1-----
325     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
326     : --------------1-1-----1----
326     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
327     : ------------1---1--1-------
327     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
328     : ------------1----1--1------
328     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
329     : -------------1-1--1--------
329     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
330     : -------------1---1--1------
330     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
331     : --------------11--1--------
331     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
332     : --------------1-1--1-------
332     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
333     : ------------1------1--1----
333     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
334     : ------------1-------1--1---
334     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
335     : -------------1----1--1-----
335     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
336     : -------------1------1--1---
336     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
337     : --------------1---1--1-----
337     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
338     : --------------1----1--1----
338     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
357 (*) : ------------1------1---1---
357     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
358     : ------------1-------1-1----
358     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
359     : -------------1----1----1---
359     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
360     : -------------1------11-----
360     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
361     : --------------1---1---1----
361     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
362     : --------------1----1-1-----
362     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
363     : ------------1---1------1---
363     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
364     : ------------1----1----1----
364     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
365     : -------------1-1-------1---
365     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
366     : -------------1---1---1-----
366     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
367     : --------------11------1----
367     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
368     : --------------1-1----1-----
368     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
369     : ------------1---1---1------
369     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
370     : ------------1----1-1-------
370     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
371     : -------------1-1----1------
371     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
372     : -------------1---11--------
372     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
373     : --------------11---1-------
373     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
374     : --------------1-1-1--------
374     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
num_forall :   5
num_exists :   0
num_literals : 10
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER2,ACCEPTOR1,PROPOSER1. ~promise(ACCEPTOR1,PROPOSER2) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | ((ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 ~= PROPOSER2 | PROPOSER0 = PROPOSER1) & (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER1 = PROPOSER2))
qcost : 15




=== Prime Orbit 21 =====================
size : 9
num_suborbits: 1
339 (*) : 0-----------1--------0-----
339     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
340     : -0-----------1--------0----
340     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
341     : --0-----------1--------0---
341     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
342     : ---0--------1-----0--------
342     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
343     : ----0--------1-----0-------
343     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
344     : -----0--------1-----0------
344     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
345     : ------0-----1--0-----------
345     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
346     : -------0-----1--0----------
346     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
347     : --------0-----1--0---------
347     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0) | member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER0)
qcost : 7




=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
348 (*) : ------------1--0-----0-----
348     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
349     : -------------1--0-----0----
349     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
350     : --------------1--0-----0---
350     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
351     : ------------1--0--0--------
351     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
352     : -------------1--0--0-------
352     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
353     : --------------1--0--0------
353     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
354     : ------------1-----0--0-----
354     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
355     : -------------1-----0--0----
355     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
356     : --------------1-----0--0---
356     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. promise(ACCEPTOR1,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR0,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 24 =====================
size : 9
num_suborbits: 1
378 (*) : -0--0--------1--1----------
378     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
379     : --0--0--------1--1---------
379     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
380     : 0--0--------1--1-----------
380     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
381     : -0-----0-----1-----1-------
381     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
382     : --0-----0-----1-----1------
382     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
383     : 0-----0-----1-----1--------
383     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
384     : ----0--0-----1--------1----
384     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
385     : -----0--0-----1--------1---
385     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
386     : ---0--0-----1--------1-----
386     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall PROPOSER0,ACCEPTOR0,QUORUM0,QUORUM1. ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
387 (*) : -0--0--0-----1-------------
387     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
388     : --0--0--0-----1------------
388     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
389     : 0--0--0-----1--------------
389     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))
qcost : 4




=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
390 (*) : ----------0-------00------0
390     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
391     : ----------0-------0-0----0-
391     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
392     : ----------0--------00---0--
392     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
393     : -----------0---------00---0
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
394     : -----------0---------0-0-0-
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
395     : -----------0----------000--
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
396     : ---------0-----00---------0
396     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
397     : ---------0-----0-0-------0-
397     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
398     : ---------0------00------0--
398     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER1. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : ----------0--------0----0-0
399     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
400     : ----------0---------0---00-
400     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
401     : ----------0-------0------00
401     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
402     : -----------0----------0-0-0
402     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
403     : -----------0-----------000-
403     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
404     : -----------0---------0---00
404     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
405     : ---------0------0-------0-0
405     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
406     : ---------0-------0------00-
406     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
407     : ---------0-----0---------00
407     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall ACCEPTOR0,PROPOSER1. didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : -----------0------------000
408     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : ---------0--------------000
410     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. didNotPromise(ACCEPTOR0) | start(PROPOSER0))
qcost : 4




=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : ------0---0--------0-1----0
411     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
412     : ------0---0---------01---0-
412     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
413     : -------0--0-------0---1---0
413     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
414     : -------0--0---------0-1-0--
414     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
415     : --------0-0-------0----1-0-
415     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
416     : --------0-0--------0---10--
416     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
417     : ------0----0------1---0---0
417     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
418     : ------0----0------1----0-0-
418     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
419     : -------0---0-------1-0----0
419     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
420     : -------0---0-------1---00--
420     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
421     : --------0--0--------10---0-
421     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
422     : --------0--0--------1-0-0--
422     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
423     : ---0-----0------0----1----0
423     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
424     : ---0-----0-------0---1---0-
424     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
425     : ----0----0-----0------1---0
425     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
426     : ----0----0-------0----1-0--
426     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
427     : -----0---0-----0-------1-0-
427     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
428     : -----0---0------0------10--
428     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
429     : ---0-------0---1------0---0
429     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
430     : ---0-------0---1-------0-0-
430     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
431     : ----0------0----1----0----0
431     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
432     : ----0------0----1------00--
432     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
433     : -----0-----0-----1---0---0-
433     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
434     : -----0-----0-----1----0-0--
434     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
435     : 0--------0------0-1-------0
435     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
436     : 0--------0-------01------0-
436     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
437     : -0-------0-----0---1------0
437     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
438     : -0-------0-------0-1----0--
438     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
439     : --0------0-----0----1----0-
439     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
440     : --0------0------0---1---0--
440     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
441     : 0---------0----1---0------0
441     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
442     : 0---------0----1----0----0-
442     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
443     : -0--------0-----1-0-------0
443     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
444     : -0--------0-----1---0---0--
444     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
445     : --0-------0------10------0-
445     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
446     : --0-------0------1-0----0--
446     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER2,QUORUM0,ACCEPTOR1,PROPOSER1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER0) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2)
qcost : 17




=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : ---0-----0-----------1---00
465     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
466     : ----0----0------------1-0-0
466     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
467     : -----0---0-------------100-
467     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
468     : 0--------0--------1------00
468     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
469     : -0-------0---------1----0-0
469     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
470     : --0------0----------1---00-
470     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
471     : ------0---0----------1---00
471     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
472     : -------0--0-----------1-0-0
472     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
473     : --------0-0------------100-
473     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
474     : 0---------0----1---------00
474     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
475     : -0--------0-----1-------0-0
475     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
476     : --0-------0------1------00-
476     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
477     : ------0----0------1------00
477     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
478     : -------0---0-------1----0-0
478     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
479     : --------0--0--------1---00-
479     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
480     : ---0-------0---1---------00
480     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
481     : ----0------0----1-------0-0
481     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
482     : -----0-----0-----1------00-
482     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER1,QUORUM0. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 33 =====================
size : 36
num_suborbits: 1
501 (*) : 1--0-------0----------0---0
501     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
502     : 1--0-------0-----------0-0-
502     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
503     : -1--0------0---------0----0
503     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
504     : -1--0------0-----------00--
504     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
505     : --1--0-----0---------0---0-
505     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
506     : --1--0-----0----------0-0--
506     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
507     : 0--1------0--------0------0
507     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
508     : 0--1------0---------0----0-
508     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
509     : -0--1-----0-------0-------0
509     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
510     : -0--1-----0---------0---0--
510     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
511     : --0--1----0-------0------0-
511     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
512     : --0--1----0--------0----0--
512     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
513     : 1-----0----0----------0---0
513     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
514     : 1-----0----0-----------0-0-
514     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
515     : -1-----0---0---------0----0
515     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
516     : -1-----0---0-----------00--
516     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
517     : --1-----0--0---------0---0-
517     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
518     : --1-----0--0----------0-0--
518     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
519     : 0-----1--0------0---------0
519     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
520     : 0-----1--0-------0-------0-
520     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
521     : -0-----1-0-----0----------0
521     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
522     : -0-----1-0-------0------0--
522     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
523     : --0-----10-----0---------0-
523     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
524     : --0-----10------0-------0--
524     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
525     : ---1--0---0--------0------0
525     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
526     : ---1--0---0---------0----0-
526     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
527     : ----1--0--0-------0-------0
527     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
528     : ----1--0--0---------0---0--
528     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
529     : -----1--0-0-------0------0-
529     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
530     : -----1--0-0--------0----0--
530     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
531     : ---0--1--0------0---------0
531     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
532     : ---0--1--0-------0-------0-
532     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
533     : ----0--1-0-----0----------0
533     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
534     : ----0--1-0-------0------0--
534     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
535     : -----0--10-----0---------0-
535     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
536     : -----0--10------0-------0--
536     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER2,QUORUM0,PROPOSER1,QUORUM1. chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | ~chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 17




=== Prime Orbit 34 =====================
size : 9
num_suborbits: 1
537 (*) : ---0-----0-0-------------00
537     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
538     : ----0----0-0------------0-0
538     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
539     : -----0---0-0------------00-
539     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
540     : 0--------00--------------00
540     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
541     : -0-------00-------------0-0
541     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
542     : --0------00-------------00-
542     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
543     : ------0---00-------------00
543     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
544     : -------0--00------------0-0
544     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
545     : --------0-00------------00-
545     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR1,ACCEPTOR0,PROPOSER1,QUORUM0. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
546 (*) : ---0--1--0---------------00
546     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
547     : ----0--1-0--------------0-0
547     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
548     : -----0--10--------------00-
548     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
549     : 0-----1--0---------------00
549     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
550     : -0-----1-0--------------0-0
550     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
551     : --0-----10--------------00-
551     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
552     : ---1--0---0--------------00
552     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
553     : ----1--0--0-------------0-0
553     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
554     : -----1--0-0-------------00-
554     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
555     : 0--1------0--------------00
555     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
556     : -0--1-----0-------------0-0
556     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
557     : --0--1----0-------------00-
557     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
558     : 1-----0----0-------------00
558     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
559     : -1-----0---0------------0-0
559     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
560     : --1-----0--0------------00-
560     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
561     : 1--0-------0-------------00
561     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
562     : -1--0------0------------0-0
562     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
563     : --1--0-----0------------00-
563     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall ACCEPTOR0,PROPOSER1,QUORUM0,QUORUM1. ~chosenAt(QUORUM0,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 13




=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : -----0---0-0----0-----0-0--
564     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
565     : ----0----0-0-----0-----00--
565     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
566     : -----0---0-0---0-----0---0-
566     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
567     : ---0-----0-0-----0-----0-0-
567     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
568     : ----0----0-0---0-----0----0
568     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
569     : ---0-----0-0----0-----0---0
569     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
570     : --0------00-----0--0----0--
570     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
571     : -0-------00------0--0---0--
571     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
572     : --0------00----0--0------0-
572     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
573     : 0--------00------0--0----0-
573     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
574     : -0-------00----0--0-------0
574     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
575     : 0--------00-----0--0------0
575     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
576     : --------0-00-------0--0-0--
576     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
577     : -------0--00--------0--00--
577     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
578     : --------0-00------0--0---0-
578     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
579     : ------0---00--------0--0-0-
579     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
580     : -------0--00------0--0----0
580     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
581     : ------0---00-------0--0---0
581     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER2,QUORUM0,ACCEPTOR1,PROPOSER1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER1 = PROPOSER2)
qcost : 18




=== Prime Orbit 37 =====================
size : 9
num_suborbits: 1
582 (*) : -----0--0--0--1---------00-
582     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
583     : ----0--0---0-1----------0-0
583     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
584     : ---0--0----01------------00
584     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
585     : --0-----0-0---1---------00-
585     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
586     : -0-----0--0--1----------0-0
586     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
587     : 0-----0---0-1------------00
587     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
588     : --0--0---0----1---------00-
588     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
589     : -0--0----0---1----------0-0
589     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
590     : 0--0-----0--1------------00
590     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall ACCEPTOR0,PROPOSER1,QUORUM0,QUORUM1. ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
591 (*) : -----0--0--0--1------0---0-
591     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
592     : ----0--0---0-1-------0----0
592     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
593     : -----0--0--0--1-------0-0--
593     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
594     : ---0--0----01---------0---0
594     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
595     : ----0--0---0-1---------00--
595     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
596     : ---0--0----01----------0-0-
596     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
597     : --0-----0-0---1---0------0-
597     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
598     : -0-----0--0--1----0-------0
598     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
599     : --0-----0-0---1----0----0--
599     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
600     : 0-----0---0-1------0------0
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
601     : -0-----0--0--1------0---0--
601     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
602     : 0-----0---0-1-------0----0-
602     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
603     : --0--0---0----10---------0-
603     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
604     : -0--0----0---1-0----------0
604     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
605     : --0--0---0----1-0-------0--
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
606     : 0--0-----0--1---0---------0
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
607     : -0--0----0---1---0------0--
607     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
608     : 0--0-----0--1----0-------0-
608     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER2,QUORUM0,PROPOSER1,QUORUM1. ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | ~leader(PROPOSER0) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | (PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 18




=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
609 (*) : -----0--0--0--1------00----
609     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
610     : ----0--0---0-1-------0-0---
610     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
611     : ---0--0----01---------00---
611     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
612     : --0-----0-0---1---00-------
612     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
613     : -0-----0--0--1----0-0------
613     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
614     : 0-----0---0-1------00------
614     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
615     : --0--0---0----100----------
615     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
616     : -0--0----0---1-0-0---------
616     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
617     : 0--0-----0--1---00---------
617     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall ACCEPTOR0,PROPOSER1,QUORUM0,QUORUM1. ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 40 =====================
size : 18
num_suborbits: 1
618 (*) : --0-0----0----------1-1-0--
618     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
619     : -0---0---0---------1---10--
619     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
620     : --00-----0----------11---0-
620     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
621     : 0----0---0--------1----1-0-
621     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
622     : -0-0-----0---------1-1----0
622     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
623     : 0---0----0--------1---1---0
623     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
624     : --0----0--0------1----1-0--
624     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
625     : -0------0-0-----1------10--
625     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
626     : --0---0---0------1---1---0-
626     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
627     : 0-------0-0----1-------1-0-
627     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
628     : -0----0---0-----1----1----0
628     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
629     : 0------0--0----1------1---0
629     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
630     : -----0-0---0-----1-1----0--
630     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
631     : ----0---0--0----1---1---0--
631     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
632     : -----00----0-----11------0-
632     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
633     : ---0----0--0---1----1----0-
633     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
634     : ----0-0----0----1-1-------0
634     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
635     : ---0---0---0---1---1------0
635     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   8
num_exists :   0
num_literals : 19
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER1,QUORUM1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | member(ACCEPTOR1,QUORUM1) | ~promise(ACCEPTOR1,PROPOSER1) | ~promise(ACCEPTOR2,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | start(PROPOSER2) | (ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 27




=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : -0---0--000------------10--
654     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
655     : --0-0--0-00-----------1-0--
655     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
656     : 0----0--000------------1-0-
656     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
657     : --00--0--00----------1---0-
657     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
658     : 0---0--0-00-----------1---0
658     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
659     : -0-0--0--00----------1----0
659     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
660     : --0-0---00-0--------1---0--
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
661     : -0---0-0-0-0-------1----0--
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
662     : --00----00-0--------1----0-
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
663     : 0----00--0-0------1------0-
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
664     : -0-0---0-0-0-------1------0
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
665     : 0---0-0--0-0------1-------0
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
666     : --0--0-0--00-----1------0--
666     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
667     : -0--0---0-00----1-------0--
667     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
668     : --0--00---00-----1-------0-
668     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
669     : 0--0----0-00---1---------0-
669     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
670     : -0--0-0---00----1---------0
670     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
671     : 0--0---0--00---1----------0
671     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
num_forall :   9
num_exists :   0
num_literals : 25
quantified form : forall PROPOSER0,QUORUM2,ACCEPTOR0,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER1,QUORUM1. ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM0,PROPOSER0) | didNotPromise(ACCEPTOR2) | chosenAt(QUORUM2,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR1,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM1,PROPOSER1) | ~promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | start(PROPOSER2) | (ACCEPTOR0 = ACCEPTOR1 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM2 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 34




=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : -0------000------0-----10--
672     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
673     : --0----0-00-----0-----1-0--
673     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
674     : 0-------000------0-----1-0-
674     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
675     : --0---0--00----0-----1---0-
675     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
676     : 0------0-00-----0-----1---0
676     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
677     : -0----0--00----0-----1----0
677     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
678     : ----0---00-0-----0--1---0--
678     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
679     : -----0-0-0-0----0--1----0--
679     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
680     : ---0----00-0-----0--1----0-
680     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
681     : -----00--0-0---0--1------0-
681     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
682     : ---0---0-0-0----0--1------0
682     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
683     : ----0-0--0-0---0--1-------0
683     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
684     : -0---0---00---------0--10--
684     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
685     : --0-0----00--------0--1-0--
685     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
686     : 0----0---00---------0--1-0-
686     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
687     : --00-----00-------0--1---0-
687     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
688     : 0---0----00--------0--1---0
688     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
689     : -0-0-----00-------0--1----0
689     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
690     : -----0-0--00-----1--0---0--
690     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
691     : ----0---0-00----1--0----0--
691     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
692     : -----00---00-----1--0----0-
692     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
693     : ---0----0-00---1--0------0-
693     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
694     : ----0-0---00----1--0------0
694     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
695     : ---0---0--00---1--0-------0
695     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
696     : --0-0----0-0--------1--00--
696     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
697     : -0---0---0-0-------1--0-0--
697     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
698     : --00-----0-0--------1--0-0-
698     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
699     : 0----0---0-0------1--0---0-
699     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
700     : -0-0-----0-0-------1--0---0
700     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
701     : 0---0----0-0------1--0----0
701     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
702     : --0----0--00-----1-----00--
702     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
703     : -0------0-00----1-----0-0--
703     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
704     : --0---0---00-----1-----0-0-
704     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
705     : 0-------0-00---1-----0---0-
705     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
706     : -0----0---00----1-----0---0
706     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
707     : 0------0--00---1-----0----0
707     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
num_forall :   8
num_exists :   0
num_literals : 20
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER1,QUORUM1. promise(ACCEPTOR0,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM1,PROPOSER0) | ~promise(ACCEPTOR2,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM0,PROPOSER1) | start(PROPOSER2) | (ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 28




=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : --0-0--0-000-----------00--
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
772     : -0---0--0000----------0-0--
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
773     : --00--0--000-----------0-0-
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
774     : 0----0--0000---------0---0-
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
775     : -0-0--0--000----------0---0
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
776     : 0---0--0-000---------0----0
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
777     : -0---0-0-000--------0---0--
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
778     : --0-0---0000-------0----0--
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
779     : 0----00--000--------0----0-
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
780     : --00----0000------0------0-
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
781     : 0---0-0--000-------0------0
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
782     : -0-0---0-000------0-------0
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
783     : -0--0---0000-----0------0--
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
784     : --0--0-0-000----0-------0--
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
785     : 0--0----0000-----0-------0-
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
786     : --0--00--000---0---------0-
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
787     : 0--0---0-000----0---------0
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
788     : -0--0-0--000---0----------0
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
num_forall :   9
num_exists :   0
num_literals : 26
quantified form : forall PROPOSER0,QUORUM2,ACCEPTOR0,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER1,QUORUM1. ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR2) | promise(ACCEPTOR1,PROPOSER0) | ~member(ACCEPTOR1,QUORUM0) | ~member(ACCEPTOR2,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR1,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM2) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM2,PROPOSER1) | chosenAt(QUORUM0,PROPOSER1) | start(PROPOSER2) | (ACCEPTOR0 = ACCEPTOR1 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM2 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 35




=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : --0----0-000----0------00--
789     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
790     : -0------0000-----0----0-0--
790     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
791     : --0---0--000---0-------0-0-
791     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
792     : 0-------0000-----0---0---0-
792     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
793     : -0----0--000---0------0---0
793     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
794     : 0------0-000----0----0----0
794     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
795     : -----0-0-000----0---0---0--
795     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
796     : ----0---0000-----0-0----0--
796     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
797     : -----00--000---0----0----0-
797     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
798     : ---0----0000-----00------0-
798     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
799     : ----0-0--000---0---0------0
799     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
800     : ---0---0-000----0-0-------0
800     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
801     : --0-0----000-------0---00--
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
802     : -0---0---000--------0-0-0--
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
803     : --00-----000------0----0-0-
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
804     : 0----0---000--------00---0-
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
805     : -0-0-----000------0---0---0
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
806     : 0---0----000-------0-0----0
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
num_forall :   8
num_exists :   0
num_literals : 21
quantified form : forall PROPOSER0,ACCEPTOR0,PROPOSER2,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER1,QUORUM1. promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR0,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR2,QUORUM1) | start(PROPOSER2) | (ACCEPTOR0 = ACCEPTOR1 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | PROPOSER0 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM0 = QUORUM1 | PROPOSER1 = PROPOSER2)
qcost : 29




=== Prime Orbit 51 =====================
size : 3
num_suborbits: 1
843 (*) : 0-00-00-0000-------------0-
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
844     : 00-00-00-000--------------0
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
845     : -00-00-00000------------0--
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   7
num_exists :   1
num_literals : 23
quantified form : forall QUORUM2,ACCEPTOR0,ACCEPTOR2,QUORUM0,ACCEPTOR1,PROPOSER1,QUORUM1. ~member(ACCEPTOR2,QUORUM2) | ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR0,QUORUM2) | ~member(ACCEPTOR1,QUORUM2) | member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR2,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | start(PROPOSER1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR0,QUORUM1) | (exists PROPOSER0. ((chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (ACCEPTOR0 = ACCEPTOR1 | QUORUM1 = QUORUM2 | ACCEPTOR0 = ACCEPTOR2 | ACCEPTOR1 = ACCEPTOR2 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1)
qcost : 31



[QRM NOTE]: Time elapsed since start: 88.670 seconds

[QRM NOTE]: Time elapsed since last: 88.143 seconds

[QRM NOTE]: Peak memory: 78883309 bytes


======================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

======================================================================================================


New level: 1
 pending : [2, 3, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4]


Before reduction : 
 pending  : [2, 3, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [2, 3, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4]


Solution : [4] has cost 6.


Decide in level 1 among pending : [2, 3, 8, 9, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 9 with phase True at level 1

After decision at level 1
 pending : [2, 3, 8, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4, 9]


New level: 2
 pending : [2, 3, 8, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4, 9]


Before reduction : 
 pending  : [2, 3, 8, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4, 9]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, 17179869184), (10, 17179869184), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 4294967296), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [2, 3, 8, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4, 9]


Solution : [4, 9] has cost 11.


Decide in level 2 among pending : [2, 3, 8, 10, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 4294967296), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [2, 3, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10]


New level: 3
 pending : [2, 3, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10]


Before reduction : 
 pending  : [2, 3, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, 4294967296), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, 536870912), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 3, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10]


Solution : [4, 9, 10] has cost 14.


Decide in level 3 among pending : [2, 3, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, 536870912), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 25 with phase True at level 3

After decision at level 3
 pending : [2, 3, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25]


New level: 4
 pending : [2, 3, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25]


Before reduction : 
 pending  : [2, 3, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, 536870912), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24}

After reduction : 
 pending  : [2, 3, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25]


Before reduction : 
 pending  : [2, 3, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 3, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25]


Solution : [4, 9, 10, 25] has cost 18.


Decide in level 4 among pending : [2, 3, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [2, 3, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28]


New level: 5
 pending : [2, 3, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28]


Before reduction : 
 pending  : [2, 3, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, 268435456), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 3, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28]


Solution : [4, 9, 10, 25, 28] has cost 22.


Decide in level 5 among pending : [2, 3, 26, 27, 29, 31, 33, 34, 35, 36, 37, 38, 40, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, 268435456), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [2, 3, 26, 27, 29, 31, 33, 35, 36, 37, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34]


New level: 6
 pending : [2, 3, 26, 27, 29, 31, 33, 35, 36, 37, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34]


Before reduction : 
 pending  : [2, 3, 26, 27, 29, 31, 33, 35, 36, 37, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, 268435456), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : {35, 37, 31}

After reduction : 
 pending  : [2, 3, 26, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34]


Before reduction : 
 pending  : [2, 3, 26, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 3, 26, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34]


Solution : [4, 9, 10, 25, 28, 34] has cost 35.


Decide in level 6 among pending : [2, 3, 26, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Decide 2 with phase True at level 6

After decision at level 6
 pending : [3, 26, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34, 2]


New level: 7
 pending : [3, 26, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34, 2]


Before reduction : 
 pending  : [3, 26, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 7 : {33, 3, 36, 38, 40, 42, 43, 47, 48, 51, 26, 27, 29}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 34, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 34, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 34, 2]


Solution : [4, 9, 10, 25, 28, 34, 2] has cost 39.


Before backtrack at level 7
 pending : []
 solution : [4, 9, 10, 25, 28, 34, 2]

After backtrack at level 7
 pending : [3, 26, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34, 2]


Invert decision for 2 at level 6


New level: 7
 pending : [3, 26, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34]


Before reduction : 
 pending  : [3, 26, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34]

Essensial at level 7 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 7 : {33, 3, 36, 38, 40, 42, 43, 47, 48, 51, 27, 29}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 34, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 34, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 34, 26]


Solution : [4, 9, 10, 25, 28, 34, 26] has cost 42.


Before backtrack at level 7
 pending : []
 solution : [4, 9, 10, 25, 28, 34, 26]

After backtrack at level 7
 pending : [26, 3, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34]


Before backtrack at level 6
 pending : [26, 3, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 34]

After backtrack at level 6
 pending : [26, 3, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2]
 solution : [4, 9, 10, 25, 28, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [26, 3, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2]
 solution : [4, 9, 10, 25, 28]


Before reduction : 
 pending  : [26, 3, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2]
 solution : [4, 9, 10, 25, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 3, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2]
 solution : [4, 9, 10, 25, 28]


Solution : [4, 9, 10, 25, 28] has cost 22.


Decide in level 6 among pending : [26, 3, 27, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2]
 solution : [4, 9, 10, 25, 28, 27]


New level: 7
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2]
 solution : [4, 9, 10, 25, 28, 27]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2]
 solution : [4, 9, 10, 25, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {35, 37, 31}

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 28, 27]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 28, 27]


Solution : [4, 9, 10, 25, 28, 27] has cost 29.


Decide in level 7 among pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 28, 27, 26]


New level: 8
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 28, 27, 26]


Before reduction : 
 pending  : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 28, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 2, 3, 36, 38, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 27, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 27, 26]


Solution : [4, 9, 10, 25, 28, 27, 26] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 10, 25, 28, 27, 26]

After backtrack at level 8
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 28, 27, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 28, 27]


Before reduction : 
 pending  : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 28, 27]

Essensial at level 8 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 38, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 27, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 27, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 27, 2]


Solution : [4, 9, 10, 25, 28, 27, 2] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 10, 25, 28, 27, 2]

After backtrack at level 8
 pending : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 27]


Before backtrack at level 7
 pending : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 28, 27]

After backtrack at level 7
 pending : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 28]


Before reduction : 
 pending  : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 28]


Solution : [4, 9, 10, 25, 28] has cost 22.


Decide in level 7 among pending : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 28, 2]


New level: 8
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 28, 2]


Before reduction : 
 pending  : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 28, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 2]


Solution : [4, 9, 10, 25, 28, 2] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 10, 25, 28, 2]

After backtrack at level 8
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 28, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 28]


Before reduction : 
 pending  : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 28]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 28, 26]


Solution : [4, 9, 10, 25, 28, 26] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 10, 25, 28, 26]

After backtrack at level 8
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37]
 solution : [4, 9, 10, 25, 28]


Before backtrack at level 7
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37]
 solution : [4, 9, 10, 25, 28]

After backtrack at level 7
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2]
 solution : [4, 9, 10, 25, 28]


Before backtrack at level 6
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2]
 solution : [4, 9, 10, 25, 28]

After backtrack at level 6
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27]
 solution : [4, 9, 10, 25, 28]


Before backtrack at level 5
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27]
 solution : [4, 9, 10, 25, 28]

After backtrack at level 5
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 34]
 solution : [4, 9, 10, 25, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 34]
 solution : [4, 9, 10, 25]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 34]
 solution : [4, 9, 10, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 34]
 solution : [4, 9, 10, 25]


Solution : [4, 9, 10, 25] has cost 18.


Decide in level 5 among pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27]
 solution : [4, 9, 10, 25, 34]


New level: 6
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27]
 solution : [4, 9, 10, 25, 34]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27]
 solution : [4, 9, 10, 25, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : {35, 37, 31}

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27]
 solution : [4, 9, 10, 25, 34]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27]
 solution : [4, 9, 10, 25, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27]
 solution : [4, 9, 10, 25, 34]


Solution : [4, 9, 10, 25, 34] has cost 31.


Before backtrack at level 6
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27]
 solution : [4, 9, 10, 25, 34]

After backtrack at level 6
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 37]
 solution : [4, 9, 10, 25, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 37]
 solution : [4, 9, 10, 25]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 37]
 solution : [4, 9, 10, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 37]
 solution : [4, 9, 10, 25]


Solution : [4, 9, 10, 25] has cost 18.


Decide in level 6 among pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 37]
 solution : [4, 9, 10, 25, 27]


New level: 7
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 37]
 solution : [4, 9, 10, 25, 27]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 37]
 solution : [4, 9, 10, 25, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {35, 37, 31}

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 27]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 27]


Solution : [4, 9, 10, 25, 27] has cost 25.


Decide in level 7 among pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 27, 26]


New level: 8
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 27, 26]


Before reduction : 
 pending  : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 2, 3, 36, 38, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 27, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 27, 26]


Solution : [4, 9, 10, 25, 27, 26] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 10, 25, 27, 26]

After backtrack at level 8
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 27, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 27]


Before reduction : 
 pending  : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2]
 solution : [4, 9, 10, 25, 27]

Essensial at level 8 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 38, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 27, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 27, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 27, 2]


Solution : [4, 9, 10, 25, 27, 2] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 10, 25, 27, 2]

After backtrack at level 8
 pending : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 27]


Before backtrack at level 7
 pending : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 25, 27]

After backtrack at level 7
 pending : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25]


Before reduction : 
 pending  : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25]


Solution : [4, 9, 10, 25] has cost 18.


Decide in level 7 among pending : [2, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 2]


New level: 8
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 2]


Before reduction : 
 pending  : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 2]


Solution : [4, 9, 10, 25, 2] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 10, 25, 2]

After backtrack at level 8
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25]


Before reduction : 
 pending  : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 26]
 solution : [4, 9, 10, 25]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 25, 26]


Solution : [4, 9, 10, 25, 26] has cost 25.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 10, 25, 26]

After backtrack at level 8
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37]
 solution : [4, 9, 10, 25]


Before backtrack at level 7
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37]
 solution : [4, 9, 10, 25]

After backtrack at level 7
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2]
 solution : [4, 9, 10, 25]


Before backtrack at level 6
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2]
 solution : [4, 9, 10, 25]

After backtrack at level 6
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27]
 solution : [4, 9, 10, 25]


Before backtrack at level 5
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27]
 solution : [4, 9, 10, 25]

After backtrack at level 5
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 34]
 solution : [4, 9, 10, 25]


Before backtrack at level 4
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 34]
 solution : [4, 9, 10, 25]

After backtrack at level 4
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 34, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28]
 solution : [4, 9, 10, 25]


Invert decision for 25 at level 3


New level: 4
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 34, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28]
 solution : [4, 9, 10]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 34, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28]
 solution : [4, 9, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 34, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28]
 solution : [4, 9, 10]


Solution : [4, 9, 10] has cost 14.


Decide in level 4 among pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 34, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 34 with phase True at level 4

After decision at level 4
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28]
 solution : [4, 9, 10, 34]


New level: 5
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28]
 solution : [4, 9, 10, 34]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 31, 35, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28]
 solution : [4, 9, 10, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 8192), (28, 524288), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 2048), (34, -1), (35, 0), (36, 16777216), (37, 4096), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : {35, 31}

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28]
 solution : [4, 9, 10, 34]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28]
 solution : [4, 9, 10, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 8192), (28, 524288), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 2048), (34, -1), (35, 0), (36, 16777216), (37, 4096), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 8192), (28, 524288), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 4096), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28]
 solution : [4, 9, 10, 34]


Solution : [4, 9, 10, 34] has cost 27.


Before backtrack at level 5
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28]
 solution : [4, 9, 10, 34]

After backtrack at level 5
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28, 31, 35]
 solution : [4, 9, 10, 34]


Invert decision for 34 at level 4


New level: 5
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28, 31, 35]
 solution : [4, 9, 10]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28, 31, 35]
 solution : [4, 9, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 8192), (28, 524288), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 4096), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28, 31, 35]
 solution : [4, 9, 10]


Solution : [4, 9, 10] has cost 14.


Decide in level 5 among pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 28, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 31, 35]
 solution : [4, 9, 10, 28]


New level: 6
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 31, 35]
 solution : [4, 9, 10, 28]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 31, 35]
 solution : [4, 9, 10, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 31, 35]
 solution : [4, 9, 10, 28]


Solution : [4, 9, 10, 28] has cost 18.


Decide in level 6 among pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 39, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 21 with phase True at level 6

After decision at level 6
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39, 31, 35]
 solution : [4, 9, 10, 28, 21]


New level: 7
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39, 31, 35]
 solution : [4, 9, 10, 28, 21]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39, 31, 35]
 solution : [4, 9, 10, 28, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24}

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 31, 35]
 solution : [4, 9, 10, 28, 21]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 31, 35]
 solution : [4, 9, 10, 28, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 31, 35]
 solution : [4, 9, 10, 28, 21]


Solution : [4, 9, 10, 28, 21] has cost 25.


Before backtrack at level 7
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 31, 35]
 solution : [4, 9, 10, 28, 21]

After backtrack at level 7
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 21]


Invert decision for 21 at level 6


New level: 7
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28]


Solution : [4, 9, 10, 28] has cost 18.


Decide in level 7 among pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 37, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 37 with phase True at level 7

After decision at level 7
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 37]


New level: 8
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 37]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 37]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 67108864), (28, -1), (29, 524288), (30, -1), (31, 262144), (32, -1), (33, 8192), (34, -1), (35, 2048), (36, 67108864), (37, -1), (38, 16777216), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 37]


Solution : [4, 9, 10, 28, 37] has cost 32.


Before backtrack at level 8
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 37]

After backtrack at level 8
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 37]


Invert decision for 37 at level 7


New level: 8
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 67108864), (28, -1), (29, 524288), (30, -1), (31, 262144), (32, -1), (33, 8192), (34, -1), (35, 2048), (36, 67108864), (37, -1), (38, 16777216), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28]


Solution : [4, 9, 10, 28] has cost 18.


Decide in level 8 among pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 27, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 27]


New level: 9
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 27]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 2048), (34, -1), (35, 0), (36, 33554432), (37, -1), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {35, 31}

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 27]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 2048), (34, -1), (35, 0), (36, 33554432), (37, -1), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 27]


Solution : [4, 9, 10, 28, 27] has cost 25.


Before backtrack at level 9
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39]
 solution : [4, 9, 10, 28, 27]

After backtrack at level 9
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39, 31, 35]
 solution : [4, 9, 10, 28, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39, 31, 35]
 solution : [4, 9, 10, 28]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39, 31, 35]
 solution : [4, 9, 10, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39, 31, 35]
 solution : [4, 9, 10, 28]


Solution : [4, 9, 10, 28] has cost 18.


Decide in level 9 among pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24, 39, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39, 31, 35]
 solution : [4, 9, 10, 28, 22]


New level: 10
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39, 31, 35]
 solution : [4, 9, 10, 28, 22]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39, 31, 35]
 solution : [4, 9, 10, 28, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, -1), (38, 33554432), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 24}

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35]
 solution : [4, 9, 10, 28, 22]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35]
 solution : [4, 9, 10, 28, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, -1), (38, 33554432), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35]
 solution : [4, 9, 10, 28, 22]


Solution : [4, 9, 10, 28, 22] has cost 25.


Before backtrack at level 10
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35]
 solution : [4, 9, 10, 28, 22]

After backtrack at level 10
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28]


Before reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28]


Solution : [4, 9, 10, 28] has cost 18.


Decide in level 10 among pending : [26, 3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 26]


New level: 11
 pending : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 26]


Before reduction : 
 pending  : [3, 29, 33, 36, 38, 40, 42, 43, 47, 48, 51, 2, 31, 35, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 262144), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 2, 3, 36, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : [38, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 26]


Before reduction : 
 pending  : [38, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 262144), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 26]


Solution : [4, 9, 10, 28, 26] has cost 25.


Before backtrack at level 11
 pending : [38, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 26]

After backtrack at level 11
 pending : [38, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 2, 31, 35]
 solution : [4, 9, 10, 28, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [38, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 2, 31, 35]
 solution : [4, 9, 10, 28]


Before reduction : 
 pending  : [38, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 2, 31, 35]
 solution : [4, 9, 10, 28]

Essensial at level 11 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 32768), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 36, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : [38, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 2]


Before reduction : 
 pending  : [38, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 32768), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 2]


Solution : [4, 9, 10, 28, 2] has cost 22.


Decide in level 11 among pending : [38, 8, 13, 14, 15, 16, 18, 19, 20, 24, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [38, 8, 13, 14, 15, 16, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 2, 18]


New level: 12
 pending : [38, 8, 13, 14, 15, 16, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 2, 18]


Before reduction : 
 pending  : [38, 8, 13, 14, 15, 16, 19, 20, 24, 39]
 solution : [4, 9, 10, 28, 2, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {8, 19, 20, 14}

After reduction : 
 pending  : [38, 13, 15, 16, 24, 39]
 solution : [4, 9, 10, 28, 2, 18]


Before reduction : 
 pending  : [38, 13, 15, 16, 24, 39]
 solution : [4, 9, 10, 28, 2, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 13, 15, 16, 24, 39]
 solution : [4, 9, 10, 28, 2, 18]


Solution : [4, 9, 10, 28, 2, 18] has cost 31.


Before backtrack at level 12
 pending : [38, 13, 15, 16, 24, 39]
 solution : [4, 9, 10, 28, 2, 18]

After backtrack at level 12
 pending : [38, 13, 15, 16, 24, 39, 8, 14, 19, 20]
 solution : [4, 9, 10, 28, 2, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [38, 13, 15, 16, 24, 39, 8, 14, 19, 20]
 solution : [4, 9, 10, 28, 2]


Before reduction : 
 pending  : [38, 13, 15, 16, 24, 39, 8, 14, 19, 20]
 solution : [4, 9, 10, 28, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 13, 15, 16, 24, 39, 8, 14, 19, 20]
 solution : [4, 9, 10, 28, 2]


Solution : [4, 9, 10, 28, 2] has cost 22.


Decide in level 12 among pending : [38, 13, 15, 16, 24, 39, 8, 14, 19, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 15, 16, 24, 39, 8, 14, 19, 20]
 solution : [4, 9, 10, 28, 2, 13]


New level: 13
 pending : [38, 15, 16, 24, 39, 8, 14, 19, 20]
 solution : [4, 9, 10, 28, 2, 13]


Before reduction : 
 pending  : [38, 15, 16, 24, 39, 8, 14, 19, 20]
 solution : [4, 9, 10, 28, 2, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 524288), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 24, 39, 8, 19, 20]
 solution : [4, 9, 10, 28, 2, 13]


Before reduction : 
 pending  : [38, 24, 39, 8, 19, 20]
 solution : [4, 9, 10, 28, 2, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 524288), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 524288), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 19, 20]
 solution : [4, 9, 10, 28, 2, 13]


Solution : [4, 9, 10, 28, 2, 13] has cost 29.


Before backtrack at level 13
 pending : [38, 24, 39, 8, 19, 20]
 solution : [4, 9, 10, 28, 2, 13]

After backtrack at level 13
 pending : [38, 24, 39, 8, 19, 20, 15, 16, 14]
 solution : [4, 9, 10, 28, 2, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 24, 39, 8, 19, 20, 15, 16, 14]
 solution : [4, 9, 10, 28, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 19, 20, 15, 16, 14]
 solution : [4, 9, 10, 28, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 524288), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 19, 20, 15, 16, 14]
 solution : [4, 9, 10, 28, 2]


Solution : [4, 9, 10, 28, 2] has cost 22.


Decide in level 13 among pending : [38, 24, 39, 8, 19, 20, 15, 16, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [38, 24, 39, 8, 20, 15, 16, 14]
 solution : [4, 9, 10, 28, 2, 19]


New level: 14
 pending : [38, 24, 39, 8, 20, 15, 16, 14]
 solution : [4, 9, 10, 28, 2, 19]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 15, 16, 14]
 solution : [4, 9, 10, 28, 2, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {8, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 15, 16]
 solution : [4, 9, 10, 28, 2, 19]


Before reduction : 
 pending  : [38, 24, 39, 15, 16]
 solution : [4, 9, 10, 28, 2, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 15, 16]
 solution : [4, 9, 10, 28, 2, 19]


Solution : [4, 9, 10, 28, 2, 19] has cost 31.


Before backtrack at level 14
 pending : [38, 24, 39, 15, 16]
 solution : [4, 9, 10, 28, 2, 19]

After backtrack at level 14
 pending : [38, 24, 39, 15, 16, 8, 20, 14]
 solution : [4, 9, 10, 28, 2, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [38, 24, 39, 15, 16, 8, 20, 14]
 solution : [4, 9, 10, 28, 2]


Before reduction : 
 pending  : [38, 24, 39, 15, 16, 8, 20, 14]
 solution : [4, 9, 10, 28, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 15, 16, 8, 20, 14]
 solution : [4, 9, 10, 28, 2]


Solution : [4, 9, 10, 28, 2] has cost 22.


Decide in level 14 among pending : [38, 24, 39, 15, 16, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 10, 28, 2, 15]


New level: 15
 pending : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 10, 28, 2, 15]


Before reduction : 
 pending  : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 10, 28, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 14}

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 10, 28, 2, 15]


Before reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 10, 28, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 10, 28, 2, 15]


Solution : [4, 9, 10, 28, 2, 15] has cost 29.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20]
 solution : [4, 9, 10, 28, 2, 15]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 10, 28, 2, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 10, 28, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 10, 28, 2]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 10, 28, 2, 16]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 10, 28, 2, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 10, 28, 2, 16]


Solution : [4, 9, 10, 28, 2, 16] has cost 29.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 10, 28, 2, 16]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14, 16]
 solution : [4, 9, 10, 28, 2]


Before backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16]
 solution : [4, 9, 10, 28, 2]

After backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16, 15]
 solution : [4, 9, 10, 28, 2]


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 15]
 solution : [4, 9, 10, 28, 2]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 9, 10, 28, 2]


Before backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 9, 10, 28, 2]

After backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 10, 28, 2]


Before backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 10, 28, 2]

After backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18]
 solution : [4, 9, 10, 28]


Before backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18]
 solution : [4, 9, 10, 28]

After backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26]
 solution : [4, 9, 10, 28]


Before backtrack at level 9
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26]
 solution : [4, 9, 10, 28]

After backtrack at level 9
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22]
 solution : [4, 9, 10, 28]


Before backtrack at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22]
 solution : [4, 9, 10, 28]

After backtrack at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22, 27]
 solution : [4, 9, 10, 28]


Before backtrack at level 7
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22, 27]
 solution : [4, 9, 10, 28]

After backtrack at level 7
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22, 27, 37]
 solution : [4, 9, 10, 28]


Before backtrack at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22, 27, 37]
 solution : [4, 9, 10, 28]

After backtrack at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22, 27, 37, 21]
 solution : [4, 9, 10, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22, 27, 37, 21]
 solution : [4, 9, 10]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22, 27, 37, 21]
 solution : [4, 9, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22, 27, 37, 21]
 solution : [4, 9, 10]


Solution : [4, 9, 10] has cost 14.


Decide in level 6 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22, 27, 37, 21]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22, 37, 21]
 solution : [4, 9, 10, 27]


New level: 7
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22, 37, 21]
 solution : [4, 9, 10, 27]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 31, 35, 18, 26, 22, 37, 21]
 solution : [4, 9, 10, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 2048), (34, -1), (35, 0), (36, 33554432), (37, 512), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : {35, 31}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 18, 26, 22, 37, 21]
 solution : [4, 9, 10, 27]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 18, 26, 22, 37, 21]
 solution : [4, 9, 10, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 2048), (34, -1), (35, 0), (36, 33554432), (37, 512), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 18, 26, 22, 37, 21]
 solution : [4, 9, 10, 27]


Solution : [4, 9, 10, 27] has cost 21.


Decide in level 7 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 18, 26, 22, 37, 21]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 21 with phase True at level 7

After decision at level 7
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 18, 26, 22, 37]
 solution : [4, 9, 10, 27, 21]


New level: 8
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 18, 26, 22, 37]
 solution : [4, 9, 10, 27, 21]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 18, 26, 22, 37]
 solution : [4, 9, 10, 27, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 0), (38, 512), (39, 0), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {37, 39, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24}

After reduction : 
 pending  : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26]
 solution : [4, 9, 10, 27, 21]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26]
 solution : [4, 9, 10, 27, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 0), (38, 512), (39, 0), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26]
 solution : [4, 9, 10, 27, 21]


Solution : [4, 9, 10, 27, 21] has cost 28.


Before backtrack at level 8
 pending : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26]
 solution : [4, 9, 10, 27, 21]

After backtrack at level 8
 pending : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 37]
 solution : [4, 9, 10, 27, 21]


Invert decision for 21 at level 7


New level: 8
 pending : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 37]
 solution : [4, 9, 10, 27]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 37]
 solution : [4, 9, 10, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 37]
 solution : [4, 9, 10, 27]


Solution : [4, 9, 10, 27] has cost 21.


Decide in level 8 among pending : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 37]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 22]


New level: 9
 pending : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 22]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 0), (38, 512), (39, 0), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {37, 39, 8, 13, 14, 15, 16, 18, 19, 20, 24}

After reduction : 
 pending  : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26]
 solution : [4, 9, 10, 27, 22]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26]
 solution : [4, 9, 10, 27, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 0), (38, 512), (39, 0), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26]
 solution : [4, 9, 10, 27, 22]


Solution : [4, 9, 10, 27, 22] has cost 28.


Before backtrack at level 9
 pending : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26]
 solution : [4, 9, 10, 27, 22]

After backtrack at level 9
 pending : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27]


Solution : [4, 9, 10, 27] has cost 21.


Decide in level 9 among pending : [38, 2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 38 with phase True at level 9

After decision at level 9
 pending : [2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 38]


New level: 10
 pending : [2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 38]


Before reduction : 
 pending  : [2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, 33554432), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 33554432), (37, 0), (38, -1), (39, 131072), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {37}

After reduction : 
 pending  : [2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 10, 27, 38]


Before reduction : 
 pending  : [2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 10, 27, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 33554432), (37, 0), (38, -1), (39, 131072), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 131072), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 10, 27, 38]


Solution : [4, 9, 10, 27, 38] has cost 39.


Before backtrack at level 10
 pending : [2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 10, 27, 38]

After backtrack at level 10
 pending : [2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 38]


Invert decision for 38 at level 9


New level: 10
 pending : [2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27]


Before reduction : 
 pending  : [2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 131072), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, -1), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27]


Solution : [4, 9, 10, 27] has cost 21.


Decide in level 10 among pending : [2, 3, 29, 33, 36, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, -1), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 36 with phase True at level 10

After decision at level 10
 pending : [2, 3, 29, 33, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 36]


New level: 11
 pending : [2, 3, 29, 33, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 36]


Before reduction : 
 pending  : [2, 3, 29, 33, 40, 42, 43, 47, 48, 51, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 36]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 33554432), (37, 512), (38, -1), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 2048), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 36]


Before reduction : 
 pending  : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 36]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 2048), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 36]


Solution : [4, 9, 10, 27, 36] has cost 39.


Before backtrack at level 11
 pending : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 36]

After backtrack at level 11
 pending : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 27, 36]


Invert decision for 36 at level 10


New level: 11
 pending : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 27]


Before reduction : 
 pending  : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 2048), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 40, 42, 43, 47, 48, 51]
 solution : [4, 9, 10, 27]


Solution : [4, 9, 10, 27] has cost 21.


Decide in level 11 among pending : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 40, 42, 43, 47, 48, 51]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 51 with phase True at level 11

After decision at level 11
 pending : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 40, 42, 43, 47, 48]
 solution : [4, 9, 10, 27, 51]


New level: 12
 pending : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 40, 42, 43, 47, 48]
 solution : [4, 9, 10, 27, 51]


Before reduction : 
 pending  : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 40, 42, 43, 47, 48]
 solution : [4, 9, 10, 27, 51]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 2048), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 2048), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {40, 48, 42, 43}

After reduction : 
 pending  : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 47]
 solution : [4, 9, 10, 27, 51]


Before reduction : 
 pending  : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 47]
 solution : [4, 9, 10, 27, 51]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 2048), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 2048), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 2048), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, 2048), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 47]
 solution : [4, 9, 10, 27, 51]


Solution : [4, 9, 10, 27, 51] has cost 52.


Before backtrack at level 12
 pending : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 47]
 solution : [4, 9, 10, 27, 51]

After backtrack at level 12
 pending : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 10, 27, 51]


Invert decision for 51 at level 11


New level: 12
 pending : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 10, 27]


Before reduction : 
 pending  : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 10, 27]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 2048), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, 2048), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 10, 27]


Solution : [4, 9, 10, 27] has cost 21.


Decide in level 12 among pending : [2, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 47, 40, 42, 43, 48]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 2 with phase True at level 12

After decision at level 12
 pending : [26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 10, 27, 2]


New level: 13
 pending : [26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 10, 27, 2]


Before reduction : 
 pending  : [26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 10, 27, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {33, 3, 40, 42, 43, 47, 48, 26, 29}

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 2]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 2]


Solution : [4, 9, 10, 27, 2] has cost 25.


Before backtrack at level 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 2]

After backtrack at level 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 10, 27, 2]


Invert decision for 2 at level 12


New level: 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 10, 27]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 10, 27]

Essensial at level 13 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {33, 3, 40, 42, 43, 47, 48, 29}

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 26]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 26]


Solution : [4, 9, 10, 27, 26] has cost 28.


Before backtrack at level 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37]
 solution : [4, 9, 10, 27, 26]

After backtrack at level 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 10, 27]


Before backtrack at level 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 10, 27]

After backtrack at level 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2]
 solution : [4, 9, 10, 27]


Before backtrack at level 11
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2]
 solution : [4, 9, 10, 27]

After backtrack at level 11
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51]
 solution : [4, 9, 10, 27]


Before backtrack at level 10
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51]
 solution : [4, 9, 10, 27]

After backtrack at level 10
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36]
 solution : [4, 9, 10, 27]


Before backtrack at level 9
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36]
 solution : [4, 9, 10, 27]

After backtrack at level 9
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38]
 solution : [4, 9, 10, 27]


Before backtrack at level 8
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38]
 solution : [4, 9, 10, 27]

After backtrack at level 8
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 22]
 solution : [4, 9, 10, 27]


Before backtrack at level 7
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 22]
 solution : [4, 9, 10, 27]

After backtrack at level 7
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 22, 31, 35, 21]
 solution : [4, 9, 10, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 22, 31, 35, 21]
 solution : [4, 9, 10]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 22, 31, 35, 21]
 solution : [4, 9, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 22, 31, 35, 21]
 solution : [4, 9, 10]


Solution : [4, 9, 10] has cost 14.


Decide in level 7 among pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 22, 31, 35, 21]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 21 with phase True at level 7

After decision at level 7
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 22, 31, 35]
 solution : [4, 9, 10, 21]


New level: 8
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 22, 31, 35]
 solution : [4, 9, 10, 21]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 22, 31, 35]
 solution : [4, 9, 10, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, 268435456), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24}

After reduction : 
 pending  : [37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 21]


Before reduction : 
 pending  : [37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 21]


Solution : [4, 9, 10, 21] has cost 21.


Decide in level 8 among pending : [37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [37, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 21, 26]


New level: 9
 pending : [37, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 21, 26]


Before reduction : 
 pending  : [37, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 21, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 2, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 21, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 21, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 21, 26]


Solution : [4, 9, 10, 21, 26] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [4, 9, 10, 21, 26]

After backtrack at level 9
 pending : [37, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 21, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [37, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 21]


Before reduction : 
 pending  : [37, 3, 29, 33, 47, 40, 42, 43, 48, 2, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 21]

Essensial at level 9 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 21, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 21, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 21, 2]


Solution : [4, 9, 10, 21, 2] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [4, 9, 10, 21, 2]

After backtrack at level 9
 pending : [2, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 21]


Before backtrack at level 8
 pending : [2, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 21]

After backtrack at level 8
 pending : [2, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10, 21]


Invert decision for 21 at level 7


New level: 8
 pending : [2, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10]


Before reduction : 
 pending  : [2, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10]


Solution : [4, 9, 10] has cost 14.


Decide in level 8 among pending : [2, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 37 with phase True at level 8

After decision at level 8
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10, 37]


New level: 9
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10, 37]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10, 37]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 16777216), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10, 37]


Solution : [4, 9, 10, 37] has cost 28.


Before backtrack at level 9
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10, 37]

After backtrack at level 9
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10, 37]


Invert decision for 37 at level 8


New level: 9
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 16777216), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 10]


Solution : [4, 9, 10] has cost 14.


Decide in level 9 among pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 10, 22]


New level: 10
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 10, 22]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 10, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, 134217728), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, -1), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 24}

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 26]
 solution : [4, 9, 10, 22]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 26]
 solution : [4, 9, 10, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, -1), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 26]
 solution : [4, 9, 10, 22]


Solution : [4, 9, 10, 22] has cost 21.


Decide in level 10 among pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 26]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 2 with phase True at level 10

After decision at level 10
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 26]
 solution : [4, 9, 10, 22, 2]


New level: 11
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 26]
 solution : [4, 9, 10, 22, 2]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 26]
 solution : [4, 9, 10, 22, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 36, 35, 38, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 22, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 22, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 22, 2]


Solution : [4, 9, 10, 22, 2] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [4, 9, 10, 22, 2]

After backtrack at level 11
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 26]
 solution : [4, 9, 10, 22, 2]


Invert decision for 2 at level 10


New level: 11
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 26]
 solution : [4, 9, 10, 22]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 26]
 solution : [4, 9, 10, 22]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 36, 35, 38, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 10, 22, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 10, 22, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 10, 22, 26]


Solution : [4, 9, 10, 22, 26] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [4, 9, 10, 22, 26]

After backtrack at level 11
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 22]


Before backtrack at level 10
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35]
 solution : [4, 9, 10, 22]

After backtrack at level 10
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 2]
 solution : [4, 9, 10, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 2]
 solution : [4, 9, 10]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 2]
 solution : [4, 9, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 2]
 solution : [4, 9, 10]


Solution : [4, 9, 10] has cost 14.


Decide in level 10 among pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 2]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 2]
 solution : [4, 9, 10, 26]


New level: 11
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 2]
 solution : [4, 9, 10, 26]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 2]
 solution : [4, 9, 10, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 65536), (15, 1048576), (16, 32768), (17, -1), (18, 8388608), (19, 4194304), (20, 139264), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 33554432), (39, 524288), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 65536), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 2, 3, 36, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 10, 26]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 10, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 65536), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 10, 26]


Solution : [4, 9, 10, 26] has cost 21.


Decide in level 11 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 10, 26, 18]


New level: 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 10, 26, 18]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 10, 26, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {8, 19, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 10, 26, 18]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 10, 26, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 10, 26, 18]


Solution : [4, 9, 10, 26, 18] has cost 30.


Before backtrack at level 12
 pending : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 10, 26, 18]

After backtrack at level 12
 pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 10, 26, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 10, 26]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 10, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 10, 26]


Solution : [4, 9, 10, 26] has cost 21.


Decide in level 12 among pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 10, 26, 13]


New level: 13
 pending : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 10, 26, 13]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 10, 26, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 524288), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 10, 26, 13]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 10, 26, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 524288), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 524288), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 10, 26, 13]


Solution : [4, 9, 10, 26, 13] has cost 28.


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 10, 26, 13]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 10, 26, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 10, 26]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 10, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 524288), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 10, 26]


Solution : [4, 9, 10, 26] has cost 21.


Decide in level 13 among pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 9, 10, 26, 19]


New level: 14
 pending : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 9, 10, 26, 19]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 9, 10, 26, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {8, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 9, 10, 26, 19]


Before reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 9, 10, 26, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 9, 10, 26, 19]


Solution : [4, 9, 10, 26, 19] has cost 30.


Before backtrack at level 14
 pending : [38, 24, 39, 16, 15]
 solution : [4, 9, 10, 26, 19]

After backtrack at level 14
 pending : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 10, 26, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 10, 26]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 10, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 10, 26]


Solution : [4, 9, 10, 26] has cost 21.


Decide in level 14 among pending : [38, 24, 39, 16, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 10, 26, 15]


New level: 15
 pending : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 10, 26, 15]


Before reduction : 
 pending  : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 10, 26, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 14}

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 10, 26, 15]


Before reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 10, 26, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 10, 26, 15]


Solution : [4, 9, 10, 26, 15] has cost 28.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20]
 solution : [4, 9, 10, 26, 15]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 10, 26, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 10, 26]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 10, 26]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 10, 26, 16]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 10, 26, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 10, 26, 16]


Solution : [4, 9, 10, 26, 16] has cost 28.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 10, 26, 16]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14, 16]
 solution : [4, 9, 10, 26]


Before backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16]
 solution : [4, 9, 10, 26]

After backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16, 15]
 solution : [4, 9, 10, 26]


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 15]
 solution : [4, 9, 10, 26]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 9, 10, 26]


Before backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 9, 10, 26]

After backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 10, 26]


Before backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 10, 26]

After backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 18]
 solution : [4, 9, 10, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 18]
 solution : [4, 9, 10]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 18]
 solution : [4, 9, 10]

Essensial at level 11 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 32768), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 36, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 10, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 10, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 32768), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 10, 2]


Solution : [4, 9, 10, 2] has cost 18.


Decide in level 11 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 10, 2, 18]


New level: 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 10, 2, 18]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 10, 2, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, 4194304), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {8, 19, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 10, 2, 18]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 10, 2, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, 0), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 10, 2, 18]


Solution : [4, 9, 10, 2, 18] has cost 27.


Before backtrack at level 12
 pending : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 10, 2, 18]

After backtrack at level 12
 pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 10, 2, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 10, 2]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 10, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 32768), (14, -1), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 10, 2]


Solution : [4, 9, 10, 2] has cost 18.


Decide in level 12 among pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 10, 2, 13]


New level: 13
 pending : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 10, 2, 13]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 10, 2, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, 2097152), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 524288), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 10, 2, 13]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 10, 2, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 524288), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 524288), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 10, 2, 13]


Solution : [4, 9, 10, 2, 13] has cost 25.


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 10, 2, 13]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 10, 2, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 10, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 10, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 524288), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 10, 2]


Solution : [4, 9, 10, 2] has cost 18.


Decide in level 13 among pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 9, 10, 2, 19]


New level: 14
 pending : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 9, 10, 2, 19]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 9, 10, 2, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, 2097152), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {8, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 9, 10, 2, 19]


Before reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 9, 10, 2, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 9, 10, 2, 19]


Solution : [4, 9, 10, 2, 19] has cost 27.


Before backtrack at level 14
 pending : [38, 24, 39, 16, 15]
 solution : [4, 9, 10, 2, 19]

After backtrack at level 14
 pending : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 10, 2, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 10, 2]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 10, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 8192), (16, 8192), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 10, 2]


Solution : [4, 9, 10, 2] has cost 18.


Decide in level 14 among pending : [38, 24, 39, 16, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 10, 2, 15]


New level: 15
 pending : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 10, 2, 15]


Before reduction : 
 pending  : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 10, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, 1048576), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 14}

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 10, 2, 15]


Before reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 10, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 10, 2, 15]


Solution : [4, 9, 10, 2, 15] has cost 25.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20]
 solution : [4, 9, 10, 2, 15]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 10, 2, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 10, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 10, 2]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 32768), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 33280), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 10, 2, 16]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 10, 2, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 10, 2, 16]


Solution : [4, 9, 10, 2, 16] has cost 25.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 10, 2, 16]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14, 16]
 solution : [4, 9, 10, 2]


Before backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16]
 solution : [4, 9, 10, 2]

After backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16, 15]
 solution : [4, 9, 10, 2]


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 15]
 solution : [4, 9, 10, 2]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 9, 10, 2]


Before backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 9, 10, 2]

After backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 10, 2]


Before backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 10, 2]

After backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18]
 solution : [4, 9, 10]


Before backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18]
 solution : [4, 9, 10]

After backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26]
 solution : [4, 9, 10]


Before backtrack at level 9
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26]
 solution : [4, 9, 10]

After backtrack at level 9
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22]
 solution : [4, 9, 10]


Before backtrack at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22]
 solution : [4, 9, 10]

After backtrack at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37]
 solution : [4, 9, 10]


Before backtrack at level 7
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37]
 solution : [4, 9, 10]

After backtrack at level 7
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21]
 solution : [4, 9, 10]


Before backtrack at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21]
 solution : [4, 9, 10]

After backtrack at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27]
 solution : [4, 9, 10]


Before backtrack at level 5
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27]
 solution : [4, 9, 10]

After backtrack at level 5
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 28]
 solution : [4, 9, 10]


Before backtrack at level 4
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 28]
 solution : [4, 9, 10]

After backtrack at level 4
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 28, 34]
 solution : [4, 9, 10]


Before backtrack at level 3
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 28, 34]
 solution : [4, 9, 10]

After backtrack at level 3
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 28, 34, 25]
 solution : [4, 9, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 28, 34, 25]
 solution : [4, 9]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 28, 34, 25]
 solution : [4, 9]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16384), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 67584), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 28, 34, 25]
 solution : [4, 9]


Solution : [4, 9] has cost 11.


Decide in level 3 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 28, 34, 25]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 34, 25]
 solution : [4, 9, 28]


New level: 4
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 34, 25]
 solution : [4, 9, 28]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 34, 25]
 solution : [4, 9, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 34, 25]
 solution : [4, 9, 28]


Solution : [4, 9, 28] has cost 15.


Decide in level 4 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 34, 25]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 34 with phase True at level 4

After decision at level 4
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 25]
 solution : [4, 9, 28, 34]


New level: 5
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 25]
 solution : [4, 9, 28, 34]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 22, 37, 21, 27, 25]
 solution : [4, 9, 28, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 33554432), (37, 4096), (38, 67108864), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {35, 31}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 22, 37, 21, 27, 25]
 solution : [4, 9, 28, 34]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 22, 37, 21, 27, 25]
 solution : [4, 9, 28, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 33554432), (37, 4096), (38, 67108864), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 4096), (38, 67108864), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 22, 37, 21, 27, 25]
 solution : [4, 9, 28, 34]


Solution : [4, 9, 28, 34] has cost 28.


Before backtrack at level 5
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 22, 37, 21, 27, 25]
 solution : [4, 9, 28, 34]

After backtrack at level 5
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 22, 37, 21, 27, 25, 31, 35]
 solution : [4, 9, 28, 34]


Invert decision for 34 at level 4


New level: 5
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 22, 37, 21, 27, 25, 31, 35]
 solution : [4, 9, 28]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 22, 37, 21, 27, 25, 31, 35]
 solution : [4, 9, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 4096), (38, 67108864), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 22, 37, 21, 27, 25, 31, 35]
 solution : [4, 9, 28]


Solution : [4, 9, 28] has cost 15.


Decide in level 5 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 22, 37, 21, 27, 25, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 25 with phase True at level 5

After decision at level 5
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 22, 37, 21, 27, 31, 35]
 solution : [4, 9, 28, 25]


New level: 6
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 22, 37, 21, 27, 31, 35]
 solution : [4, 9, 28, 25]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 22, 37, 21, 27, 31, 35]
 solution : [4, 9, 28, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24}

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 27, 31, 35]
 solution : [4, 9, 28, 25]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 27, 31, 35]
 solution : [4, 9, 28, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 27, 31, 35]
 solution : [4, 9, 28, 25]


Solution : [4, 9, 28, 25] has cost 19.


Decide in level 6 among pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 27, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25, 27]


New level: 7
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25, 27]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 33554432), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {35, 37, 31}

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 9, 28, 25, 27]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 9, 28, 25, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 33554432), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 9, 28, 25, 27]


Solution : [4, 9, 28, 25, 27] has cost 26.


Before backtrack at level 7
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 9, 28, 25, 27]

After backtrack at level 7
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25]


Solution : [4, 9, 28, 25] has cost 19.


Decide in level 7 among pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25, 2]


New level: 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25, 2]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 28, 25, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 28, 25, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 28, 25, 2]


Solution : [4, 9, 28, 25, 2] has cost 23.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 28, 25, 2]

After backtrack at level 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 9, 28, 25]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 28, 25, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 28, 25, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 28, 25, 26]


Solution : [4, 9, 28, 25, 26] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 28, 25, 26]

After backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35]
 solution : [4, 9, 28, 25]


Before backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35]
 solution : [4, 9, 28, 25]

After backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2]
 solution : [4, 9, 28, 25]


Before backtrack at level 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2]
 solution : [4, 9, 28, 25]

After backtrack at level 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 27]
 solution : [4, 9, 28, 25]


Invert decision for 25 at level 5


New level: 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 27]
 solution : [4, 9, 28]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 27]
 solution : [4, 9, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 27]
 solution : [4, 9, 28]


Solution : [4, 9, 28] has cost 15.


Decide in level 6 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 27]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 21 with phase True at level 6

After decision at level 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 27]
 solution : [4, 9, 28, 21]


New level: 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 27]
 solution : [4, 9, 28, 21]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 27]
 solution : [4, 9, 28, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24}

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27]
 solution : [4, 9, 28, 21]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27]
 solution : [4, 9, 28, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27]
 solution : [4, 9, 28, 21]


Solution : [4, 9, 28, 21] has cost 22.


Decide in level 7 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 7

After decision at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2]
 solution : [4, 9, 28, 21, 27]


New level: 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2]
 solution : [4, 9, 28, 21, 27]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2]
 solution : [4, 9, 28, 21, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 33554432), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : {35, 37, 31}

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 9, 28, 21, 27]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 9, 28, 21, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 33554432), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 9, 28, 21, 27]


Solution : [4, 9, 28, 21, 27] has cost 29.


Before backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 9, 28, 21, 27]

After backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 37, 31, 35]
 solution : [4, 9, 28, 21, 27]


Invert decision for 27 at level 7


New level: 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 37, 31, 35]
 solution : [4, 9, 28, 21]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 37, 31, 35]
 solution : [4, 9, 28, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 37, 31, 35]
 solution : [4, 9, 28, 21]


Solution : [4, 9, 28, 21] has cost 22.


Decide in level 8 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 37, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 37, 31, 35]
 solution : [4, 9, 28, 21, 26]


New level: 9
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 37, 31, 35]
 solution : [4, 9, 28, 21, 26]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 37, 31, 35]
 solution : [4, 9, 28, 21, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 2, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 28, 21, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 28, 21, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 28, 21, 26]


Solution : [4, 9, 28, 21, 26] has cost 29.


Before backtrack at level 9
 pending : []
 solution : [4, 9, 28, 21, 26]

After backtrack at level 9
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 37, 31, 35]
 solution : [4, 9, 28, 21, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 37, 31, 35]
 solution : [4, 9, 28, 21]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 37, 31, 35]
 solution : [4, 9, 28, 21]

Essensial at level 9 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 28, 21, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 28, 21, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 28, 21, 2]


Solution : [4, 9, 28, 21, 2] has cost 26.


Before backtrack at level 9
 pending : []
 solution : [4, 9, 28, 21, 2]

After backtrack at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35]
 solution : [4, 9, 28, 21]


Before backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35]
 solution : [4, 9, 28, 21]

After backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 26]
 solution : [4, 9, 28, 21]


Before backtrack at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 26]
 solution : [4, 9, 28, 21]

After backtrack at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 27]
 solution : [4, 9, 28, 21]


Invert decision for 21 at level 6


New level: 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 27]
 solution : [4, 9, 28]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 27]
 solution : [4, 9, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 27]
 solution : [4, 9, 28]


Solution : [4, 9, 28] has cost 15.


Decide in level 7 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 27]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 7

After decision at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 9, 28, 27]


New level: 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 9, 28, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 9, 28, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : {35, 31}

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 9, 28, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 9, 28, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 9, 28, 27]


Solution : [4, 9, 28, 27] has cost 22.


Decide in level 8 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 22]


New level: 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 22]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 0), (38, 512), (39, 0), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : {37, 39, 8, 13, 14, 15, 16, 18, 19, 20, 24}

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 9, 28, 27, 22]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 9, 28, 27, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 0), (38, 512), (39, 0), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 9, 28, 27, 22]


Solution : [4, 9, 28, 27, 22] has cost 29.


Before backtrack at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 9, 28, 27, 22]

After backtrack at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27]


Solution : [4, 9, 28, 27] has cost 22.


Decide in level 9 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 51 with phase True at level 9

After decision at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 51]


New level: 10
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 51]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 51]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 4096), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 4096), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {40, 48, 42, 43}

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 51]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 51]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 4096), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 4096), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 4096), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, 4096), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 51]


Solution : [4, 9, 28, 27, 51] has cost 53.


Before backtrack at level 10
 pending : [2, 38, 3, 29, 33, 47, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 51]

After backtrack at level 10
 pending : [2, 38, 3, 29, 33, 47, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 40, 42, 43, 48]
 solution : [4, 9, 28, 27, 51]


Invert decision for 51 at level 9


New level: 10
 pending : [2, 38, 3, 29, 33, 47, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 40, 42, 43, 48]
 solution : [4, 9, 28, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 40, 42, 43, 48]
 solution : [4, 9, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 4096), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, 4096), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 40, 42, 43, 48]
 solution : [4, 9, 28, 27]


Solution : [4, 9, 28, 27] has cost 22.


Decide in level 10 among pending : [2, 38, 3, 29, 33, 47, 36, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 40, 42, 43, 48]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 36 with phase True at level 10

After decision at level 10
 pending : [2, 38, 3, 29, 33, 47, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 40, 42, 43, 48]
 solution : [4, 9, 28, 27, 36]


New level: 11
 pending : [2, 38, 3, 29, 33, 47, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 40, 42, 43, 48]
 solution : [4, 9, 28, 27, 36]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 40, 42, 43, 48]
 solution : [4, 9, 28, 27, 36]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4096), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 3, 40, 42, 43, 47, 48, 29}

After reduction : 
 pending  : [2, 38, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 36]


Before reduction : 
 pending  : [2, 38, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 36]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4096), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4096), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 4096), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 38, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 36]


Solution : [4, 9, 28, 27, 36] has cost 40.


Before backtrack at level 11
 pending : [2, 38, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 36]

After backtrack at level 11
 pending : [2, 38, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 28, 27, 36]


Invert decision for 36 at level 10


New level: 11
 pending : [2, 38, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 28, 27]


Before reduction : 
 pending  : [2, 38, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 28, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4096), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 4096), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 38, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 28, 27]


Solution : [4, 9, 28, 27] has cost 22.


Decide in level 11 among pending : [2, 38, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [38, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 28, 27, 2]


New level: 12
 pending : [38, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 28, 27, 2]


Before reduction : 
 pending  : [38, 26, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 28, 27, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 3, 40, 42, 43, 47, 48, 26, 29}

After reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 2]


Before reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 2]


Solution : [4, 9, 28, 27, 2] has cost 26.


Before backtrack at level 12
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 2]

After backtrack at level 12
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 28, 27, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 28, 27]


Before reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 28, 27]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 3, 40, 42, 43, 47, 48, 29}

After reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 26]


Before reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 26]


Solution : [4, 9, 28, 27, 26] has cost 29.


Before backtrack at level 12
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 27, 26]

After backtrack at level 12
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 28, 27]


Before backtrack at level 11
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48]
 solution : [4, 9, 28, 27]

After backtrack at level 11
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2]
 solution : [4, 9, 28, 27]


Before backtrack at level 10
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2]
 solution : [4, 9, 28, 27]

After backtrack at level 10
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36]
 solution : [4, 9, 28, 27]


Before backtrack at level 9
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36]
 solution : [4, 9, 28, 27]

After backtrack at level 9
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51]
 solution : [4, 9, 28, 27]


Before backtrack at level 8
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51]
 solution : [4, 9, 28, 27]

After backtrack at level 8
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35, 22]
 solution : [4, 9, 28, 27]


Invert decision for 27 at level 7


New level: 8
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35, 22]
 solution : [4, 9, 28]


Before reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35, 22]
 solution : [4, 9, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35, 22]
 solution : [4, 9, 28]


Solution : [4, 9, 28] has cost 15.


Decide in level 8 among pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35, 22]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]
 solution : [4, 9, 28, 22]


New level: 9
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]
 solution : [4, 9, 28, 22]


Before reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]
 solution : [4, 9, 28, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 24}

After reduction : 
 pending  : [38, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]
 solution : [4, 9, 28, 22]


Before reduction : 
 pending  : [38, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]
 solution : [4, 9, 28, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]
 solution : [4, 9, 28, 22]


Solution : [4, 9, 28, 22] has cost 22.


Decide in level 9 among pending : [38, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 26 with phase True at level 9

After decision at level 9
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]
 solution : [4, 9, 28, 22, 26]


New level: 10
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]
 solution : [4, 9, 28, 22, 26]


Before reduction : 
 pending  : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]
 solution : [4, 9, 28, 22, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 2, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 28, 22, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 28, 22, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 28, 22, 26]


Solution : [4, 9, 28, 22, 26] has cost 29.


Before backtrack at level 10
 pending : []
 solution : [4, 9, 28, 22, 26]

After backtrack at level 10
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]
 solution : [4, 9, 28, 22, 26]


Invert decision for 26 at level 9


New level: 10
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]
 solution : [4, 9, 28, 22]


Before reduction : 
 pending  : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 2, 36, 51, 31, 35]
 solution : [4, 9, 28, 22]

Essensial at level 10 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 28, 22, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 28, 22, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 28, 22, 2]


Solution : [4, 9, 28, 22, 2] has cost 26.


Before backtrack at level 10
 pending : []
 solution : [4, 9, 28, 22, 2]

After backtrack at level 10
 pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35]
 solution : [4, 9, 28, 22]


Before backtrack at level 9
 pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35]
 solution : [4, 9, 28, 22]

After backtrack at level 9
 pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 28, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 28]


Before reduction : 
 pending  : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 28]


Solution : [4, 9, 28] has cost 15.


Decide in level 9 among pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 2 with phase True at level 9

After decision at level 9
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 28, 2]


New level: 10
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 28, 2]


Before reduction : 
 pending  : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 28, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 134217728), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 512), (38, 32768), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 3, 36, 35, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 2]


Before reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 512), (38, 32768), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 28, 2]


Solution : [4, 9, 28, 2] has cost 19.


Decide in level 10 among pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 10

After decision at level 10
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 28, 2, 18]


New level: 11
 pending : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 28, 2, 18]


Before reduction : 
 pending  : [38, 37, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 28, 2, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {8, 19, 20, 14}

After reduction : 
 pending  : [38, 37, 24, 39, 16, 15, 13]
 solution : [4, 9, 28, 2, 18]


Before reduction : 
 pending  : [38, 37, 24, 39, 16, 15, 13]
 solution : [4, 9, 28, 2, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 37, 24, 39, 16, 15, 13]
 solution : [4, 9, 28, 2, 18]


Solution : [4, 9, 28, 2, 18] has cost 28.


Before backtrack at level 11
 pending : [38, 37, 24, 39, 16, 15, 13]
 solution : [4, 9, 28, 2, 18]

After backtrack at level 11
 pending : [38, 37, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 28, 2, 18]


Invert decision for 18 at level 10


New level: 11
 pending : [38, 37, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 28, 2]


Before reduction : 
 pending  : [38, 37, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 28, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 37, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 28, 2]


Solution : [4, 9, 28, 2] has cost 19.


Decide in level 11 among pending : [38, 37, 24, 39, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [38, 37, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 28, 2, 13]


New level: 12
 pending : [38, 37, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 28, 2, 13]


Before reduction : 
 pending  : [38, 37, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 28, 2, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 37, 14, 15}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 28, 2, 13]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 28, 2, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 28, 2, 13]


Solution : [4, 9, 28, 2, 13] has cost 26.


Before backtrack at level 12
 pending : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 28, 2, 13]

After backtrack at level 12
 pending : [38, 24, 39, 8, 20, 19, 37, 16, 15, 14]
 solution : [4, 9, 28, 2, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [38, 24, 39, 8, 20, 19, 37, 16, 15, 14]
 solution : [4, 9, 28, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 37, 16, 15, 14]
 solution : [4, 9, 28, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 37, 16, 15, 14]
 solution : [4, 9, 28, 2]


Solution : [4, 9, 28, 2] has cost 19.


Decide in level 12 among pending : [38, 24, 39, 8, 20, 19, 37, 16, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 12

After decision at level 12
 pending : [38, 24, 39, 8, 20, 37, 16, 15, 14]
 solution : [4, 9, 28, 2, 19]


New level: 13
 pending : [38, 24, 39, 8, 20, 37, 16, 15, 14]
 solution : [4, 9, 28, 2, 19]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 37, 16, 15, 14]
 solution : [4, 9, 28, 2, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {8, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 37, 16, 15]
 solution : [4, 9, 28, 2, 19]


Before reduction : 
 pending  : [38, 24, 39, 37, 16, 15]
 solution : [4, 9, 28, 2, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 37, 16, 15]
 solution : [4, 9, 28, 2, 19]


Solution : [4, 9, 28, 2, 19] has cost 28.


Before backtrack at level 13
 pending : [38, 24, 39, 37, 16, 15]
 solution : [4, 9, 28, 2, 19]

After backtrack at level 13
 pending : [38, 24, 39, 37, 16, 15, 8, 20, 14]
 solution : [4, 9, 28, 2, 19]


Invert decision for 19 at level 12


New level: 13
 pending : [38, 24, 39, 37, 16, 15, 8, 20, 14]
 solution : [4, 9, 28, 2]


Before reduction : 
 pending  : [38, 24, 39, 37, 16, 15, 8, 20, 14]
 solution : [4, 9, 28, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 37, 16, 15, 8, 20, 14]
 solution : [4, 9, 28, 2]


Solution : [4, 9, 28, 2] has cost 19.


Decide in level 13 among pending : [38, 24, 39, 37, 16, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [38, 24, 39, 37, 16, 8, 20, 14]
 solution : [4, 9, 28, 2, 15]


New level: 14
 pending : [38, 24, 39, 37, 16, 8, 20, 14]
 solution : [4, 9, 28, 2, 15]


Before reduction : 
 pending  : [38, 24, 39, 37, 16, 8, 20, 14]
 solution : [4, 9, 28, 2, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 37, 14}

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 28, 2, 15]


Before reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 28, 2, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 28, 2, 15]


Solution : [4, 9, 28, 2, 15] has cost 26.


Before backtrack at level 14
 pending : [38, 24, 39, 8, 20]
 solution : [4, 9, 28, 2, 15]

After backtrack at level 14
 pending : [38, 24, 39, 8, 20, 37, 16, 14]
 solution : [4, 9, 28, 2, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [38, 24, 39, 8, 20, 37, 16, 14]
 solution : [4, 9, 28, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 37, 16, 14]
 solution : [4, 9, 28, 2]

Essensial at level 14 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {37}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 28, 2, 16]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 28, 2, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 28, 2, 16]


Solution : [4, 9, 28, 2, 16] has cost 26.


Before backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 28, 2, 16]

After backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16, 37]
 solution : [4, 9, 28, 2]


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 37]
 solution : [4, 9, 28, 2]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15]
 solution : [4, 9, 28, 2]


Before backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15]
 solution : [4, 9, 28, 2]

After backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19]
 solution : [4, 9, 28, 2]


Before backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19]
 solution : [4, 9, 28, 2]

After backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13]
 solution : [4, 9, 28, 2]


Before backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13]
 solution : [4, 9, 28, 2]

After backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 26, 18]
 solution : [4, 9, 28, 2]


Invert decision for 2 at level 9


New level: 10
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 26, 18]
 solution : [4, 9, 28]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 26, 18]
 solution : [4, 9, 28]

Essensial at level 10 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 512), (38, 65536), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 3, 36, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 28, 26]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 28, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 512), (38, 65536), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 28, 26]


Solution : [4, 9, 28, 26] has cost 22.


Decide in level 10 among pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 10

After decision at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13]
 solution : [4, 9, 28, 26, 18]


New level: 11
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13]
 solution : [4, 9, 28, 26, 18]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13]
 solution : [4, 9, 28, 26, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {8, 19, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 13]
 solution : [4, 9, 28, 26, 18]


Before reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 13]
 solution : [4, 9, 28, 26, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 13]
 solution : [4, 9, 28, 26, 18]


Solution : [4, 9, 28, 26, 18] has cost 31.


Before backtrack at level 11
 pending : [38, 24, 39, 16, 37, 15, 13]
 solution : [4, 9, 28, 26, 18]

After backtrack at level 11
 pending : [38, 24, 39, 16, 37, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 28, 26, 18]


Invert decision for 18 at level 10


New level: 11
 pending : [38, 24, 39, 16, 37, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 28, 26]


Before reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 28, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 28, 26]


Solution : [4, 9, 28, 26] has cost 22.


Decide in level 11 among pending : [38, 24, 39, 16, 37, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [38, 24, 39, 16, 37, 15, 8, 20, 14, 19]
 solution : [4, 9, 28, 26, 13]


New level: 12
 pending : [38, 24, 39, 16, 37, 15, 8, 20, 14, 19]
 solution : [4, 9, 28, 26, 13]


Before reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 8, 20, 14, 19]
 solution : [4, 9, 28, 26, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {16, 37, 14, 15}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 28, 26, 13]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 28, 26, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 28, 26, 13]


Solution : [4, 9, 28, 26, 13] has cost 29.


Before backtrack at level 12
 pending : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 28, 26, 13]

After backtrack at level 12
 pending : [38, 24, 39, 8, 20, 19, 16, 37, 15, 14]
 solution : [4, 9, 28, 26, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [38, 24, 39, 8, 20, 19, 16, 37, 15, 14]
 solution : [4, 9, 28, 26]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 37, 15, 14]
 solution : [4, 9, 28, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 37, 15, 14]
 solution : [4, 9, 28, 26]


Solution : [4, 9, 28, 26] has cost 22.


Decide in level 12 among pending : [38, 24, 39, 8, 20, 19, 16, 37, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 12

After decision at level 12
 pending : [38, 24, 39, 8, 20, 16, 37, 15, 14]
 solution : [4, 9, 28, 26, 19]


New level: 13
 pending : [38, 24, 39, 8, 20, 16, 37, 15, 14]
 solution : [4, 9, 28, 26, 19]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 37, 15, 14]
 solution : [4, 9, 28, 26, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {8, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 37, 15]
 solution : [4, 9, 28, 26, 19]


Before reduction : 
 pending  : [38, 24, 39, 16, 37, 15]
 solution : [4, 9, 28, 26, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 37, 15]
 solution : [4, 9, 28, 26, 19]


Solution : [4, 9, 28, 26, 19] has cost 31.


Before backtrack at level 13
 pending : [38, 24, 39, 16, 37, 15]
 solution : [4, 9, 28, 26, 19]

After backtrack at level 13
 pending : [38, 24, 39, 16, 37, 15, 8, 20, 14]
 solution : [4, 9, 28, 26, 19]


Invert decision for 19 at level 12


New level: 13
 pending : [38, 24, 39, 16, 37, 15, 8, 20, 14]
 solution : [4, 9, 28, 26]


Before reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 8, 20, 14]
 solution : [4, 9, 28, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 8, 20, 14]
 solution : [4, 9, 28, 26]


Solution : [4, 9, 28, 26] has cost 22.


Decide in level 13 among pending : [38, 24, 39, 16, 37, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 13

After decision at level 13
 pending : [38, 24, 39, 16, 37, 8, 20, 14]
 solution : [4, 9, 28, 26, 15]


New level: 14
 pending : [38, 24, 39, 16, 37, 8, 20, 14]
 solution : [4, 9, 28, 26, 15]


Before reduction : 
 pending  : [38, 24, 39, 16, 37, 8, 20, 14]
 solution : [4, 9, 28, 26, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 37, 14}

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 28, 26, 15]


Before reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 28, 26, 15]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 28, 26, 15]


Solution : [4, 9, 28, 26, 15] has cost 29.


Before backtrack at level 14
 pending : [38, 24, 39, 8, 20]
 solution : [4, 9, 28, 26, 15]

After backtrack at level 14
 pending : [38, 24, 39, 8, 20, 16, 37, 14]
 solution : [4, 9, 28, 26, 15]


Invert decision for 15 at level 13


New level: 14
 pending : [38, 24, 39, 8, 20, 16, 37, 14]
 solution : [4, 9, 28, 26]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 37, 14]
 solution : [4, 9, 28, 26]

Essensial at level 14 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {37}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 28, 26, 16]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 28, 26, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 28, 26, 16]


Solution : [4, 9, 28, 26, 16] has cost 29.


Before backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 28, 26, 16]

After backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16, 37]
 solution : [4, 9, 28, 26]


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 37]
 solution : [4, 9, 28, 26]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15]
 solution : [4, 9, 28, 26]


Before backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15]
 solution : [4, 9, 28, 26]

After backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19]
 solution : [4, 9, 28, 26]


Before backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19]
 solution : [4, 9, 28, 26]

After backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13]
 solution : [4, 9, 28, 26]


Before backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13]
 solution : [4, 9, 28, 26]

After backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18]
 solution : [4, 9, 28]


Before backtrack at level 9
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18]
 solution : [4, 9, 28]

After backtrack at level 9
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2]
 solution : [4, 9, 28]


Before backtrack at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2]
 solution : [4, 9, 28]

After backtrack at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22]
 solution : [4, 9, 28]


Before backtrack at level 7
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22]
 solution : [4, 9, 28]

After backtrack at level 7
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27]
 solution : [4, 9, 28]


Before backtrack at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27]
 solution : [4, 9, 28]

After backtrack at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27, 21]
 solution : [4, 9, 28]


Before backtrack at level 5
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27, 21]
 solution : [4, 9, 28]

After backtrack at level 5
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27, 21, 25]
 solution : [4, 9, 28]


Before backtrack at level 4
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27, 21, 25]
 solution : [4, 9, 28]

After backtrack at level 4
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27, 21, 25, 34]
 solution : [4, 9, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27, 21, 25, 34]
 solution : [4, 9]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27, 21, 25, 34]
 solution : [4, 9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27, 21, 25, 34]
 solution : [4, 9]


Solution : [4, 9] has cost 11.


Decide in level 4 among pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27, 21, 25, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 34 with phase True at level 4

After decision at level 4
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27, 21, 25]
 solution : [4, 9, 34]


New level: 5
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27, 21, 25]
 solution : [4, 9, 34]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 31, 35, 18, 2, 22, 27, 21, 25]
 solution : [4, 9, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 33554432), (37, 8192), (38, 67108864), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {35, 31}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 27, 21, 25]
 solution : [4, 9, 34]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 27, 21, 25]
 solution : [4, 9, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 33554432), (37, 8192), (38, 67108864), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 8192), (38, 67108864), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 27, 21, 25]
 solution : [4, 9, 34]


Solution : [4, 9, 34] has cost 24.


Before backtrack at level 5
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 27, 21, 25]
 solution : [4, 9, 34]

After backtrack at level 5
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 27, 21, 25, 31, 35]
 solution : [4, 9, 34]


Invert decision for 34 at level 4


New level: 5
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 27, 21, 25, 31, 35]
 solution : [4, 9]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 27, 21, 25, 31, 35]
 solution : [4, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 8192), (38, 67108864), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 27, 21, 25, 31, 35]
 solution : [4, 9]


Solution : [4, 9] has cost 11.


Decide in level 5 among pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 27, 21, 25, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 5

After decision at level 5
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 21, 25, 31, 35]
 solution : [4, 9, 27]


New level: 6
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 21, 25, 31, 35]
 solution : [4, 9, 27]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 21, 25, 31, 35]
 solution : [4, 9, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : {35, 31}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 21, 25]
 solution : [4, 9, 27]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 21, 25]
 solution : [4, 9, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 21, 25]
 solution : [4, 9, 27]


Solution : [4, 9, 27] has cost 18.


Decide in level 6 among pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 21, 25]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 21]
 solution : [4, 9, 27, 25]


New level: 7
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 21]
 solution : [4, 9, 27, 25]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 18, 2, 22, 21]
 solution : [4, 9, 27, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 0), (38, 512), (39, 0), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {37, 39, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24}

After reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 2]
 solution : [4, 9, 27, 25]


Before reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 2]
 solution : [4, 9, 27, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 0), (38, 512), (39, 0), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 2]
 solution : [4, 9, 27, 25]


Solution : [4, 9, 27, 25] has cost 22.


Decide in level 7 among pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 2]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 2]
 solution : [4, 9, 27, 25, 26]


New level: 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 2]
 solution : [4, 9, 27, 25, 26]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 2]
 solution : [4, 9, 27, 25, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 2, 3, 36, 38, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [4, 9, 27, 25, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 27, 25, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 27, 25, 26]


Solution : [4, 9, 27, 25, 26] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 27, 25, 26]

After backtrack at level 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 2]
 solution : [4, 9, 27, 25, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 2]
 solution : [4, 9, 27, 25]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 2]
 solution : [4, 9, 27, 25]

Essensial at level 8 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 38, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [4, 9, 27, 25, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 27, 25, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 27, 25, 2]


Solution : [4, 9, 27, 25, 2] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 27, 25, 2]

After backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51]
 solution : [4, 9, 27, 25]


Before backtrack at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51]
 solution : [4, 9, 27, 25]

After backtrack at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22, 21, 26]
 solution : [4, 9, 27, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22, 21, 26]
 solution : [4, 9, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22, 21, 26]
 solution : [4, 9, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22, 21, 26]
 solution : [4, 9, 27]


Solution : [4, 9, 27] has cost 18.


Decide in level 7 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22, 21, 26]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 21 with phase True at level 7

After decision at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 27, 21]


New level: 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 27, 21]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 27, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 0), (38, 512), (39, 0), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {37, 39, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24}

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26]
 solution : [4, 9, 27, 21]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26]
 solution : [4, 9, 27, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 0), (38, 512), (39, 0), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26]
 solution : [4, 9, 27, 21]


Solution : [4, 9, 27, 21] has cost 25.


Before backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26]
 solution : [4, 9, 27, 21]

After backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22]
 solution : [4, 9, 27, 21]


Invert decision for 21 at level 7


New level: 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22]
 solution : [4, 9, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22]
 solution : [4, 9, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22]
 solution : [4, 9, 27]


Solution : [4, 9, 27] has cost 18.


Decide in level 8 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 22]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 22]


New level: 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 22]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 0), (38, 512), (39, 0), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {37, 39, 8, 13, 14, 15, 16, 18, 19, 20, 24}

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26]
 solution : [4, 9, 27, 22]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26]
 solution : [4, 9, 27, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, 0), (38, 512), (39, 0), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26]
 solution : [4, 9, 27, 22]


Solution : [4, 9, 27, 22] has cost 25.


Before backtrack at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26]
 solution : [4, 9, 27, 22]

After backtrack at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27]


Solution : [4, 9, 27] has cost 18.


Decide in level 9 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 36, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 36 with phase True at level 9

After decision at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 36]


New level: 10
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 36]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 36]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 67108864), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4096), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 3, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : [2, 38, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 36]


Before reduction : 
 pending  : [2, 38, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 36]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4096), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4096), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 4096), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 38, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 36]


Solution : [4, 9, 27, 36] has cost 36.


Before backtrack at level 10
 pending : [2, 38, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 36]

After backtrack at level 10
 pending : [2, 38, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48, 51]
 solution : [4, 9, 27, 36]


Invert decision for 36 at level 9


New level: 10
 pending : [2, 38, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48, 51]
 solution : [4, 9, 27]


Before reduction : 
 pending  : [2, 38, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48, 51]
 solution : [4, 9, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4096), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 4096), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 38, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48, 51]
 solution : [4, 9, 27]


Solution : [4, 9, 27] has cost 18.


Decide in level 10 among pending : [2, 38, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48, 51]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 2 with phase True at level 10

After decision at level 10
 pending : [38, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48, 51]
 solution : [4, 9, 27, 2]


New level: 11
 pending : [38, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48, 51]
 solution : [4, 9, 27, 2]


Before reduction : 
 pending  : [38, 26, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48, 51]
 solution : [4, 9, 27, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, 512), (38, 33554432), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 40, 42, 43, 47, 48, 51, 26, 29}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 2]


Solution : [4, 9, 27, 2] has cost 22.


Decide in level 11 among pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13]
 solution : [4, 9, 27, 2, 18]


New level: 12
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13]
 solution : [4, 9, 27, 2, 18]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13]
 solution : [4, 9, 27, 2, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {8, 19, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 13]
 solution : [4, 9, 27, 2, 18]


Before reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 13]
 solution : [4, 9, 27, 2, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 13]
 solution : [4, 9, 27, 2, 18]


Solution : [4, 9, 27, 2, 18] has cost 31.


Before backtrack at level 12
 pending : [38, 24, 39, 16, 37, 15, 13]
 solution : [4, 9, 27, 2, 18]

After backtrack at level 12
 pending : [38, 24, 39, 16, 37, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 27, 2, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [38, 24, 39, 16, 37, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 27, 2]


Before reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 27, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 27, 2]


Solution : [4, 9, 27, 2] has cost 22.


Decide in level 12 among pending : [38, 24, 39, 16, 37, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 24, 39, 16, 37, 15, 8, 20, 14, 19]
 solution : [4, 9, 27, 2, 13]


New level: 13
 pending : [38, 24, 39, 16, 37, 15, 8, 20, 14, 19]
 solution : [4, 9, 27, 2, 13]


Before reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 8, 20, 14, 19]
 solution : [4, 9, 27, 2, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 37, 14, 15}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 27, 2, 13]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 27, 2, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 27, 2, 13]


Solution : [4, 9, 27, 2, 13] has cost 29.


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 27, 2, 13]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 19, 16, 37, 15, 14]
 solution : [4, 9, 27, 2, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 24, 39, 8, 20, 19, 16, 37, 15, 14]
 solution : [4, 9, 27, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 37, 15, 14]
 solution : [4, 9, 27, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 37, 15, 14]
 solution : [4, 9, 27, 2]


Solution : [4, 9, 27, 2] has cost 22.


Decide in level 13 among pending : [38, 24, 39, 8, 20, 19, 16, 37, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [38, 24, 39, 8, 20, 16, 37, 15, 14]
 solution : [4, 9, 27, 2, 19]


New level: 14
 pending : [38, 24, 39, 8, 20, 16, 37, 15, 14]
 solution : [4, 9, 27, 2, 19]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 37, 15, 14]
 solution : [4, 9, 27, 2, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {8, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 37, 15]
 solution : [4, 9, 27, 2, 19]


Before reduction : 
 pending  : [38, 24, 39, 16, 37, 15]
 solution : [4, 9, 27, 2, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 37, 15]
 solution : [4, 9, 27, 2, 19]


Solution : [4, 9, 27, 2, 19] has cost 31.


Before backtrack at level 14
 pending : [38, 24, 39, 16, 37, 15]
 solution : [4, 9, 27, 2, 19]

After backtrack at level 14
 pending : [38, 24, 39, 16, 37, 15, 8, 20, 14]
 solution : [4, 9, 27, 2, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [38, 24, 39, 16, 37, 15, 8, 20, 14]
 solution : [4, 9, 27, 2]


Before reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 8, 20, 14]
 solution : [4, 9, 27, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 37, 15, 8, 20, 14]
 solution : [4, 9, 27, 2]


Solution : [4, 9, 27, 2] has cost 22.


Decide in level 14 among pending : [38, 24, 39, 16, 37, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 24, 39, 16, 37, 8, 20, 14]
 solution : [4, 9, 27, 2, 15]


New level: 15
 pending : [38, 24, 39, 16, 37, 8, 20, 14]
 solution : [4, 9, 27, 2, 15]


Before reduction : 
 pending  : [38, 24, 39, 16, 37, 8, 20, 14]
 solution : [4, 9, 27, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 37, 14}

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 27, 2, 15]


Before reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 27, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 27, 2, 15]


Solution : [4, 9, 27, 2, 15] has cost 29.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20]
 solution : [4, 9, 27, 2, 15]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 16, 37, 14]
 solution : [4, 9, 27, 2, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 24, 39, 8, 20, 16, 37, 14]
 solution : [4, 9, 27, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 37, 14]
 solution : [4, 9, 27, 2]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {37}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 27, 2, 16]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 27, 2, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 0), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 27, 2, 16]


Solution : [4, 9, 27, 2, 16] has cost 29.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 27, 2, 16]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14, 16, 37]
 solution : [4, 9, 27, 2]


Before backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16, 37]
 solution : [4, 9, 27, 2]

After backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15]
 solution : [4, 9, 27, 2]


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15]
 solution : [4, 9, 27, 2]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19]
 solution : [4, 9, 27, 2]


Before backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19]
 solution : [4, 9, 27, 2]

After backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13]
 solution : [4, 9, 27, 2]


Before backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13]
 solution : [4, 9, 27, 2]

After backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 18]
 solution : [4, 9, 27, 2]


Invert decision for 2 at level 10


New level: 11
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 18]
 solution : [4, 9, 27]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 18]
 solution : [4, 9, 27]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 26]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 26]


Solution : [4, 9, 27, 26] has cost 25.


Before backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18]
 solution : [4, 9, 27, 26]

After backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51]
 solution : [4, 9, 27]


Before backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51]
 solution : [4, 9, 27]

After backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2]
 solution : [4, 9, 27]


Before backtrack at level 9
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2]
 solution : [4, 9, 27]

After backtrack at level 9
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36]
 solution : [4, 9, 27]


Before backtrack at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36]
 solution : [4, 9, 27]

After backtrack at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 22]
 solution : [4, 9, 27]


Before backtrack at level 7
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 22]
 solution : [4, 9, 27]

After backtrack at level 7
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 22, 21]
 solution : [4, 9, 27]


Before backtrack at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 22, 21]
 solution : [4, 9, 27]

After backtrack at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 22, 21, 31, 35, 25]
 solution : [4, 9, 27]


Invert decision for 27 at level 5


New level: 6
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 22, 21, 31, 35, 25]
 solution : [4, 9]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 22, 21, 31, 35, 25]
 solution : [4, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 22, 21, 31, 35, 25]
 solution : [4, 9]


Solution : [4, 9] has cost 11.


Decide in level 6 among pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 22, 21, 31, 35, 25]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 22, 21, 31, 35]
 solution : [4, 9, 25]


New level: 7
 pending : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 22, 21, 31, 35]
 solution : [4, 9, 25]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 37, 15, 19, 13, 18, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 22, 21, 31, 35]
 solution : [4, 9, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, 1073741824), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24}

After reduction : 
 pending  : [38, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 31, 35]
 solution : [4, 9, 25]


Before reduction : 
 pending  : [38, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 31, 35]
 solution : [4, 9, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 31, 35]
 solution : [4, 9, 25]


Solution : [4, 9, 25] has cost 15.


Decide in level 7 among pending : [38, 37, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 31, 35]
 solution : [4, 9, 25, 26]


New level: 8
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 31, 35]
 solution : [4, 9, 25, 26]


Before reduction : 
 pending  : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 31, 35]
 solution : [4, 9, 25, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 2, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 25, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 25, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 25, 26]


Solution : [4, 9, 25, 26] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 25, 26]

After backtrack at level 8
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 31, 35]
 solution : [4, 9, 25, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 31, 35]
 solution : [4, 9, 25]


Before reduction : 
 pending  : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 2, 36, 31, 35]
 solution : [4, 9, 25]

Essensial at level 8 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 25, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 25, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 25, 2]


Solution : [4, 9, 25, 2] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [4, 9, 25, 2]

After backtrack at level 8
 pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35]
 solution : [4, 9, 25]


Before backtrack at level 7
 pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35]
 solution : [4, 9, 25]

After backtrack at level 7
 pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 26]
 solution : [4, 9, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 26]
 solution : [4, 9]


Before reduction : 
 pending  : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 26]
 solution : [4, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 26]
 solution : [4, 9]


Solution : [4, 9] has cost 11.


Decide in level 7 among pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 26]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 21 with phase True at level 7

After decision at level 7
 pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 21]


New level: 8
 pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 21]


Before reduction : 
 pending  : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 26]
 solution : [4, 9, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, 536870912), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24}

After reduction : 
 pending  : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26]
 solution : [4, 9, 21]


Before reduction : 
 pending  : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26]
 solution : [4, 9, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26]
 solution : [4, 9, 21]


Solution : [4, 9, 21] has cost 18.


Decide in level 8 among pending : [2, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 2 with phase True at level 8

After decision at level 8
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26]
 solution : [4, 9, 21, 2]


New level: 9
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26]
 solution : [4, 9, 21, 2]


Before reduction : 
 pending  : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26]
 solution : [4, 9, 21, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 21, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 21, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 21, 2]


Solution : [4, 9, 21, 2] has cost 22.


Before backtrack at level 9
 pending : []
 solution : [4, 9, 21, 2]

After backtrack at level 9
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26]
 solution : [4, 9, 21, 2]


Invert decision for 2 at level 8


New level: 9
 pending : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26]
 solution : [4, 9, 21]


Before reduction : 
 pending  : [38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26]
 solution : [4, 9, 21]

Essensial at level 9 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 21, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 21, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 21, 26]


Solution : [4, 9, 21, 26] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [4, 9, 21, 26]

After backtrack at level 9
 pending : [26, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35]
 solution : [4, 9, 21]


Before backtrack at level 8
 pending : [26, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35]
 solution : [4, 9, 21]

After backtrack at level 8
 pending : [26, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9, 21]


Invert decision for 21 at level 7


New level: 8
 pending : [26, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9]


Before reduction : 
 pending  : [26, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9]


Solution : [4, 9] has cost 11.


Decide in level 8 among pending : [26, 38, 37, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 37 with phase True at level 8

After decision at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9, 37]


New level: 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9, 37]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9, 37]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 268435456), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, 33554432), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9, 37]


Solution : [4, 9, 37] has cost 25.


Before backtrack at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9, 37]

After backtrack at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9, 37]


Invert decision for 37 at level 8


New level: 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, 33554432), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]
 solution : [4, 9]


Solution : [4, 9] has cost 11.


Decide in level 9 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 2]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 2]
 solution : [4, 9, 22]


New level: 10
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 2]
 solution : [4, 9, 22]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 2]
 solution : [4, 9, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, 268435456), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 24}

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2]
 solution : [4, 9, 22]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2]
 solution : [4, 9, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2]
 solution : [4, 9, 22]


Solution : [4, 9, 22] has cost 18.


Decide in level 10 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2]
 solution : [4, 9, 22, 26]


New level: 11
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2]
 solution : [4, 9, 22, 26]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2]
 solution : [4, 9, 22, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 2, 3, 36, 35, 38, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 22, 26]


Before reduction : 
 pending  : []
 solution : [4, 9, 22, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 22, 26]


Solution : [4, 9, 22, 26] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [4, 9, 22, 26]

After backtrack at level 11
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2]
 solution : [4, 9, 22, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2]
 solution : [4, 9, 22]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2]
 solution : [4, 9, 22]

Essensial at level 11 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 36, 35, 38, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 9, 22, 2]


Before reduction : 
 pending  : []
 solution : [4, 9, 22, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [4, 9, 22, 2]


Solution : [4, 9, 22, 2] has cost 22.


Before backtrack at level 11
 pending : []
 solution : [4, 9, 22, 2]

After backtrack at level 11
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35]
 solution : [4, 9, 22]


Before backtrack at level 10
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35]
 solution : [4, 9, 22]

After backtrack at level 10
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9]


Solution : [4, 9] has cost 11.


Decide in level 10 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 2 with phase True at level 10

After decision at level 10
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 2]


New level: 11
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 2]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 26]
 solution : [4, 9, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 131072), (15, 2097152), (16, 65536), (17, -1), (18, 16777216), (19, 8388608), (20, 278528), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 67108864), (39, 1048576), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 32768), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 36, 35, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 32768), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 2]


Solution : [4, 9, 2] has cost 15.


Decide in level 11 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 2, 18]


New level: 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 2, 18]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 2, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {8, 19, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 2, 18]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 2, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 2, 18]


Solution : [4, 9, 2, 18] has cost 24.


Before backtrack at level 12
 pending : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 2, 18]

After backtrack at level 12
 pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 2, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 2]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 2]


Solution : [4, 9, 2] has cost 15.


Decide in level 12 among pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 2, 13]


New level: 13
 pending : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 2, 13]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 2, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 2, 13]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 2, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 2, 13]


Solution : [4, 9, 2, 13] has cost 22.


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 2, 13]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 2, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 2]


Solution : [4, 9, 2] has cost 15.


Decide in level 13 among pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 9, 2, 19]


New level: 14
 pending : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 9, 2, 19]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 9, 2, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {8, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 9, 2, 19]


Before reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 9, 2, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 9, 2, 19]


Solution : [4, 9, 2, 19] has cost 24.


Before backtrack at level 14
 pending : [38, 24, 39, 16, 15]
 solution : [4, 9, 2, 19]

After backtrack at level 14
 pending : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 2, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 2]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 2]


Solution : [4, 9, 2] has cost 15.


Decide in level 14 among pending : [38, 24, 39, 16, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 2, 15]


New level: 15
 pending : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 2, 15]


Before reduction : 
 pending  : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 14}

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 2, 15]


Before reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 2, 15]


Solution : [4, 9, 2, 15] has cost 22.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20]
 solution : [4, 9, 2, 15]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 2, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 2]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 2, 16]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 2, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 2, 16]


Solution : [4, 9, 2, 16] has cost 22.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 2, 16]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14, 16]
 solution : [4, 9, 2]


Before backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16]
 solution : [4, 9, 2]

After backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16, 15]
 solution : [4, 9, 2]


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 15]
 solution : [4, 9, 2]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 9, 2]


Before backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 9, 2]

After backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 2]


Before backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 2]

After backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 18]
 solution : [4, 9, 2]


Invert decision for 2 at level 10


New level: 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 18]
 solution : [4, 9]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 18]
 solution : [4, 9]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 65536), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 36, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 26]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 65536), (39, 524288), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 9, 26]


Solution : [4, 9, 26] has cost 18.


Decide in level 11 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 26, 18]


New level: 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 26, 18]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 26, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, 8388608), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {8, 19, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 26, 18]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 26, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 26, 18]


Solution : [4, 9, 26, 18] has cost 27.


Before backtrack at level 12
 pending : [38, 24, 39, 16, 15, 13]
 solution : [4, 9, 26, 18]

After backtrack at level 12
 pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 26, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 26]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 65536), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 9, 26]


Solution : [4, 9, 26] has cost 18.


Decide in level 12 among pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 26, 13]


New level: 13
 pending : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 26, 13]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 9, 26, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, 4194304), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 26, 13]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 26, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 26, 13]


Solution : [4, 9, 26, 13] has cost 25.


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 19]
 solution : [4, 9, 26, 13]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 26, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 26]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 1048576), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 9, 26]


Solution : [4, 9, 26] has cost 18.


Decide in level 13 among pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 9, 26, 19]


New level: 14
 pending : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 9, 26, 19]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 9, 26, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, 4194304), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {8, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 9, 26, 19]


Before reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 9, 26, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 9, 26, 19]


Solution : [4, 9, 26, 19] has cost 27.


Before backtrack at level 14
 pending : [38, 24, 39, 16, 15]
 solution : [4, 9, 26, 19]

After backtrack at level 14
 pending : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 26, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 26]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 16384), (16, 16384), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 9, 26]


Solution : [4, 9, 26] has cost 18.


Decide in level 14 among pending : [38, 24, 39, 16, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 26, 15]


New level: 15
 pending : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 26, 15]


Before reduction : 
 pending  : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 9, 26, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, 2097152), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 14}

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 26, 15]


Before reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 26, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 9, 26, 15]


Solution : [4, 9, 26, 15] has cost 25.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20]
 solution : [4, 9, 26, 15]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 26, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 26]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 9, 26]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 65536), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 66048), (21, -1), (22, -1), (23, -1), (24, 131072), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, 131072), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 26, 16]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 26, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 26, 16]


Solution : [4, 9, 26, 16] has cost 25.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14]
 solution : [4, 9, 26, 16]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14, 16]
 solution : [4, 9, 26]


Before backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16]
 solution : [4, 9, 26]

After backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16, 15]
 solution : [4, 9, 26]


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 15]
 solution : [4, 9, 26]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 9, 26]


Before backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 9, 26]

After backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 26]


Before backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 9, 26]

After backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18]
 solution : [4, 9]


Before backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18]
 solution : [4, 9]

After backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2]
 solution : [4, 9]


Before backtrack at level 9
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2]
 solution : [4, 9]

After backtrack at level 9
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22]
 solution : [4, 9]


Before backtrack at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22]
 solution : [4, 9]

After backtrack at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37]
 solution : [4, 9]


Before backtrack at level 7
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37]
 solution : [4, 9]

After backtrack at level 7
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21]
 solution : [4, 9]


Before backtrack at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21]
 solution : [4, 9]

After backtrack at level 6
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25]
 solution : [4, 9]


Before backtrack at level 5
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25]
 solution : [4, 9]

After backtrack at level 5
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27]
 solution : [4, 9]


Before backtrack at level 4
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27]
 solution : [4, 9]

After backtrack at level 4
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34]
 solution : [4, 9]


Before backtrack at level 3
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34]
 solution : [4, 9]

After backtrack at level 3
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34, 28]
 solution : [4, 9]


Before backtrack at level 2
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34, 28]
 solution : [4, 9]

After backtrack at level 2
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34, 28, 10]
 solution : [4, 9]


Invert decision for 9 at level 1


New level: 2
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34, 28, 10]
 solution : [4]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34, 28, 10]
 solution : [4]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32768), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 135168), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34, 28, 10]
 solution : [4]


Solution : [4] has cost 6.


Decide in level 2 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34, 28, 10]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34, 28]
 solution : [4, 10]


New level: 3
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34, 28]
 solution : [4, 10]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34, 28]
 solution : [4, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, 17179869184), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, 1073741824), (22, 536870912), (23, -1), (24, 2097152), (25, 2147483648), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34, 28]
 solution : [4, 10]


Solution : [4, 10] has cost 9.


Decide in level 3 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 25, 27, 34, 28]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, 1073741824), (22, 536870912), (23, -1), (24, 2097152), (25, 2147483648), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 25 with phase True at level 3

After decision at level 3
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 27, 34, 28]
 solution : [4, 10, 25]


New level: 4
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 27, 34, 28]
 solution : [4, 10, 25]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 22, 37, 21, 27, 34, 28]
 solution : [4, 10, 25]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, 1073741824), (22, 536870912), (23, -1), (24, 2097152), (25, 2147483648), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24}

After reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 37, 27, 34, 28]
 solution : [4, 10, 25]


Before reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 37, 27, 34, 28]
 solution : [4, 10, 25]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 37, 27, 34, 28]
 solution : [4, 10, 25]


Solution : [4, 10, 25] has cost 13.


Decide in level 4 among pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 37, 27, 34, 28]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 34 with phase True at level 4

After decision at level 4
 pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 37, 27, 28]
 solution : [4, 10, 25, 34]


New level: 5
 pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 37, 27, 28]
 solution : [4, 10, 25, 34]


Before reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 37, 27, 28]
 solution : [4, 10, 25, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, 4096), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 5 : {35, 37, 31}

After reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 28]
 solution : [4, 10, 25, 34]


Before reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 28]
 solution : [4, 10, 25, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, 4096), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, 4096), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 28]
 solution : [4, 10, 25, 34]


Solution : [4, 10, 25, 34] has cost 26.


Before backtrack at level 5
 pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 28]
 solution : [4, 10, 25, 34]

After backtrack at level 5
 pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 28, 31, 35, 37]
 solution : [4, 10, 25, 34]


Invert decision for 34 at level 4


New level: 5
 pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 28, 31, 35, 37]
 solution : [4, 10, 25]


Before reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 28, 31, 35, 37]
 solution : [4, 10, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, 4096), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 2097152), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 28, 31, 35, 37]
 solution : [4, 10, 25]


Solution : [4, 10, 25] has cost 13.


Decide in level 5 among pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 28, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]
 solution : [4, 10, 25, 28]


New level: 6
 pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]
 solution : [4, 10, 25, 28]


Before reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]
 solution : [4, 10, 25, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]
 solution : [4, 10, 25, 28]


Solution : [4, 10, 25, 28] has cost 17.


Decide in level 6 among pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28, 27]


New level: 7
 pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28, 27]


Before reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : {35, 37, 31}

After reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 10, 25, 28, 27]


Before reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 10, 25, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 10, 25, 28, 27]


Solution : [4, 10, 25, 28, 27] has cost 24.


Before backtrack at level 7
 pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 10, 25, 28, 27]

After backtrack at level 7
 pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28]


Before reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28]


Solution : [4, 10, 25, 28] has cost 17.


Decide in level 7 among pending : [38, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28, 26]


New level: 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28, 26]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 2, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 10, 25, 28, 26]


Before reduction : 
 pending  : []
 solution : [4, 10, 25, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 10, 25, 28, 26]


Solution : [4, 10, 25, 28, 26] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [4, 10, 25, 28, 26]

After backtrack at level 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 25, 28]

Essensial at level 8 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 10, 25, 28, 2]


Before reduction : 
 pending  : []
 solution : [4, 10, 25, 28, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 10, 25, 28, 2]


Solution : [4, 10, 25, 28, 2] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [4, 10, 25, 28, 2]

After backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37]
 solution : [4, 10, 25, 28]


Before backtrack at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37]
 solution : [4, 10, 25, 28]

After backtrack at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26]
 solution : [4, 10, 25, 28]


Before backtrack at level 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26]
 solution : [4, 10, 25, 28]

After backtrack at level 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27]
 solution : [4, 10, 25, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27]
 solution : [4, 10, 25]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27]
 solution : [4, 10, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27]
 solution : [4, 10, 25]


Solution : [4, 10, 25] has cost 13.


Decide in level 6 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26]
 solution : [4, 10, 25, 27]


New level: 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26]
 solution : [4, 10, 25, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26]
 solution : [4, 10, 25, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : {35, 37, 31}

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 10, 25, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 10, 25, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 10, 25, 27]


Solution : [4, 10, 25, 27] has cost 20.


Before backtrack at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 10, 25, 27]

After backtrack at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 10, 25, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 10, 25]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 10, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 10, 25]


Solution : [4, 10, 25] has cost 13.


Decide in level 7 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 10, 25, 2]


New level: 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 10, 25, 2]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 10, 25, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 10, 25, 2]


Before reduction : 
 pending  : []
 solution : [4, 10, 25, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 10, 25, 2]


Solution : [4, 10, 25, 2] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [4, 10, 25, 2]

After backtrack at level 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 10, 25, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 10, 25]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 10, 25]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 10, 25, 26]


Before reduction : 
 pending  : []
 solution : [4, 10, 25, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 10, 25, 26]


Solution : [4, 10, 25, 26] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [4, 10, 25, 26]

After backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37]
 solution : [4, 10, 25]


Before backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37]
 solution : [4, 10, 25]

After backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2]
 solution : [4, 10, 25]


Before backtrack at level 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2]
 solution : [4, 10, 25]

After backtrack at level 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27]
 solution : [4, 10, 25]


Before backtrack at level 5
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27]
 solution : [4, 10, 25]

After backtrack at level 5
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28]
 solution : [4, 10, 25]


Before backtrack at level 4
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28]
 solution : [4, 10, 25]

After backtrack at level 4
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]
 solution : [4, 10, 25]


Invert decision for 25 at level 3


New level: 4
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]
 solution : [4, 10]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]
 solution : [4, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, 1073741824), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]
 solution : [4, 10]


Solution : [4, 10] has cost 9.


Decide in level 4 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, 1073741824), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 21 with phase True at level 4

After decision at level 4
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 10, 21]


New level: 5
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 10, 21]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 10, 21]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, 1073741824), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24}

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28, 34]
 solution : [4, 10, 21]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28, 34]
 solution : [4, 10, 21]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28, 34]
 solution : [4, 10, 21]


Solution : [4, 10, 21] has cost 16.


Decide in level 5 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 28, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]
 solution : [4, 10, 21, 28]


New level: 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]
 solution : [4, 10, 21, 28]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]
 solution : [4, 10, 21, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, 268435456), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]
 solution : [4, 10, 21, 28]


Solution : [4, 10, 21, 28] has cost 20.


Before backtrack at level 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]
 solution : [4, 10, 21, 28]

After backtrack at level 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]
 solution : [4, 10, 21, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]
 solution : [4, 10, 21]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]
 solution : [4, 10, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, 268435456), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]
 solution : [4, 10, 21]


Solution : [4, 10, 21] has cost 16.


Decide in level 6 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 34 with phase True at level 6

After decision at level 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27]
 solution : [4, 10, 21, 34]


New level: 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27]
 solution : [4, 10, 21, 34]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27]
 solution : [4, 10, 21, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, 536870912), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {35, 37, 31}

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27]
 solution : [4, 10, 21, 34]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27]
 solution : [4, 10, 21, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27]
 solution : [4, 10, 21, 34]


Solution : [4, 10, 21, 34] has cost 29.


Before backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27]
 solution : [4, 10, 21, 34]

After backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]
 solution : [4, 10, 21, 34]


Invert decision for 34 at level 6


New level: 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]
 solution : [4, 10, 21]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]
 solution : [4, 10, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]
 solution : [4, 10, 21]


Solution : [4, 10, 21] has cost 16.


Decide in level 7 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 7

After decision at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21, 27]


New level: 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21, 27]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {35, 37, 31}

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 10, 21, 27]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 10, 21, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 10, 21, 27]


Solution : [4, 10, 21, 27] has cost 23.


Before backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 10, 21, 27]

After backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21, 27]


Invert decision for 27 at level 7


New level: 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21]


Solution : [4, 10, 21] has cost 16.


Decide in level 8 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21, 26]


New level: 9
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21, 26]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 2, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 10, 21, 26]


Before reduction : 
 pending  : []
 solution : [4, 10, 21, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 10, 21, 26]


Solution : [4, 10, 21, 26] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [4, 10, 21, 26]

After backtrack at level 9
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 10, 21]

Essensial at level 9 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 10, 21, 2]


Before reduction : 
 pending  : []
 solution : [4, 10, 21, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 10, 21, 2]


Solution : [4, 10, 21, 2] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [4, 10, 21, 2]

After backtrack at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37]
 solution : [4, 10, 21]


Before backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37]
 solution : [4, 10, 21]

After backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26]
 solution : [4, 10, 21]


Before backtrack at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26]
 solution : [4, 10, 21]

After backtrack at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27]
 solution : [4, 10, 21]


Before backtrack at level 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27]
 solution : [4, 10, 21]

After backtrack at level 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 34]
 solution : [4, 10, 21]


Before backtrack at level 5
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 34]
 solution : [4, 10, 21]

After backtrack at level 5
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 34, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28]
 solution : [4, 10, 21]


Invert decision for 21 at level 4


New level: 5
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 34, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28]
 solution : [4, 10]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 34, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28]
 solution : [4, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 34, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28]
 solution : [4, 10]


Solution : [4, 10] has cost 9.


Decide in level 5 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 34, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28]
 solution : [4, 10, 34]


New level: 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28]
 solution : [4, 10, 34]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28]
 solution : [4, 10, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, 536870912), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 8192), (28, 4096), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 2048), (34, -1), (35, 0), (36, 16777216), (37, 4096), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : {35, 31}

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28]
 solution : [4, 10, 34]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28]
 solution : [4, 10, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 8192), (28, 4096), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 2048), (34, -1), (35, 0), (36, 16777216), (37, 4096), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 8192), (28, 4096), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 4096), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28]
 solution : [4, 10, 34]


Solution : [4, 10, 34] has cost 22.


Before backtrack at level 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28]
 solution : [4, 10, 34]

After backtrack at level 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28, 31, 35]
 solution : [4, 10, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28, 31, 35]
 solution : [4, 10]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28, 31, 35]
 solution : [4, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 8192), (28, 4096), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 4096), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28, 31, 35]
 solution : [4, 10]


Solution : [4, 10] has cost 9.


Decide in level 6 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 28, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 22 with phase True at level 6

After decision at level 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 28, 31, 35]
 solution : [4, 10, 22]


New level: 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 28, 31, 35]
 solution : [4, 10, 22]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 28, 31, 35]
 solution : [4, 10, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, 536870912), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 24}

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 28, 31, 35]
 solution : [4, 10, 22]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 28, 31, 35]
 solution : [4, 10, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 28, 31, 35]
 solution : [4, 10, 22]


Solution : [4, 10, 22] has cost 16.


Decide in level 7 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 28, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 31, 35]
 solution : [4, 10, 22, 28]


New level: 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 31, 35]
 solution : [4, 10, 22, 28]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 31, 35]
 solution : [4, 10, 22, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 31, 35]
 solution : [4, 10, 22, 28]


Solution : [4, 10, 22, 28] has cost 20.


Before backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 31, 35]
 solution : [4, 10, 22, 28]

After backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 31, 35]
 solution : [4, 10, 22, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 31, 35]
 solution : [4, 10, 22]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 31, 35]
 solution : [4, 10, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, -1), (31, 524288), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 31, 35]
 solution : [4, 10, 22]


Solution : [4, 10, 22] has cost 16.


Decide in level 8 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 27, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 31, 35]
 solution : [4, 10, 22, 27]


New level: 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 31, 35]
 solution : [4, 10, 22, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 26, 31, 35]
 solution : [4, 10, 22, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {35, 37, 31}

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 10, 22, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 10, 22, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 8388608), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 10, 22, 27]


Solution : [4, 10, 22, 27] has cost 23.


Before backtrack at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 10, 22, 27]

After backtrack at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 10, 22, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 10, 22]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 10, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 8388608), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 10, 22]


Solution : [4, 10, 22] has cost 16.


Decide in level 9 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 2 with phase True at level 9

After decision at level 9
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 10, 22, 2]


New level: 10
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 10, 22, 2]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 10, 22, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 1048576), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 33554432), (37, 2048), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 10, 22, 2]


Before reduction : 
 pending  : []
 solution : [4, 10, 22, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [4, 10, 22, 2]


Solution : [4, 10, 22, 2] has cost 20.


Before backtrack at level 10
 pending : []
 solution : [4, 10, 22, 2]

After backtrack at level 10
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 10, 22, 2]


Invert decision for 2 at level 9


New level: 10
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 10, 22]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 31, 35]
 solution : [4, 10, 22]

Essensial at level 10 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 3, 36, 37, 38, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 10, 22, 26]


Before reduction : 
 pending  : []
 solution : [4, 10, 22, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [4, 10, 22, 26]


Solution : [4, 10, 22, 26] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [4, 10, 22, 26]

After backtrack at level 10
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35]
 solution : [4, 10, 22]


Before backtrack at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35]
 solution : [4, 10, 22]

After backtrack at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2]
 solution : [4, 10, 22]


Before backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2]
 solution : [4, 10, 22]

After backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27]
 solution : [4, 10, 22]


Before backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27]
 solution : [4, 10, 22]

After backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 28]
 solution : [4, 10, 22]


Invert decision for 22 at level 6


New level: 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 28]
 solution : [4, 10]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 28]
 solution : [4, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 28]
 solution : [4, 10]


Solution : [4, 10] has cost 9.


Decide in level 7 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 28]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 28 with phase True at level 7

After decision at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28]


New level: 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28]


Solution : [4, 10, 28] has cost 13.


Decide in level 8 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 37 with phase True at level 8

After decision at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 37]


New level: 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 37]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 37]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 67108864), (28, -1), (29, 524288), (30, -1), (31, 262144), (32, -1), (33, 8192), (34, -1), (35, 2048), (36, 67108864), (37, -1), (38, 33554432), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 37]


Solution : [4, 10, 28, 37] has cost 27.


Before backtrack at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 37]

After backtrack at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 37]


Invert decision for 37 at level 8


New level: 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 67108864), (28, -1), (29, 524288), (30, -1), (31, 262144), (32, -1), (33, 8192), (34, -1), (35, 2048), (36, 67108864), (37, -1), (38, 33554432), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28]


Solution : [4, 10, 28] has cost 13.


Decide in level 9 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 27]


New level: 10
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 27]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 2048), (34, -1), (35, 0), (36, 16777216), (37, -1), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : {35, 31}

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 27]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 2048), (34, -1), (35, 0), (36, 16777216), (37, -1), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 27]


Solution : [4, 10, 28, 27] has cost 20.


Before backtrack at level 10
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 27]

After backtrack at level 10
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 10, 28, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 10, 28]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 10, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 10, 28]


Solution : [4, 10, 28] has cost 13.


Decide in level 10 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 10, 28, 26]


New level: 11
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 10, 28, 26]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 10, 28, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 131072), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 2, 3, 36, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 26]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 131072), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 26]


Solution : [4, 10, 28, 26] has cost 20.


Before backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 26]

After backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35]
 solution : [4, 10, 28, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35]
 solution : [4, 10, 28]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35]
 solution : [4, 10, 28]

Essensial at level 11 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 65536), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 36, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 65536), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 28, 2]


Solution : [4, 10, 28, 2] has cost 17.


Decide in level 11 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 10, 28, 2, 18]


New level: 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 10, 28, 2, 18]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 10, 28, 2, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {8, 19, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 10, 28, 2, 18]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 10, 28, 2, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13]
 solution : [4, 10, 28, 2, 18]


Solution : [4, 10, 28, 2, 18] has cost 26.


Before backtrack at level 12
 pending : [38, 24, 39, 16, 15, 13]
 solution : [4, 10, 28, 2, 18]

After backtrack at level 12
 pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 10, 28, 2, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 10, 28, 2]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 10, 28, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 10, 28, 2]


Solution : [4, 10, 28, 2] has cost 17.


Decide in level 12 among pending : [38, 24, 39, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 10, 28, 2, 13]


New level: 13
 pending : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 10, 28, 2, 13]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 10, 28, 2, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 2097152), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 10, 28, 2, 13]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 10, 28, 2, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 2097152), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19]
 solution : [4, 10, 28, 2, 13]


Solution : [4, 10, 28, 2, 13] has cost 24.


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 19]
 solution : [4, 10, 28, 2, 13]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 10, 28, 2, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 10, 28, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 10, 28, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 10, 28, 2]


Solution : [4, 10, 28, 2] has cost 17.


Decide in level 13 among pending : [38, 24, 39, 8, 20, 19, 16, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 10, 28, 2, 19]


New level: 14
 pending : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 10, 28, 2, 19]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 15, 14]
 solution : [4, 10, 28, 2, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {8, 20, 14}

After reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 10, 28, 2, 19]


Before reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 10, 28, 2, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15]
 solution : [4, 10, 28, 2, 19]


Solution : [4, 10, 28, 2, 19] has cost 26.


Before backtrack at level 14
 pending : [38, 24, 39, 16, 15]
 solution : [4, 10, 28, 2, 19]

After backtrack at level 14
 pending : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 10, 28, 2, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 10, 28, 2]


Before reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 10, 28, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 24, 39, 16, 15, 8, 20, 14]
 solution : [4, 10, 28, 2]


Solution : [4, 10, 28, 2] has cost 17.


Decide in level 14 among pending : [38, 24, 39, 16, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 10, 28, 2, 15]


New level: 15
 pending : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 10, 28, 2, 15]


Before reduction : 
 pending  : [38, 24, 39, 16, 8, 20, 14]
 solution : [4, 10, 28, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 14}

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 10, 28, 2, 15]


Before reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 10, 28, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20]
 solution : [4, 10, 28, 2, 15]


Solution : [4, 10, 28, 2, 15] has cost 24.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20]
 solution : [4, 10, 28, 2, 15]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 10, 28, 2, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 10, 28, 2]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 16, 14]
 solution : [4, 10, 28, 2]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 10, 28, 2, 16]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 10, 28, 2, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14]
 solution : [4, 10, 28, 2, 16]


Solution : [4, 10, 28, 2, 16] has cost 24.


Before backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14]
 solution : [4, 10, 28, 2, 16]

After backtrack at level 15
 pending : [38, 24, 39, 8, 20, 14, 16]
 solution : [4, 10, 28, 2]


Before backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16]
 solution : [4, 10, 28, 2]

After backtrack at level 14
 pending : [38, 24, 39, 8, 20, 14, 16, 15]
 solution : [4, 10, 28, 2]


Before backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 15]
 solution : [4, 10, 28, 2]

After backtrack at level 13
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 10, 28, 2]


Before backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 10, 28, 2]

After backtrack at level 12
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 10, 28, 2]


Before backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 10, 28, 2]

After backtrack at level 11
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18]
 solution : [4, 10, 28]


Before backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18]
 solution : [4, 10, 28]

After backtrack at level 10
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26]
 solution : [4, 10, 28]


Before backtrack at level 9
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26]
 solution : [4, 10, 28]

After backtrack at level 9
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 27]
 solution : [4, 10, 28]


Before backtrack at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 27]
 solution : [4, 10, 28]

After backtrack at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 27, 37]
 solution : [4, 10, 28]


Invert decision for 28 at level 7


New level: 8
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 27, 37]
 solution : [4, 10]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 27, 37]
 solution : [4, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 27, 37]
 solution : [4, 10]


Solution : [4, 10] has cost 9.


Decide in level 8 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 27, 37]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37]
 solution : [4, 10, 27]


New level: 9
 pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37]
 solution : [4, 10, 27]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37]
 solution : [4, 10, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 2048), (34, -1), (35, 0), (36, 16777216), (37, 512), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : {35, 31}

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 37]
 solution : [4, 10, 27]


Before reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 37]
 solution : [4, 10, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 2048), (34, -1), (35, 0), (36, 16777216), (37, 512), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 37]
 solution : [4, 10, 27]


Solution : [4, 10, 27] has cost 16.


Decide in level 9 among pending : [38, 24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 37]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 38 with phase True at level 9

After decision at level 9
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 37]
 solution : [4, 10, 27, 38]


New level: 10
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 37]
 solution : [4, 10, 27, 38]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 37]
 solution : [4, 10, 27, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, 67108864), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 16777216), (37, 0), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : {37}

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26]
 solution : [4, 10, 27, 38]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26]
 solution : [4, 10, 27, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 16777216), (37, 0), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26]
 solution : [4, 10, 27, 38]


Solution : [4, 10, 27, 38] has cost 34.


Before backtrack at level 10
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26]
 solution : [4, 10, 27, 38]

After backtrack at level 10
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 37]
 solution : [4, 10, 27, 38]


Invert decision for 38 at level 9


New level: 10
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 37]
 solution : [4, 10, 27]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 37]
 solution : [4, 10, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 4194304), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, -1), (39, 524288), (40, 512), (41, -1), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, -1), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 37]
 solution : [4, 10, 27]


Solution : [4, 10, 27] has cost 16.


Decide in level 10 among pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 18, 26, 37]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, -1), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 18 with phase True at level 10

After decision at level 10
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37]
 solution : [4, 10, 27, 18]


New level: 11
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37]
 solution : [4, 10, 27, 18]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37]
 solution : [4, 10, 27, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, -1), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, -1), (39, 2048), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 11 : {8, 19, 20, 14}

After reduction : 
 pending  : [24, 39, 16, 15, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37]
 solution : [4, 10, 27, 18]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37]
 solution : [4, 10, 27, 18]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, -1), (39, 2048), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, -1), (39, 2048), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37]
 solution : [4, 10, 27, 18]


Solution : [4, 10, 27, 18] has cost 25.


Before backtrack at level 11
 pending : [24, 39, 16, 15, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37]
 solution : [4, 10, 27, 18]

After backtrack at level 11
 pending : [24, 39, 16, 15, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 8, 20, 14, 19]
 solution : [4, 10, 27, 18]


Invert decision for 18 at level 10


New level: 11
 pending : [24, 39, 16, 15, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 8, 20, 14, 19]
 solution : [4, 10, 27]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 8, 20, 14, 19]
 solution : [4, 10, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 32768), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, -1), (39, 2048), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, -1), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 8, 20, 14, 19]
 solution : [4, 10, 27]


Solution : [4, 10, 27] has cost 16.


Decide in level 11 among pending : [24, 39, 16, 15, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, -1), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [24, 39, 16, 15, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 8, 20, 14, 19]
 solution : [4, 10, 27, 2]


New level: 12
 pending : [24, 39, 16, 15, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 8, 20, 14, 19]
 solution : [4, 10, 27, 2]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 37, 8, 20, 14, 19]
 solution : [4, 10, 27, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16777216), (3, 131072), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 16777216), (37, 512), (38, -1), (39, 2097152), (40, 2048), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 512), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {33, 3, 36, 40, 42, 43, 47, 48, 51, 26, 29}

After reduction : 
 pending  : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19]
 solution : [4, 10, 27, 2]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19]
 solution : [4, 10, 27, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 512), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19]
 solution : [4, 10, 27, 2]


Solution : [4, 10, 27, 2] has cost 20.


Before backtrack at level 12
 pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19]
 solution : [4, 10, 27, 2]

After backtrack at level 12
 pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 10, 27, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 10, 27]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 10, 27]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 512), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {33, 3, 36, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19]
 solution : [4, 10, 27, 26]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19]
 solution : [4, 10, 27, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, 512), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19]
 solution : [4, 10, 27, 26]


Solution : [4, 10, 27, 26] has cost 23.


Before backtrack at level 12
 pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19]
 solution : [4, 10, 27, 26]

After backtrack at level 12
 pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36]
 solution : [4, 10, 27]


Before backtrack at level 11
 pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36]
 solution : [4, 10, 27]

After backtrack at level 11
 pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 10, 27]


Before backtrack at level 10
 pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 10, 27]

After backtrack at level 10
 pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18]
 solution : [4, 10, 27]


Before backtrack at level 9
 pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18]
 solution : [4, 10, 27]

After backtrack at level 9
 pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, 512), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10]


Solution : [4, 10] has cost 9.


Decide in level 9 among pending : [24, 39, 16, 15, 13, 37, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 37 with phase True at level 9

After decision at level 9
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10, 37]


New level: 10
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10, 37]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10, 37]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, 134217728), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 33554432), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10, 37]


Solution : [4, 10, 37] has cost 23.


Before backtrack at level 10
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10, 37]

After backtrack at level 10
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10, 37]


Invert decision for 37 at level 9


New level: 10
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 524288), (32, -1), (33, 8192), (34, -1), (35, 4096), (36, 67108864), (37, -1), (38, 33554432), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10]


Solution : [4, 10] has cost 9.


Decide in level 10 among pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]

Coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10, 26]


New level: 11
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10, 26]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 31, 35, 38]
 solution : [4, 10, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 67108864), (3, 524288), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 262144), (15, 4194304), (16, 131072), (17, -1), (18, 33554432), (19, 16777216), (20, 557056), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 1048576), (32, -1), (33, 8192), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 67108864), (39, 2097152), (40, 8192), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 131072), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 2, 3, 36, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 38]
 solution : [4, 10, 26]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 38]
 solution : [4, 10, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 131072), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 38]
 solution : [4, 10, 26]


Solution : [4, 10, 26] has cost 16.


Decide in level 11 among pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 38]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 38]
 solution : [4, 10, 26, 18]


New level: 12
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 38]
 solution : [4, 10, 26, 18]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 38]
 solution : [4, 10, 26, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {8, 19, 20, 14}

After reduction : 
 pending  : [24, 39, 16, 15, 13, 38]
 solution : [4, 10, 26, 18]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 38]
 solution : [4, 10, 26, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 38]
 solution : [4, 10, 26, 18]


Solution : [4, 10, 26, 18] has cost 25.


Before backtrack at level 12
 pending : [24, 39, 16, 15, 13, 38]
 solution : [4, 10, 26, 18]

After backtrack at level 12
 pending : [24, 39, 16, 15, 13, 38, 8, 20, 14, 19]
 solution : [4, 10, 26, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [24, 39, 16, 15, 13, 38, 8, 20, 14, 19]
 solution : [4, 10, 26]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 38, 8, 20, 14, 19]
 solution : [4, 10, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 38, 8, 20, 14, 19]
 solution : [4, 10, 26]


Solution : [4, 10, 26] has cost 16.


Decide in level 12 among pending : [24, 39, 16, 15, 13, 38, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [24, 39, 16, 15, 38, 8, 20, 14, 19]
 solution : [4, 10, 26, 13]


New level: 13
 pending : [24, 39, 16, 15, 38, 8, 20, 14, 19]
 solution : [4, 10, 26, 13]


Before reduction : 
 pending  : [24, 39, 16, 15, 38, 8, 20, 14, 19]
 solution : [4, 10, 26, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 2097152), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [24, 39, 38, 8, 20, 19]
 solution : [4, 10, 26, 13]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 19]
 solution : [4, 10, 26, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 2097152), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20, 19]
 solution : [4, 10, 26, 13]


Solution : [4, 10, 26, 13] has cost 23.


Before backtrack at level 13
 pending : [24, 39, 38, 8, 20, 19]
 solution : [4, 10, 26, 13]

After backtrack at level 13
 pending : [24, 39, 38, 8, 20, 19, 16, 15, 14]
 solution : [4, 10, 26, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [24, 39, 38, 8, 20, 19, 16, 15, 14]
 solution : [4, 10, 26]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 19, 16, 15, 14]
 solution : [4, 10, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20, 19, 16, 15, 14]
 solution : [4, 10, 26]


Solution : [4, 10, 26] has cost 16.


Decide in level 13 among pending : [24, 39, 38, 8, 20, 19, 16, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [24, 39, 38, 8, 20, 16, 15, 14]
 solution : [4, 10, 26, 19]


New level: 14
 pending : [24, 39, 38, 8, 20, 16, 15, 14]
 solution : [4, 10, 26, 19]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 16, 15, 14]
 solution : [4, 10, 26, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {8, 20, 14}

After reduction : 
 pending  : [24, 39, 38, 16, 15]
 solution : [4, 10, 26, 19]


Before reduction : 
 pending  : [24, 39, 38, 16, 15]
 solution : [4, 10, 26, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 39, 38, 16, 15]
 solution : [4, 10, 26, 19]


Solution : [4, 10, 26, 19] has cost 25.


Before backtrack at level 14
 pending : [24, 39, 38, 16, 15]
 solution : [4, 10, 26, 19]

After backtrack at level 14
 pending : [24, 39, 38, 16, 15, 8, 20, 14]
 solution : [4, 10, 26, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [24, 39, 38, 16, 15, 8, 20, 14]
 solution : [4, 10, 26]


Before reduction : 
 pending  : [24, 39, 38, 16, 15, 8, 20, 14]
 solution : [4, 10, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 39, 38, 16, 15, 8, 20, 14]
 solution : [4, 10, 26]


Solution : [4, 10, 26] has cost 16.


Decide in level 14 among pending : [24, 39, 38, 16, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [24, 39, 38, 16, 8, 20, 14]
 solution : [4, 10, 26, 15]


New level: 15
 pending : [24, 39, 38, 16, 8, 20, 14]
 solution : [4, 10, 26, 15]


Before reduction : 
 pending  : [24, 39, 38, 16, 8, 20, 14]
 solution : [4, 10, 26, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 14}

After reduction : 
 pending  : [24, 39, 38, 8, 20]
 solution : [4, 10, 26, 15]


Before reduction : 
 pending  : [24, 39, 38, 8, 20]
 solution : [4, 10, 26, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20]
 solution : [4, 10, 26, 15]


Solution : [4, 10, 26, 15] has cost 23.


Before backtrack at level 15
 pending : [24, 39, 38, 8, 20]
 solution : [4, 10, 26, 15]

After backtrack at level 15
 pending : [24, 39, 38, 8, 20, 16, 14]
 solution : [4, 10, 26, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [24, 39, 38, 8, 20, 16, 14]
 solution : [4, 10, 26]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 16, 14]
 solution : [4, 10, 26]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20, 14]
 solution : [4, 10, 26, 16]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 14]
 solution : [4, 10, 26, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20, 14]
 solution : [4, 10, 26, 16]


Solution : [4, 10, 26, 16] has cost 23.


Before backtrack at level 15
 pending : [24, 39, 38, 8, 20, 14]
 solution : [4, 10, 26, 16]

After backtrack at level 15
 pending : [24, 39, 38, 8, 20, 14, 16]
 solution : [4, 10, 26]


Before backtrack at level 14
 pending : [24, 39, 38, 8, 20, 14, 16]
 solution : [4, 10, 26]

After backtrack at level 14
 pending : [24, 39, 38, 8, 20, 14, 16, 15]
 solution : [4, 10, 26]


Before backtrack at level 13
 pending : [24, 39, 38, 8, 20, 14, 16, 15]
 solution : [4, 10, 26]

After backtrack at level 13
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19]
 solution : [4, 10, 26]


Before backtrack at level 12
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19]
 solution : [4, 10, 26]

After backtrack at level 12
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 10, 26]


Before backtrack at level 11
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 10, 26]

After backtrack at level 11
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 18]
 solution : [4, 10, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 18]
 solution : [4, 10]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 18]
 solution : [4, 10]

Essensial at level 11 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 65536), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 36, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 2]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 65536), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 10, 2]


Solution : [4, 10, 2] has cost 13.


Decide in level 11 among pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 10, 2, 18]


New level: 12
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 10, 2, 18]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 10, 2, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, 16777216), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {8, 19, 20, 14}

After reduction : 
 pending  : [24, 39, 38, 16, 15, 13]
 solution : [4, 10, 2, 18]


Before reduction : 
 pending  : [24, 39, 38, 16, 15, 13]
 solution : [4, 10, 2, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 39, 38, 16, 15, 13]
 solution : [4, 10, 2, 18]


Solution : [4, 10, 2, 18] has cost 22.


Before backtrack at level 12
 pending : [24, 39, 38, 16, 15, 13]
 solution : [4, 10, 2, 18]

After backtrack at level 12
 pending : [24, 39, 38, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 10, 2, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [24, 39, 38, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 10, 2]


Before reduction : 
 pending  : [24, 39, 38, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 10, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 131072), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 39, 38, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 10, 2]


Solution : [4, 10, 2] has cost 13.


Decide in level 12 among pending : [24, 39, 38, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [24, 39, 38, 16, 15, 8, 20, 14, 19]
 solution : [4, 10, 2, 13]


New level: 13
 pending : [24, 39, 38, 16, 15, 8, 20, 14, 19]
 solution : [4, 10, 2, 13]


Before reduction : 
 pending  : [24, 39, 38, 16, 15, 8, 20, 14, 19]
 solution : [4, 10, 2, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, 8388608), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 2097152), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {16, 14, 15}

After reduction : 
 pending  : [24, 39, 38, 8, 20, 19]
 solution : [4, 10, 2, 13]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 19]
 solution : [4, 10, 2, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 2097152), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20, 19]
 solution : [4, 10, 2, 13]


Solution : [4, 10, 2, 13] has cost 20.


Before backtrack at level 13
 pending : [24, 39, 38, 8, 20, 19]
 solution : [4, 10, 2, 13]

After backtrack at level 13
 pending : [24, 39, 38, 8, 20, 19, 16, 15, 14]
 solution : [4, 10, 2, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [24, 39, 38, 8, 20, 19, 16, 15, 14]
 solution : [4, 10, 2]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 19, 16, 15, 14]
 solution : [4, 10, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 2097152), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20, 19, 16, 15, 14]
 solution : [4, 10, 2]


Solution : [4, 10, 2] has cost 13.


Decide in level 13 among pending : [24, 39, 38, 8, 20, 19, 16, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [24, 39, 38, 8, 20, 16, 15, 14]
 solution : [4, 10, 2, 19]


New level: 14
 pending : [24, 39, 38, 8, 20, 16, 15, 14]
 solution : [4, 10, 2, 19]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 16, 15, 14]
 solution : [4, 10, 2, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, 8388608), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {8, 20, 14}

After reduction : 
 pending  : [24, 39, 38, 16, 15]
 solution : [4, 10, 2, 19]


Before reduction : 
 pending  : [24, 39, 38, 16, 15]
 solution : [4, 10, 2, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 39, 38, 16, 15]
 solution : [4, 10, 2, 19]


Solution : [4, 10, 2, 19] has cost 22.


Before backtrack at level 14
 pending : [24, 39, 38, 16, 15]
 solution : [4, 10, 2, 19]

After backtrack at level 14
 pending : [24, 39, 38, 16, 15, 8, 20, 14]
 solution : [4, 10, 2, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [24, 39, 38, 16, 15, 8, 20, 14]
 solution : [4, 10, 2]


Before reduction : 
 pending  : [24, 39, 38, 16, 15, 8, 20, 14]
 solution : [4, 10, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 32768), (16, 32768), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 39, 38, 16, 15, 8, 20, 14]
 solution : [4, 10, 2]


Solution : [4, 10, 2] has cost 13.


Decide in level 14 among pending : [24, 39, 38, 16, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 14

After decision at level 14
 pending : [24, 39, 38, 16, 8, 20, 14]
 solution : [4, 10, 2, 15]


New level: 15
 pending : [24, 39, 38, 16, 8, 20, 14]
 solution : [4, 10, 2, 15]


Before reduction : 
 pending  : [24, 39, 38, 16, 8, 20, 14]
 solution : [4, 10, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, 4194304), (16, 131072), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {16, 14}

After reduction : 
 pending  : [24, 39, 38, 8, 20]
 solution : [4, 10, 2, 15]


Before reduction : 
 pending  : [24, 39, 38, 8, 20]
 solution : [4, 10, 2, 15]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20]
 solution : [4, 10, 2, 15]


Solution : [4, 10, 2, 15] has cost 20.


Before backtrack at level 15
 pending : [24, 39, 38, 8, 20]
 solution : [4, 10, 2, 15]

After backtrack at level 15
 pending : [24, 39, 38, 8, 20, 16, 14]
 solution : [4, 10, 2, 15]


Invert decision for 15 at level 14


New level: 15
 pending : [24, 39, 38, 8, 20, 16, 14]
 solution : [4, 10, 2]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 16, 14]
 solution : [4, 10, 2]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 131072), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 133120), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20, 14]
 solution : [4, 10, 2, 16]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 14]
 solution : [4, 10, 2, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20, 14]
 solution : [4, 10, 2, 16]


Solution : [4, 10, 2, 16] has cost 20.


Before backtrack at level 15
 pending : [24, 39, 38, 8, 20, 14]
 solution : [4, 10, 2, 16]

After backtrack at level 15
 pending : [24, 39, 38, 8, 20, 14, 16]
 solution : [4, 10, 2]


Before backtrack at level 14
 pending : [24, 39, 38, 8, 20, 14, 16]
 solution : [4, 10, 2]

After backtrack at level 14
 pending : [24, 39, 38, 8, 20, 14, 16, 15]
 solution : [4, 10, 2]


Before backtrack at level 13
 pending : [24, 39, 38, 8, 20, 14, 16, 15]
 solution : [4, 10, 2]

After backtrack at level 13
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19]
 solution : [4, 10, 2]


Before backtrack at level 12
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19]
 solution : [4, 10, 2]

After backtrack at level 12
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 10, 2]


Before backtrack at level 11
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 10, 2]

After backtrack at level 11
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18]
 solution : [4, 10]


Before backtrack at level 10
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18]
 solution : [4, 10]

After backtrack at level 10
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26]
 solution : [4, 10]


Before backtrack at level 9
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26]
 solution : [4, 10]

After backtrack at level 9
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37]
 solution : [4, 10]


Before backtrack at level 8
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37]
 solution : [4, 10]

After backtrack at level 8
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27]
 solution : [4, 10]


Before backtrack at level 7
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27]
 solution : [4, 10]

After backtrack at level 7
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28]
 solution : [4, 10]


Before backtrack at level 6
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28]
 solution : [4, 10]

After backtrack at level 6
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28, 22]
 solution : [4, 10]


Before backtrack at level 5
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28, 22]
 solution : [4, 10]

After backtrack at level 5
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28, 22, 34]
 solution : [4, 10]


Before backtrack at level 4
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28, 22, 34]
 solution : [4, 10]

After backtrack at level 4
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28, 22, 34, 21]
 solution : [4, 10]


Before backtrack at level 3
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28, 22, 34, 21]
 solution : [4, 10]

After backtrack at level 3
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28, 22, 34, 21, 25]
 solution : [4, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28, 22, 34, 21, 25]
 solution : [4]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28, 22, 34, 21, 25]
 solution : [4]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 65536), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 270336), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28, 22, 34, 21, 25]
 solution : [4]


Solution : [4] has cost 6.


Decide in level 3 among pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 28, 22, 34, 21, 25]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 22, 34, 21, 25]
 solution : [4, 28]


New level: 4
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 22, 34, 21, 25]
 solution : [4, 28]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 22, 34, 21, 25]
 solution : [4, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 22, 34, 21, 25]
 solution : [4, 28]


Solution : [4, 28] has cost 10.


Decide in level 4 among pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 22, 34, 21, 25]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 25 with phase True at level 4

After decision at level 4
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 22, 34, 21]
 solution : [4, 28, 25]


New level: 5
 pending : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 22, 34, 21]
 solution : [4, 28, 25]


Before reduction : 
 pending  : [24, 39, 38, 8, 20, 14, 16, 15, 19, 13, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 26, 37, 27, 22, 34, 21]
 solution : [4, 28, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24}

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 37, 27, 34]
 solution : [4, 28, 25]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 37, 27, 34]
 solution : [4, 28, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 37, 27, 34]
 solution : [4, 28, 25]


Solution : [4, 28, 25] has cost 14.


Decide in level 5 among pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 37, 27, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 37, 27]
 solution : [4, 28, 25, 34]


New level: 6
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 37, 27]
 solution : [4, 28, 25, 34]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 37, 27]
 solution : [4, 28, 25, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : {35, 37, 31}

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27]
 solution : [4, 28, 25, 34]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27]
 solution : [4, 28, 25, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27]
 solution : [4, 28, 25, 34]


Solution : [4, 28, 25, 34] has cost 27.


Before backtrack at level 6
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27]
 solution : [4, 28, 25, 34]

After backtrack at level 6
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27, 31, 35, 37]
 solution : [4, 28, 25, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27, 31, 35, 37]
 solution : [4, 28, 25]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27, 31, 35, 37]
 solution : [4, 28, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27, 31, 35, 37]
 solution : [4, 28, 25]


Solution : [4, 28, 25] has cost 14.


Decide in level 6 among pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25, 27]


New level: 7
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25, 27]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {35, 37, 31}

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 28, 25, 27]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 28, 25, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 28, 25, 27]


Solution : [4, 28, 25, 27] has cost 21.


Before backtrack at level 7
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 28, 25, 27]

After backtrack at level 7
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25]


Before reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25]


Solution : [4, 28, 25] has cost 14.


Decide in level 7 among pending : [38, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25, 2]


New level: 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25, 2]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 28, 25, 2]


Before reduction : 
 pending  : []
 solution : [4, 28, 25, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 28, 25, 2]


Solution : [4, 28, 25, 2] has cost 18.


Before backtrack at level 8
 pending : []
 solution : [4, 28, 25, 2]

After backtrack at level 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 25]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 28, 25, 26]


Before reduction : 
 pending  : []
 solution : [4, 28, 25, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 28, 25, 26]


Solution : [4, 28, 25, 26] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [4, 28, 25, 26]

After backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37]
 solution : [4, 28, 25]


Before backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37]
 solution : [4, 28, 25]

After backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2]
 solution : [4, 28, 25]


Before backtrack at level 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2]
 solution : [4, 28, 25]

After backtrack at level 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27]
 solution : [4, 28, 25]


Before backtrack at level 5
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27]
 solution : [4, 28, 25]

After backtrack at level 5
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]
 solution : [4, 28, 25]


Invert decision for 25 at level 4


New level: 5
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]
 solution : [4, 28]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]
 solution : [4, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]
 solution : [4, 28]


Solution : [4, 28] has cost 10.


Decide in level 5 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 21 with phase True at level 5

After decision at level 5
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 28, 21]


New level: 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 28, 21]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 28, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24}

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]
 solution : [4, 28, 21]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]
 solution : [4, 28, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]
 solution : [4, 28, 21]


Solution : [4, 28, 21] has cost 17.


Decide in level 6 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 34 with phase True at level 6

After decision at level 6
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27]
 solution : [4, 28, 21, 34]


New level: 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27]
 solution : [4, 28, 21, 34]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27]
 solution : [4, 28, 21, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {35, 37, 31}

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27]
 solution : [4, 28, 21, 34]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27]
 solution : [4, 28, 21, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27]
 solution : [4, 28, 21, 34]


Solution : [4, 28, 21, 34] has cost 30.


Before backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27]
 solution : [4, 28, 21, 34]

After backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]
 solution : [4, 28, 21, 34]


Invert decision for 34 at level 6


New level: 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]
 solution : [4, 28, 21]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]
 solution : [4, 28, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]
 solution : [4, 28, 21]


Solution : [4, 28, 21] has cost 17.


Decide in level 7 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 7

After decision at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21, 27]


New level: 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21, 27]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {35, 37, 31}

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 28, 21, 27]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 28, 21, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 28, 21, 27]


Solution : [4, 28, 21, 27] has cost 24.


Before backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 28, 21, 27]

After backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21, 27]


Invert decision for 27 at level 7


New level: 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21]


Solution : [4, 28, 21] has cost 17.


Decide in level 8 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21, 26]


New level: 9
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21, 26]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 2, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 28, 21, 26]


Before reduction : 
 pending  : []
 solution : [4, 28, 21, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 28, 21, 26]


Solution : [4, 28, 21, 26] has cost 24.


Before backtrack at level 9
 pending : []
 solution : [4, 28, 21, 26]

After backtrack at level 9
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 31, 35, 37]
 solution : [4, 28, 21]

Essensial at level 9 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 28, 21, 2]


Before reduction : 
 pending  : []
 solution : [4, 28, 21, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 28, 21, 2]


Solution : [4, 28, 21, 2] has cost 21.


Before backtrack at level 9
 pending : []
 solution : [4, 28, 21, 2]

After backtrack at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37]
 solution : [4, 28, 21]


Before backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37]
 solution : [4, 28, 21]

After backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26]
 solution : [4, 28, 21]


Before backtrack at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26]
 solution : [4, 28, 21]

After backtrack at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27]
 solution : [4, 28, 21]


Before backtrack at level 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27]
 solution : [4, 28, 21]

After backtrack at level 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 28, 21]


Invert decision for 21 at level 5


New level: 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 28]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 28]


Solution : [4, 28] has cost 10.


Decide in level 6 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 22 with phase True at level 6

After decision at level 6
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 34]
 solution : [4, 28, 22]


New level: 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 34]
 solution : [4, 28, 22]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 34]
 solution : [4, 28, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 24}

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 34]
 solution : [4, 28, 22]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 34]
 solution : [4, 28, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 34]
 solution : [4, 28, 22]


Solution : [4, 28, 22] has cost 17.


Decide in level 7 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 34 with phase True at level 7

After decision at level 7
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27]
 solution : [4, 28, 22, 34]


New level: 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27]
 solution : [4, 28, 22, 34]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 26, 27]
 solution : [4, 28, 22, 34]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, 1073741824), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {35, 37, 31}

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27]
 solution : [4, 28, 22, 34]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27]
 solution : [4, 28, 22, 34]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27]
 solution : [4, 28, 22, 34]


Solution : [4, 28, 22, 34] has cost 30.


Before backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27]
 solution : [4, 28, 22, 34]

After backtrack at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27, 31, 35, 37]
 solution : [4, 28, 22, 34]


Invert decision for 34 at level 7


New level: 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27, 31, 35, 37]
 solution : [4, 28, 22]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27, 31, 35, 37]
 solution : [4, 28, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27, 31, 35, 37]
 solution : [4, 28, 22]


Solution : [4, 28, 22] has cost 17.


Decide in level 8 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 27, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22, 27]


New level: 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {35, 37, 31}

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 28, 22, 27]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 28, 22, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 28, 22, 27]


Solution : [4, 28, 22, 27] has cost 24.


Before backtrack at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 28, 22, 27]

After backtrack at level 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22]


Before reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22]


Solution : [4, 28, 22] has cost 17.


Decide in level 9 among pending : [2, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 2 with phase True at level 9

After decision at level 9
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22, 2]


New level: 10
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22, 2]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 67108864), (37, 2048), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 28, 22, 2]


Before reduction : 
 pending  : []
 solution : [4, 28, 22, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [4, 28, 22, 2]


Solution : [4, 28, 22, 2] has cost 21.


Before backtrack at level 10
 pending : []
 solution : [4, 28, 22, 2]

After backtrack at level 10
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22, 2]


Invert decision for 2 at level 9


New level: 10
 pending : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22]


Before reduction : 
 pending  : [38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 37]
 solution : [4, 28, 22]

Essensial at level 10 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 10 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 28, 22, 26]


Before reduction : 
 pending  : []
 solution : [4, 28, 22, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [4, 28, 22, 26]


Solution : [4, 28, 22, 26] has cost 24.


Before backtrack at level 10
 pending : []
 solution : [4, 28, 22, 26]

After backtrack at level 10
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37]
 solution : [4, 28, 22]


Before backtrack at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37]
 solution : [4, 28, 22]

After backtrack at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2]
 solution : [4, 28, 22]


Before backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2]
 solution : [4, 28, 22]

After backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27]
 solution : [4, 28, 22]


Before backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27]
 solution : [4, 28, 22]

After backtrack at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 34]
 solution : [4, 28, 22]


Invert decision for 22 at level 6


New level: 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 34]
 solution : [4, 28]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 34]
 solution : [4, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 34]
 solution : [4, 28]


Solution : [4, 28] has cost 10.


Decide in level 7 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 34 with phase True at level 7

After decision at level 7
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 34]


New level: 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 34]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 34]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, 1073741824), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 33554432), (37, 16384), (38, 268435456), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : {35, 31}

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 34]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 34]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 33554432), (37, 16384), (38, 268435456), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 16384), (38, 268435456), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 34]


Solution : [4, 28, 34] has cost 23.


Before backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 34]

After backtrack at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28, 34]


Invert decision for 34 at level 7


New level: 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 16384), (38, 268435456), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28]


Solution : [4, 28] has cost 10.


Decide in level 8 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 37 with phase True at level 8

After decision at level 8
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28, 37]


New level: 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28, 37]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28, 37]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, 536870912), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 268435456), (28, -1), (29, 1048576), (30, -1), (31, 1048576), (32, -1), (33, 16384), (34, -1), (35, 8192), (36, 134217728), (37, -1), (38, 134217728), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28, 37]


Solution : [4, 28, 37] has cost 24.


Before backtrack at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28, 37]

After backtrack at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28, 37]


Invert decision for 37 at level 8


New level: 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 268435456), (28, -1), (29, 1048576), (30, -1), (31, 1048576), (32, -1), (33, 16384), (34, -1), (35, 8192), (36, 134217728), (37, -1), (38, 134217728), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28]


Solution : [4, 28] has cost 10.


Decide in level 9 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28, 27]


New level: 10
 pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28, 27]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 31, 35]
 solution : [4, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {35, 31}

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 27]


Before reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 27]


Solution : [4, 28, 27] has cost 17.


Decide in level 10 among pending : [26, 38, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 27, 38]


New level: 11
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 27, 38]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 27, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8388608), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 8388608), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 1048576), (40, 1024), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 27, 38]


Solution : [4, 28, 27, 38] has cost 35.


Before backtrack at level 11
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 27, 38]

After backtrack at level 11
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 27, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 27]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8388608), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 8388608), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 1048576), (40, 1024), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 27]


Solution : [4, 28, 27] has cost 17.


Decide in level 11 among pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 28, 27, 18]


New level: 12
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 28, 27, 18]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 28, 27, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4096), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : {8, 19, 20, 14}

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 16, 15, 13]
 solution : [4, 28, 27, 18]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 16, 15, 13]
 solution : [4, 28, 27, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4096), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4096), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 16, 15, 13]
 solution : [4, 28, 27, 18]


Solution : [4, 28, 27, 18] has cost 26.


Before backtrack at level 12
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 16, 15, 13]
 solution : [4, 28, 27, 18]

After backtrack at level 12
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4096), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27]


Solution : [4, 28, 27] has cost 17.


Decide in level 12 among pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 26 with phase True at level 12

After decision at level 12
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27, 26]


New level: 13
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27, 26]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 13 : {33, 2, 3, 36, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27, 26]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27, 26]


Solution : [4, 28, 27, 26] has cost 24.


Before backtrack at level 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27, 26]

After backtrack at level 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 28, 27, 26]


Invert decision for 26 at level 12


New level: 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 28, 27]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 28, 27]

Essensial at level 13 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 13 : {33, 3, 36, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27, 2]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27, 2]


Solution : [4, 28, 27, 2] has cost 21.


Before backtrack at level 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 27, 2]

After backtrack at level 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36]
 solution : [4, 28, 27]


Before backtrack at level 12
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36]
 solution : [4, 28, 27]

After backtrack at level 12
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 28, 27]


Before backtrack at level 11
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 28, 27]

After backtrack at level 11
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18]
 solution : [4, 28, 27]


Before backtrack at level 10
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18]
 solution : [4, 28, 27]

After backtrack at level 10
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35, 38]
 solution : [4, 28, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35, 38]
 solution : [4, 28]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35, 38]
 solution : [4, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35, 38]
 solution : [4, 28]


Solution : [4, 28] has cost 10.


Decide in level 10 among pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35, 38]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]
 solution : [4, 28, 38]


New level: 11
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]
 solution : [4, 28, 38]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]
 solution : [4, 28, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 134217728), (37, -1), (38, -1), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]
 solution : [4, 28, 38]


Solution : [4, 28, 38] has cost 28.


Before backtrack at level 11
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]
 solution : [4, 28, 38]

After backtrack at level 11
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]
 solution : [4, 28, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]
 solution : [4, 28]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]
 solution : [4, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 2097152), (32, -1), (33, 4096), (34, -1), (35, 4096), (36, 134217728), (37, -1), (38, -1), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, -1), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]
 solution : [4, 28]


Solution : [4, 28] has cost 10.


Decide in level 11 among pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, -1), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]
 solution : [4, 28, 2]


New level: 12
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]
 solution : [4, 28, 2]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 18, 31, 35]
 solution : [4, 28, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, -1), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {33, 3, 36, 35, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 18]
 solution : [4, 28, 2]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 18]
 solution : [4, 28, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 18]
 solution : [4, 28, 2]


Solution : [4, 28, 2] has cost 14.


Decide in level 12 among pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 2, 18]


New level: 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 2, 18]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 2, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {8, 19, 20, 14}

After reduction : 
 pending  : [24, 39, 16, 15, 13]
 solution : [4, 28, 2, 18]


Before reduction : 
 pending  : [24, 39, 16, 15, 13]
 solution : [4, 28, 2, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13]
 solution : [4, 28, 2, 18]


Solution : [4, 28, 2, 18] has cost 23.


Before backtrack at level 13
 pending : [24, 39, 16, 15, 13]
 solution : [4, 28, 2, 18]

After backtrack at level 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 2, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 2]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 2]


Solution : [4, 28, 2] has cost 14.


Decide in level 13 among pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 28, 2, 13]


New level: 14
 pending : [24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 28, 2, 13]


Before reduction : 
 pending  : [24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 28, 2, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 14, 15}

After reduction : 
 pending  : [24, 39, 8, 20, 19]
 solution : [4, 28, 2, 13]


Before reduction : 
 pending  : [24, 39, 8, 20, 19]
 solution : [4, 28, 2, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 19]
 solution : [4, 28, 2, 13]


Solution : [4, 28, 2, 13] has cost 21.


Before backtrack at level 14
 pending : [24, 39, 8, 20, 19]
 solution : [4, 28, 2, 13]

After backtrack at level 14
 pending : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 28, 2, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 28, 2]


Before reduction : 
 pending  : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 28, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 28, 2]


Solution : [4, 28, 2] has cost 14.


Decide in level 14 among pending : [24, 39, 8, 20, 19, 16, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [24, 39, 8, 20, 16, 15, 14]
 solution : [4, 28, 2, 19]


New level: 15
 pending : [24, 39, 8, 20, 16, 15, 14]
 solution : [4, 28, 2, 19]


Before reduction : 
 pending  : [24, 39, 8, 20, 16, 15, 14]
 solution : [4, 28, 2, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {8, 20, 14}

After reduction : 
 pending  : [24, 39, 16, 15]
 solution : [4, 28, 2, 19]


Before reduction : 
 pending  : [24, 39, 16, 15]
 solution : [4, 28, 2, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 16, 15]
 solution : [4, 28, 2, 19]


Solution : [4, 28, 2, 19] has cost 23.


Before backtrack at level 15
 pending : [24, 39, 16, 15]
 solution : [4, 28, 2, 19]

After backtrack at level 15
 pending : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 28, 2, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 28, 2]


Before reduction : 
 pending  : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 28, 2]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 28, 2]


Solution : [4, 28, 2] has cost 14.


Decide in level 15 among pending : [24, 39, 16, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 15

After decision at level 15
 pending : [24, 39, 16, 8, 20, 14]
 solution : [4, 28, 2, 15]


New level: 16
 pending : [24, 39, 16, 8, 20, 14]
 solution : [4, 28, 2, 15]


Before reduction : 
 pending  : [24, 39, 16, 8, 20, 14]
 solution : [4, 28, 2, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 14}

After reduction : 
 pending  : [24, 39, 8, 20]
 solution : [4, 28, 2, 15]


Before reduction : 
 pending  : [24, 39, 8, 20]
 solution : [4, 28, 2, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 39, 8, 20]
 solution : [4, 28, 2, 15]


Solution : [4, 28, 2, 15] has cost 21.


Before backtrack at level 16
 pending : [24, 39, 8, 20]
 solution : [4, 28, 2, 15]

After backtrack at level 16
 pending : [24, 39, 8, 20, 16, 14]
 solution : [4, 28, 2, 15]


Invert decision for 15 at level 15


New level: 16
 pending : [24, 39, 8, 20, 16, 14]
 solution : [4, 28, 2]


Before reduction : 
 pending  : [24, 39, 8, 20, 16, 14]
 solution : [4, 28, 2]

Essensial at level 16 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14]
 solution : [4, 28, 2, 16]


Before reduction : 
 pending  : [24, 39, 8, 20, 14]
 solution : [4, 28, 2, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14]
 solution : [4, 28, 2, 16]


Solution : [4, 28, 2, 16] has cost 21.


Before backtrack at level 16
 pending : [24, 39, 8, 20, 14]
 solution : [4, 28, 2, 16]

After backtrack at level 16
 pending : [24, 39, 8, 20, 14, 16]
 solution : [4, 28, 2]


Before backtrack at level 15
 pending : [24, 39, 8, 20, 14, 16]
 solution : [4, 28, 2]

After backtrack at level 15
 pending : [24, 39, 8, 20, 14, 16, 15]
 solution : [4, 28, 2]


Before backtrack at level 14
 pending : [24, 39, 8, 20, 14, 16, 15]
 solution : [4, 28, 2]

After backtrack at level 14
 pending : [24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 28, 2]


Before backtrack at level 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 28, 2]

After backtrack at level 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 28, 2]


Before backtrack at level 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 28, 2]

After backtrack at level 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 18]
 solution : [4, 28, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 18]
 solution : [4, 28]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 31, 35, 18]
 solution : [4, 28]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {33, 3, 36, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 26]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 28, 26]


Solution : [4, 28, 26] has cost 17.


Decide in level 12 among pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 28, 26, 18]


New level: 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 28, 26, 18]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 28, 26, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {8, 19, 20, 14}

After reduction : 
 pending  : [24, 39, 16, 15, 13]
 solution : [4, 28, 26, 18]


Before reduction : 
 pending  : [24, 39, 16, 15, 13]
 solution : [4, 28, 26, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13]
 solution : [4, 28, 26, 18]


Solution : [4, 28, 26, 18] has cost 26.


Before backtrack at level 13
 pending : [24, 39, 16, 15, 13]
 solution : [4, 28, 26, 18]

After backtrack at level 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 26, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 26]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 28, 26]


Solution : [4, 28, 26] has cost 17.


Decide in level 13 among pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 28, 26, 13]


New level: 14
 pending : [24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 28, 26, 13]


Before reduction : 
 pending  : [24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 28, 26, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 14, 15}

After reduction : 
 pending  : [24, 39, 8, 20, 19]
 solution : [4, 28, 26, 13]


Before reduction : 
 pending  : [24, 39, 8, 20, 19]
 solution : [4, 28, 26, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 19]
 solution : [4, 28, 26, 13]


Solution : [4, 28, 26, 13] has cost 24.


Before backtrack at level 14
 pending : [24, 39, 8, 20, 19]
 solution : [4, 28, 26, 13]

After backtrack at level 14
 pending : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 28, 26, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 28, 26]


Before reduction : 
 pending  : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 28, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 28, 26]


Solution : [4, 28, 26] has cost 17.


Decide in level 14 among pending : [24, 39, 8, 20, 19, 16, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [24, 39, 8, 20, 16, 15, 14]
 solution : [4, 28, 26, 19]


New level: 15
 pending : [24, 39, 8, 20, 16, 15, 14]
 solution : [4, 28, 26, 19]


Before reduction : 
 pending  : [24, 39, 8, 20, 16, 15, 14]
 solution : [4, 28, 26, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {8, 20, 14}

After reduction : 
 pending  : [24, 39, 16, 15]
 solution : [4, 28, 26, 19]


Before reduction : 
 pending  : [24, 39, 16, 15]
 solution : [4, 28, 26, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 16, 15]
 solution : [4, 28, 26, 19]


Solution : [4, 28, 26, 19] has cost 26.


Before backtrack at level 15
 pending : [24, 39, 16, 15]
 solution : [4, 28, 26, 19]

After backtrack at level 15
 pending : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 28, 26, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 28, 26]


Before reduction : 
 pending  : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 28, 26]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 28, 26]


Solution : [4, 28, 26] has cost 17.


Decide in level 15 among pending : [24, 39, 16, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 15

After decision at level 15
 pending : [24, 39, 16, 8, 20, 14]
 solution : [4, 28, 26, 15]


New level: 16
 pending : [24, 39, 16, 8, 20, 14]
 solution : [4, 28, 26, 15]


Before reduction : 
 pending  : [24, 39, 16, 8, 20, 14]
 solution : [4, 28, 26, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 14}

After reduction : 
 pending  : [24, 39, 8, 20]
 solution : [4, 28, 26, 15]


Before reduction : 
 pending  : [24, 39, 8, 20]
 solution : [4, 28, 26, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 39, 8, 20]
 solution : [4, 28, 26, 15]


Solution : [4, 28, 26, 15] has cost 24.


Before backtrack at level 16
 pending : [24, 39, 8, 20]
 solution : [4, 28, 26, 15]

After backtrack at level 16
 pending : [24, 39, 8, 20, 16, 14]
 solution : [4, 28, 26, 15]


Invert decision for 15 at level 15


New level: 16
 pending : [24, 39, 8, 20, 16, 14]
 solution : [4, 28, 26]


Before reduction : 
 pending  : [24, 39, 8, 20, 16, 14]
 solution : [4, 28, 26]

Essensial at level 16 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14]
 solution : [4, 28, 26, 16]


Before reduction : 
 pending  : [24, 39, 8, 20, 14]
 solution : [4, 28, 26, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14]
 solution : [4, 28, 26, 16]


Solution : [4, 28, 26, 16] has cost 24.


Before backtrack at level 16
 pending : [24, 39, 8, 20, 14]
 solution : [4, 28, 26, 16]

After backtrack at level 16
 pending : [24, 39, 8, 20, 14, 16]
 solution : [4, 28, 26]


Before backtrack at level 15
 pending : [24, 39, 8, 20, 14, 16]
 solution : [4, 28, 26]

After backtrack at level 15
 pending : [24, 39, 8, 20, 14, 16, 15]
 solution : [4, 28, 26]


Before backtrack at level 14
 pending : [24, 39, 8, 20, 14, 16, 15]
 solution : [4, 28, 26]

After backtrack at level 14
 pending : [24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 28, 26]


Before backtrack at level 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 28, 26]

After backtrack at level 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 28, 26]


Before backtrack at level 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 28, 26]

After backtrack at level 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18]
 solution : [4, 28]


Before backtrack at level 11
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18]
 solution : [4, 28]

After backtrack at level 11
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2]
 solution : [4, 28]


Before backtrack at level 10
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2]
 solution : [4, 28]

After backtrack at level 10
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38]
 solution : [4, 28]


Before backtrack at level 9
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38]
 solution : [4, 28]

After backtrack at level 9
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27]
 solution : [4, 28]


Before backtrack at level 8
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27]
 solution : [4, 28]

After backtrack at level 8
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37]
 solution : [4, 28]


Before backtrack at level 7
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37]
 solution : [4, 28]

After backtrack at level 7
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34]
 solution : [4, 28]


Before backtrack at level 6
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34]
 solution : [4, 28]

After backtrack at level 6
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34, 22]
 solution : [4, 28]


Before backtrack at level 5
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34, 22]
 solution : [4, 28]

After backtrack at level 5
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34, 22, 21]
 solution : [4, 28]


Before backtrack at level 4
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34, 22, 21]
 solution : [4, 28]

After backtrack at level 4
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34, 22, 21, 25]
 solution : [4, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34, 22, 21, 25]
 solution : [4]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34, 22, 21, 25]
 solution : [4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34, 22, 21, 25]
 solution : [4]


Solution : [4] has cost 6.


Decide in level 4 among pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34, 22, 21, 25]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 25 with phase True at level 4

After decision at level 4
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34, 22, 21]
 solution : [4, 25]


New level: 5
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34, 22, 21]
 solution : [4, 25]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 27, 37, 34, 22, 21]
 solution : [4, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, 4294967296), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, 2147483648), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24}

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 38, 27, 37, 34]
 solution : [4, 25]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 38, 27, 37, 34]
 solution : [4, 25]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, 2147483648), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, 2147483648), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 38, 27, 37, 34]
 solution : [4, 25]


Solution : [4, 25] has cost 10.


Decide in level 5 among pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 38, 27, 37, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, 2147483648), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 38, 27, 37]
 solution : [4, 25, 34]


New level: 6
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 38, 27, 37]
 solution : [4, 25, 34]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 2, 38, 27, 37]
 solution : [4, 25, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, 2147483648), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : {35, 37, 31}

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 27]
 solution : [4, 25, 34]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 27]
 solution : [4, 25, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 27]
 solution : [4, 25, 34]


Solution : [4, 25, 34] has cost 23.


Before backtrack at level 6
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 27]
 solution : [4, 25, 34]

After backtrack at level 6
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 27, 31, 35, 37]
 solution : [4, 25, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 27, 31, 35, 37]
 solution : [4, 25]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 27, 31, 35, 37]
 solution : [4, 25]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 4194304), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 27, 31, 35, 37]
 solution : [4, 25]


Solution : [4, 25] has cost 10.


Decide in level 6 among pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 27, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35, 37]
 solution : [4, 25, 27]


New level: 7
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35, 37]
 solution : [4, 25, 27]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35, 37]
 solution : [4, 25, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : {35, 37, 31}

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38]
 solution : [4, 25, 27]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38]
 solution : [4, 25, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38]
 solution : [4, 25, 27]


Solution : [4, 25, 27] has cost 17.


Decide in level 7 among pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38]
 solution : [4, 25, 27, 26]


New level: 8
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38]
 solution : [4, 25, 27, 26]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38]
 solution : [4, 25, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 8388608), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 2, 3, 36, 38, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [4, 25, 27, 26]


Before reduction : 
 pending  : []
 solution : [4, 25, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 25, 27, 26]


Solution : [4, 25, 27, 26] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [4, 25, 27, 26]

After backtrack at level 8
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38]
 solution : [4, 25, 27, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38]
 solution : [4, 25, 27]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38]
 solution : [4, 25, 27]

Essensial at level 8 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 38, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : []
 solution : [4, 25, 27, 2]


Before reduction : 
 pending  : []
 solution : [4, 25, 27, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 25, 27, 2]


Solution : [4, 25, 27, 2] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [4, 25, 27, 2]

After backtrack at level 8
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38]
 solution : [4, 25, 27]


Before backtrack at level 7
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38]
 solution : [4, 25, 27]

After backtrack at level 7
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]
 solution : [4, 25, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]
 solution : [4, 25]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]
 solution : [4, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]
 solution : [4, 25]


Solution : [4, 25] has cost 10.


Decide in level 7 among pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Decide 2 with phase True at level 7

After decision at level 7
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]
 solution : [4, 25, 2]


New level: 8
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]
 solution : [4, 25, 2]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]
 solution : [4, 25, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 25, 2]


Before reduction : 
 pending  : []
 solution : [4, 25, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 25, 2]


Solution : [4, 25, 2] has cost 14.


Before backtrack at level 8
 pending : []
 solution : [4, 25, 2]

After backtrack at level 8
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]
 solution : [4, 25, 2]


Invert decision for 2 at level 7


New level: 8
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]
 solution : [4, 25]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]
 solution : [4, 25]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 8 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 25, 26]


Before reduction : 
 pending  : []
 solution : [4, 25, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [4, 25, 26]


Solution : [4, 25, 26] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [4, 25, 26]

After backtrack at level 8
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37]
 solution : [4, 25]


Before backtrack at level 7
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37]
 solution : [4, 25]

After backtrack at level 7
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2]
 solution : [4, 25]


Before backtrack at level 6
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2]
 solution : [4, 25]

After backtrack at level 6
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27]
 solution : [4, 25]


Before backtrack at level 5
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27]
 solution : [4, 25]

After backtrack at level 5
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]
 solution : [4, 25]


Invert decision for 25 at level 4


New level: 5
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]
 solution : [4]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]
 solution : [4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]
 solution : [4]


Solution : [4] has cost 6.


Decide in level 5 among pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 21, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 21 with phase True at level 5

After decision at level 5
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 21]


New level: 6
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 21]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, 2147483648), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, 2147483648), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 22, 24}

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27, 34]
 solution : [4, 21]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27, 34]
 solution : [4, 21]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, 2147483648), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, 2147483648), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27, 34]
 solution : [4, 21]


Solution : [4, 21] has cost 13.


Decide in level 6 among pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, 2147483648), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 34 with phase True at level 6

After decision at level 6
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27]
 solution : [4, 21, 34]


New level: 7
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27]
 solution : [4, 21, 34]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 2, 27]
 solution : [4, 21, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, 2147483648), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {35, 37, 31}

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 27]
 solution : [4, 21, 34]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 27]
 solution : [4, 21, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 27]
 solution : [4, 21, 34]


Solution : [4, 21, 34] has cost 26.


Before backtrack at level 7
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 27]
 solution : [4, 21, 34]

After backtrack at level 7
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 27, 31, 35, 37]
 solution : [4, 21, 34]


Invert decision for 34 at level 6


New level: 7
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 27, 31, 35, 37]
 solution : [4, 21]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 27, 31, 35, 37]
 solution : [4, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 27, 31, 35, 37]
 solution : [4, 21]


Solution : [4, 21] has cost 13.


Decide in level 7 among pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 27, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 7

After decision at level 7
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21, 27]


New level: 8
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21, 27]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : {35, 37, 31}

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2]
 solution : [4, 21, 27]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2]
 solution : [4, 21, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, 0), (32, -1), (33, 1024), (34, -1), (35, 0), (36, 16777216), (37, 0), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2]
 solution : [4, 21, 27]


Solution : [4, 21, 27] has cost 20.


Before backtrack at level 8
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2]
 solution : [4, 21, 27]

After backtrack at level 8
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21, 27]


Invert decision for 27 at level 7


New level: 8
 pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21]


Solution : [4, 21] has cost 13.


Decide in level 8 among pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21, 26]


New level: 9
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21, 26]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, 4096), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 2, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 21, 26]


Before reduction : 
 pending  : []
 solution : [4, 21, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 21, 26]


Solution : [4, 21, 26] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [4, 21, 26]

After backtrack at level 9
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 2, 31, 35, 37]
 solution : [4, 21]

Essensial at level 9 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 9 : {33, 3, 36, 35, 38, 37, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 21, 2]


Before reduction : 
 pending  : []
 solution : [4, 21, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, 0), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [4, 21, 2]


Solution : [4, 21, 2] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [4, 21, 2]

After backtrack at level 9
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37]
 solution : [4, 21]


Before backtrack at level 8
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37]
 solution : [4, 21]

After backtrack at level 8
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]
 solution : [4, 21]


Before backtrack at level 7
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26]
 solution : [4, 21]

After backtrack at level 7
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26, 27]
 solution : [4, 21]


Before backtrack at level 6
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26, 27]
 solution : [4, 21]

After backtrack at level 6
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4, 21]


Invert decision for 21 at level 5


New level: 6
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]
 solution : [4]


Solution : [4] has cost 6.


Decide in level 6 among pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 34]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 34 with phase True at level 6

After decision at level 6
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 34]


New level: 7
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 34]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, 2147483648), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 33554432), (37, 32768), (38, 268435456), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : {35, 31}

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 34]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 33554432), (37, 32768), (38, 268435456), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 32768), (38, 268435456), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 34]


Solution : [4, 34] has cost 19.


Before backtrack at level 7
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 34]

After backtrack at level 7
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4, 34]


Invert decision for 34 at level 6


New level: 7
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, 32768), (38, 268435456), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 16777216), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4]


Solution : [4] has cost 6.


Decide in level 7 among pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 37, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 37 with phase True at level 7

After decision at level 7
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4, 37]


New level: 8
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4, 37]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4, 37]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, 1073741824), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, 134217728), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4, 37]


Solution : [4, 37] has cost 20.


Before backtrack at level 8
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4, 37]

After backtrack at level 8
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4, 37]


Invert decision for 37 at level 7


New level: 8
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, -1), (31, 2097152), (32, -1), (33, 16384), (34, -1), (35, 16384), (36, 134217728), (37, -1), (38, 134217728), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4]


Solution : [4] has cost 6.


Decide in level 8 among pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 27, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4, 27]


New level: 9
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4, 27]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22, 31, 35]
 solution : [4, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : {35, 31}

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 27]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 0), (32, -1), (33, 4096), (34, -1), (35, 0), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]
 solution : [4, 27]


Solution : [4, 27] has cost 13.


Decide in level 9 among pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18, 22]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27, 22]


New level: 10
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27, 22]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, 0), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 24}

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26]
 solution : [4, 27, 22]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26]
 solution : [4, 27, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, 0), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26]
 solution : [4, 27, 22]


Solution : [4, 27, 22] has cost 20.


Before backtrack at level 10
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26]
 solution : [4, 27, 22]

After backtrack at level 10
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 16777216), (37, -1), (38, 512), (39, -1), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27]


Solution : [4, 27] has cost 13.


Decide in level 10 among pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27, 38]


New level: 11
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27, 38]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, 134217728), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8388608), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 8388608), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 1048576), (40, 1024), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27, 38]


Solution : [4, 27, 38] has cost 31.


Before backtrack at level 11
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27, 38]

After backtrack at level 11
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8388608), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 8388608), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 1048576), (40, 1024), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 27]


Solution : [4, 27] has cost 13.


Decide in level 11 among pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 27, 18]


New level: 12
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 27, 18]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 27, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4096), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : {8, 19, 20, 14}

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 16, 15, 13]
 solution : [4, 27, 18]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 16, 15, 13]
 solution : [4, 27, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4096), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4096), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 16, 15, 13]
 solution : [4, 27, 18]


Solution : [4, 27, 18] has cost 22.


Before backtrack at level 12
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 16, 15, 13]
 solution : [4, 27, 18]

After backtrack at level 12
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 65536), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4096), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4096), (40, 512), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27]


Solution : [4, 27] has cost 13.


Decide in level 12 among pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

Decide 2 with phase True at level 12

After decision at level 12
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27, 2]


New level: 13
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27, 2]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26, 24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 33554432), (37, -1), (38, -1), (39, 4194304), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, -1), (50, -1), (51, 33554432), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 13 : {33, 3, 36, 40, 42, 43, 47, 48, 51, 26, 29}

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27, 2]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27, 2]


Solution : [4, 27, 2] has cost 17.


Before backtrack at level 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27, 2]

After backtrack at level 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 27, 2]


Invert decision for 2 at level 12


New level: 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 27]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 26]
 solution : [4, 27]

Essensial at level 13 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 13 : {33, 3, 36, 40, 42, 43, 47, 48, 51, 29}

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27, 26]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27, 26]


Solution : [4, 27, 26] has cost 20.


Before backtrack at level 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 27, 26]

After backtrack at level 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36]
 solution : [4, 27]


Before backtrack at level 12
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36]
 solution : [4, 27]

After backtrack at level 12
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 27]


Before backtrack at level 11
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2]
 solution : [4, 27]

After backtrack at level 11
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18]
 solution : [4, 27]


Before backtrack at level 10
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18]
 solution : [4, 27]

After backtrack at level 10
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 38]
 solution : [4, 27]


Before backtrack at level 9
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 38]
 solution : [4, 27]

After backtrack at level 9
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 38, 31, 35, 22]
 solution : [4, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 38, 31, 35, 22]
 solution : [4]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 38, 31, 35, 22]
 solution : [4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 38, 31, 35, 22]
 solution : [4]


Solution : [4] has cost 6.


Decide in level 9 among pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 38, 31, 35, 22]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 38, 31, 35]
 solution : [4, 22]


New level: 10
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 38, 31, 35]
 solution : [4, 22]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 18, 38, 31, 35]
 solution : [4, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, 1073741824), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : {39, 8, 13, 14, 15, 16, 18, 19, 20, 24}

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35]
 solution : [4, 22]


Before reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35]
 solution : [4, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, 0), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 2048), (39, 0), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35]
 solution : [4, 22]


Solution : [4, 22] has cost 13.


Decide in level 10 among pending : [26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35]
 solution : [4, 22, 26]


New level: 11
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35]
 solution : [4, 22, 26]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35]
 solution : [4, 22, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 67108864), (37, -1), (38, 2048), (39, -1), (40, 2048), (41, -1), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 2, 3, 36, 35, 38, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 22, 26]


Before reduction : 
 pending  : []
 solution : [4, 22, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [4, 22, 26]


Solution : [4, 22, 26] has cost 20.


Before backtrack at level 11
 pending : []
 solution : [4, 22, 26]

After backtrack at level 11
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35]
 solution : [4, 22, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35]
 solution : [4, 22]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 2, 38, 31, 35]
 solution : [4, 22]

Essensial at level 11 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 11 : {33, 3, 36, 35, 38, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : []
 solution : [4, 22, 2]


Before reduction : 
 pending  : []
 solution : [4, 22, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, 0), (39, -1), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [4, 22, 2]


Solution : [4, 22, 2] has cost 17.


Before backtrack at level 11
 pending : []
 solution : [4, 22, 2]

After backtrack at level 11
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35]
 solution : [4, 22]


Before backtrack at level 10
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35]
 solution : [4, 22]

After backtrack at level 10
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4]


Solution : [4] has cost 6.


Decide in level 10 among pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 38, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4, 38]


New level: 11
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4, 38]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, 268435456), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 134217728), (37, -1), (38, -1), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4, 38]


Solution : [4, 38] has cost 24.


Before backtrack at level 11
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4, 38]

After backtrack at level 11
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4]


Before reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 33554432), (3, 262144), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 1048576), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, 4194304), (32, -1), (33, 4096), (34, -1), (35, 8192), (36, 134217728), (37, -1), (38, -1), (39, 1048576), (40, 4096), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, -1), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4]


Solution : [4] has cost 6.


Decide in level 11 among pending : [2, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, -1), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4, 2]


New level: 12
 pending : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4, 2]


Before reduction : 
 pending  : [3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 24, 39, 16, 15, 13, 8, 20, 14, 19, 18, 26]
 solution : [4, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 134217728), (3, 1048576), (4, -1), (5, -1), (6, -1), (7, -1), (8, 1048576), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 524288), (15, 8388608), (16, 262144), (17, -1), (18, 67108864), (19, 33554432), (20, 1114112), (21, -1), (22, -1), (23, -1), (24, 4194304), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, -1), (31, 4194304), (32, -1), (33, 16384), (34, -1), (35, 32768), (36, 134217728), (37, -1), (38, -1), (39, 4194304), (40, 16384), (41, -1), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, -1), (50, -1), (51, 67108864), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {33, 3, 36, 35, 40, 42, 43, 47, 48, 51, 26, 29, 31}

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 18]
 solution : [4, 2]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 18]
 solution : [4, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19, 18]
 solution : [4, 2]


Solution : [4, 2] has cost 10.


Decide in level 12 among pending : [24, 39, 16, 15, 13, 8, 20, 14, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 2, 18]


New level: 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 2, 18]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 2, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {8, 19, 20, 14}

After reduction : 
 pending  : [24, 39, 16, 15, 13]
 solution : [4, 2, 18]


Before reduction : 
 pending  : [24, 39, 16, 15, 13]
 solution : [4, 2, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13]
 solution : [4, 2, 18]


Solution : [4, 2, 18] has cost 19.


Before backtrack at level 13
 pending : [24, 39, 16, 15, 13]
 solution : [4, 2, 18]

After backtrack at level 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 2, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 2]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 2]


Solution : [4, 2] has cost 10.


Decide in level 13 among pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 2, 13]


New level: 14
 pending : [24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 2, 13]


Before reduction : 
 pending  : [24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 2, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 14, 15}

After reduction : 
 pending  : [24, 39, 8, 20, 19]
 solution : [4, 2, 13]


Before reduction : 
 pending  : [24, 39, 8, 20, 19]
 solution : [4, 2, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 19]
 solution : [4, 2, 13]


Solution : [4, 2, 13] has cost 17.


Before backtrack at level 14
 pending : [24, 39, 8, 20, 19]
 solution : [4, 2, 13]

After backtrack at level 14
 pending : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 2, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 2]


Before reduction : 
 pending  : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 2]


Solution : [4, 2] has cost 10.


Decide in level 14 among pending : [24, 39, 8, 20, 19, 16, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [24, 39, 8, 20, 16, 15, 14]
 solution : [4, 2, 19]


New level: 15
 pending : [24, 39, 8, 20, 16, 15, 14]
 solution : [4, 2, 19]


Before reduction : 
 pending  : [24, 39, 8, 20, 16, 15, 14]
 solution : [4, 2, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {8, 20, 14}

After reduction : 
 pending  : [24, 39, 16, 15]
 solution : [4, 2, 19]


Before reduction : 
 pending  : [24, 39, 16, 15]
 solution : [4, 2, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 16, 15]
 solution : [4, 2, 19]


Solution : [4, 2, 19] has cost 19.


Before backtrack at level 15
 pending : [24, 39, 16, 15]
 solution : [4, 2, 19]

After backtrack at level 15
 pending : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 2, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 2]


Before reduction : 
 pending  : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 2]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 2]


Solution : [4, 2] has cost 10.


Decide in level 15 among pending : [24, 39, 16, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 15

After decision at level 15
 pending : [24, 39, 16, 8, 20, 14]
 solution : [4, 2, 15]


New level: 16
 pending : [24, 39, 16, 8, 20, 14]
 solution : [4, 2, 15]


Before reduction : 
 pending  : [24, 39, 16, 8, 20, 14]
 solution : [4, 2, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 14}

After reduction : 
 pending  : [24, 39, 8, 20]
 solution : [4, 2, 15]


Before reduction : 
 pending  : [24, 39, 8, 20]
 solution : [4, 2, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 39, 8, 20]
 solution : [4, 2, 15]


Solution : [4, 2, 15] has cost 17.


Before backtrack at level 16
 pending : [24, 39, 8, 20]
 solution : [4, 2, 15]

After backtrack at level 16
 pending : [24, 39, 8, 20, 16, 14]
 solution : [4, 2, 15]


Invert decision for 15 at level 15


New level: 16
 pending : [24, 39, 8, 20, 16, 14]
 solution : [4, 2]


Before reduction : 
 pending  : [24, 39, 8, 20, 16, 14]
 solution : [4, 2]

Essensial at level 16 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14]
 solution : [4, 2, 16]


Before reduction : 
 pending  : [24, 39, 8, 20, 14]
 solution : [4, 2, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14]
 solution : [4, 2, 16]


Solution : [4, 2, 16] has cost 17.


Before backtrack at level 16
 pending : [24, 39, 8, 20, 14]
 solution : [4, 2, 16]

After backtrack at level 16
 pending : [24, 39, 8, 20, 14, 16]
 solution : [4, 2]


Before backtrack at level 15
 pending : [24, 39, 8, 20, 14, 16]
 solution : [4, 2]

After backtrack at level 15
 pending : [24, 39, 8, 20, 14, 16, 15]
 solution : [4, 2]


Before backtrack at level 14
 pending : [24, 39, 8, 20, 14, 16, 15]
 solution : [4, 2]

After backtrack at level 14
 pending : [24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 2]


Before backtrack at level 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 2]

After backtrack at level 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 2]


Before backtrack at level 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 2]

After backtrack at level 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 18]
 solution : [4, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 18]
 solution : [4]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 26, 18]
 solution : [4]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

Covered at level 12 : {33, 3, 36, 35, 40, 42, 43, 47, 48, 51, 29, 31}

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 26]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0), (34, -1), (35, 0), (36, 0), (37, -1), (38, -1), (39, 2097152), (40, 0), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, 0), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18]
 solution : [4, 26]


Solution : [4, 26] has cost 13.


Decide in level 12 among pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 26, 18]


New level: 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 26, 18]


Before reduction : 
 pending  : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 26, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, 33554432), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {8, 19, 20, 14}

After reduction : 
 pending  : [24, 39, 16, 15, 13]
 solution : [4, 26, 18]


Before reduction : 
 pending  : [24, 39, 16, 15, 13]
 solution : [4, 26, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13]
 solution : [4, 26, 18]


Solution : [4, 26, 18] has cost 22.


Before backtrack at level 13
 pending : [24, 39, 16, 15, 13]
 solution : [4, 26, 18]

After backtrack at level 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 26, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 26]


Before reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 262144), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 13, 8, 20, 14, 19]
 solution : [4, 26]


Solution : [4, 26] has cost 13.


Decide in level 13 among pending : [24, 39, 16, 15, 13, 8, 20, 14, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 26, 13]


New level: 14
 pending : [24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 26, 13]


Before reduction : 
 pending  : [24, 39, 16, 15, 8, 20, 14, 19]
 solution : [4, 26, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, 16777216), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {16, 14, 15}

After reduction : 
 pending  : [24, 39, 8, 20, 19]
 solution : [4, 26, 13]


Before reduction : 
 pending  : [24, 39, 8, 20, 19]
 solution : [4, 26, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 19]
 solution : [4, 26, 13]


Solution : [4, 26, 13] has cost 20.


Before backtrack at level 14
 pending : [24, 39, 8, 20, 19]
 solution : [4, 26, 13]

After backtrack at level 14
 pending : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 26, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 26]


Before reduction : 
 pending  : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 4194304), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 19, 16, 15, 14]
 solution : [4, 26]


Solution : [4, 26] has cost 13.


Decide in level 14 among pending : [24, 39, 8, 20, 19, 16, 15, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 14

After decision at level 14
 pending : [24, 39, 8, 20, 16, 15, 14]
 solution : [4, 26, 19]


New level: 15
 pending : [24, 39, 8, 20, 16, 15, 14]
 solution : [4, 26, 19]


Before reduction : 
 pending  : [24, 39, 8, 20, 16, 15, 14]
 solution : [4, 26, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, 16777216), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {8, 20, 14}

After reduction : 
 pending  : [24, 39, 16, 15]
 solution : [4, 26, 19]


Before reduction : 
 pending  : [24, 39, 16, 15]
 solution : [4, 26, 19]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 16, 15]
 solution : [4, 26, 19]


Solution : [4, 26, 19] has cost 22.


Before backtrack at level 15
 pending : [24, 39, 16, 15]
 solution : [4, 26, 19]

After backtrack at level 15
 pending : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 26, 19]


Invert decision for 19 at level 14


New level: 15
 pending : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 26]


Before reduction : 
 pending  : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 26]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 65536), (16, 65536), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2048), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2048), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [24, 39, 16, 15, 8, 20, 14]
 solution : [4, 26]


Solution : [4, 26] has cost 13.


Decide in level 15 among pending : [24, 39, 16, 15, 8, 20, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 15 with phase True at level 15

After decision at level 15
 pending : [24, 39, 16, 8, 20, 14]
 solution : [4, 26, 15]


New level: 16
 pending : [24, 39, 16, 8, 20, 14]
 solution : [4, 26, 15]


Before reduction : 
 pending  : [24, 39, 16, 8, 20, 14]
 solution : [4, 26, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 262144), (15, 8388608), (16, 262144), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {16, 14}

After reduction : 
 pending  : [24, 39, 8, 20]
 solution : [4, 26, 15]


Before reduction : 
 pending  : [24, 39, 8, 20]
 solution : [4, 26, 15]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 39, 8, 20]
 solution : [4, 26, 15]


Solution : [4, 26, 15] has cost 20.


Before backtrack at level 16
 pending : [24, 39, 8, 20]
 solution : [4, 26, 15]

After backtrack at level 16
 pending : [24, 39, 8, 20, 16, 14]
 solution : [4, 26, 15]


Invert decision for 15 at level 15


New level: 16
 pending : [24, 39, 8, 20, 16, 14]
 solution : [4, 26]


Before reduction : 
 pending  : [24, 39, 8, 20, 16, 14]
 solution : [4, 26]

Essensial at level 16 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 262144), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 264192), (21, -1), (22, -1), (23, -1), (24, 524288), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 524288), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14]
 solution : [4, 26, 16]


Before reduction : 
 pending  : [24, 39, 8, 20, 14]
 solution : [4, 26, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 524288), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 131072), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 540672), (21, -1), (22, -1), (23, -1), (24, 2097152), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 2097152), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [24, 39, 8, 20, 14]
 solution : [4, 26, 16]


Solution : [4, 26, 16] has cost 20.


Before backtrack at level 16
 pending : [24, 39, 8, 20, 14]
 solution : [4, 26, 16]

After backtrack at level 16
 pending : [24, 39, 8, 20, 14, 16]
 solution : [4, 26]


Before backtrack at level 15
 pending : [24, 39, 8, 20, 14, 16]
 solution : [4, 26]

After backtrack at level 15
 pending : [24, 39, 8, 20, 14, 16, 15]
 solution : [4, 26]


Before backtrack at level 14
 pending : [24, 39, 8, 20, 14, 16, 15]
 solution : [4, 26]

After backtrack at level 14
 pending : [24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 26]


Before backtrack at level 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19]
 solution : [4, 26]

After backtrack at level 13
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 26]


Before backtrack at level 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13]
 solution : [4, 26]

After backtrack at level 12
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18]
 solution : [4]


Before backtrack at level 11
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18]
 solution : [4]

After backtrack at level 11
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2]
 solution : [4]


Before backtrack at level 10
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2]
 solution : [4]

After backtrack at level 10
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38]
 solution : [4]


Before backtrack at level 9
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38]
 solution : [4]

After backtrack at level 9
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22]
 solution : [4]


Before backtrack at level 8
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22]
 solution : [4]

After backtrack at level 8
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27]
 solution : [4]


Before backtrack at level 7
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27]
 solution : [4]

After backtrack at level 7
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37]
 solution : [4]


Before backtrack at level 6
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37]
 solution : [4]

After backtrack at level 6
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37, 34]
 solution : [4]


Before backtrack at level 5
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37, 34]
 solution : [4]

After backtrack at level 5
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37, 34, 21]
 solution : [4]


Before backtrack at level 4
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37, 34, 21]
 solution : [4]

After backtrack at level 4
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37, 34, 21, 25]
 solution : [4]


Before backtrack at level 3
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37, 34, 21, 25]
 solution : [4]

After backtrack at level 3
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37, 34, 21, 25, 28]
 solution : [4]


Before backtrack at level 2
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37, 34, 21, 25, 28]
 solution : [4]

After backtrack at level 2
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37, 34, 21, 25, 28, 10]
 solution : [4]


Before backtrack at level 1
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37, 34, 21, 25, 28, 10]
 solution : [4]

After backtrack at level 1
 pending : [24, 39, 8, 20, 14, 16, 15, 19, 13, 26, 3, 29, 33, 47, 40, 42, 43, 48, 51, 36, 31, 35, 18, 2, 38, 22, 27, 37, 34, 21, 25, 28, 10, 9]
 solution : [4]


=====================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=====================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: total qcost: 14

[MIN NOTE]: maximum branch and bound depth: 16

Definitions (length=2)

invariant [def_didNotPromise] didNotPromise(A) = forall P. ~promise(A,P) # definition

invariant [def_chosenAt] chosenAt(Q,P) = forall A. member(A,Q) -> promise(A,P) # definition

Equality Relations (length=0)

Solution 0 : [4, 25, 2] (length = 3)

invariant [invar_4] forall PROPOSER0,ACCEPTOR0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_25] forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0)) # qcost: 4

invariant [invar_2] forall PROPOSER0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER0) # qcost: 4




[QRM NOTE]: Time elapsed since start: 90.385 seconds

[QRM NOTE]: Time elapsed since last: 1.715 seconds

[QRM NOTE]: Peak memory: 4079393 bytes


========================================================================================================================

	[MIN_CHECK] Minimization Sanity Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

========================================================================================================================

Minimization check for Solution 0

[MIN_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 90.738 seconds

[QRM NOTE]: Time elapsed since last: 0.353 seconds

[QRM NOTE]: Peak memory: 3029110 bytes


=========================================================================================================

	[IVY_CHECK]: Ivy Check on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3]

=========================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_4
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_25
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_4 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_25 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_4 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_25 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_4 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_25 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_4 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_25 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS

[R Implies P]: True

[UNSAT CORE]: ((forall A. didNotPromise(A) <-> (forall P. ~promise(A,P))) & (forall P,Q. chosenAt(Q,P) <-> (forall A. member(A,Q) -> promise(A,P))) & (forall Q1,Q2. (exists A. (member(A,Q1) & member(A,Q2)))) & (forall PROPOSER0,ACCEPTOR0,PROPOSER1. ~promise(ACCEPTOR0,PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER1) | PROPOSER0 = PROPOSER1) & (forall PROPOSER0. (exists QUORUM0. chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER0))))

[QRM NOTE]: Time elapsed since start: 92.766 seconds

[QRM NOTE]: Time elapsed since last: 2.028 seconds

[QRM NOTE]: Peak memory: 2741659 bytes


********************************************************************************************************************

	[Reachability Convergence Check]: ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=3

********************************************************************************************************************

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy -s acceptor=5,proposer=3 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=5,proposer=3]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm simple-election.acceptor_5_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_5_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_5_proposer_3.finite.cpp simple-election.acceptor_5_proposer_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_5_proposer_3.finite.o simple-election.acceptor_5_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 56

[FW NOTE]: number of interpreted atoms (e.g. member,le): 50

[FW NOTE]: number of branching actions: 48

[FW NOTE]: symmetric group order: 720

[QRM NOTE]: Time elapsed since start: 7.080 seconds

[QRM NOTE]: Time elapsed since last: 7.080 seconds

[QRM NOTE]: Peak memory: 1279152 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 9

[FW NOTE]: number of total reachable states:        2522

[FW NOTE]: number of dfs representative states:     51

[FW NOTE]: number of dfs non-representative states: 2471


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=5,proposer=3]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2', 'acceptor3', 'acceptor4']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1_acceptor2', 'quorum__acceptor0_acceptor1_acceptor3', 'quorum__acceptor0_acceptor1_acceptor4', 'quorum__acceptor0_acceptor2_acceptor3', 'quorum__acceptor0_acceptor2_acceptor4', 'quorum__acceptor0_acceptor3_acceptor4', 'quorum__acceptor1_acceptor2_acceptor3', 'quorum__acceptor1_acceptor2_acceptor4', 'quorum__acceptor1_acceptor3_acceptor4', 'quorum__acceptor2_acceptor3_acceptor4']
predicate: start('proposer',)
predicate: didNotPromise('acceptor',)
predicate: member('acceptor', 'quorum')
predicate: chosenAt('quorum', 'proposer')
predicate: promise('acceptor', 'proposer')
predicate: leader('proposer',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor0,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor0,quorum__acceptor0_acceptor1_acceptor4)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2_acceptor4)': '1', 'member(acceptor0,quorum__acceptor0_acceptor3_acceptor4)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2_acceptor3)': '0', 'member(acceptor0,quorum__acceptor1_acceptor2_acceptor4)': '0', 'member(acceptor0,quorum__acceptor1_acceptor3_acceptor4)': '0', 'member(acceptor0,quorum__acceptor2_acceptor3_acceptor4)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor1,quorum__acceptor0_acceptor1_acceptor4)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2_acceptor3)': '0', 'member(acceptor1,quorum__acceptor0_acceptor2_acceptor4)': '0', 'member(acceptor1,quorum__acceptor0_acceptor3_acceptor4)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor1,quorum__acceptor1_acceptor2_acceptor4)': '1', 'member(acceptor1,quorum__acceptor1_acceptor3_acceptor4)': '1', 'member(acceptor1,quorum__acceptor2_acceptor3_acceptor4)': '0', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor3)': '0', 'member(acceptor2,quorum__acceptor0_acceptor1_acceptor4)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor2,quorum__acceptor0_acceptor2_acceptor4)': '1', 'member(acceptor2,quorum__acceptor0_acceptor3_acceptor4)': '0', 'member(acceptor2,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2_acceptor4)': '1', 'member(acceptor2,quorum__acceptor1_acceptor3_acceptor4)': '0', 'member(acceptor2,quorum__acceptor2_acceptor3_acceptor4)': '1', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor2)': '0', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor3)': '1', 'member(acceptor3,quorum__acceptor0_acceptor1_acceptor4)': '0', 'member(acceptor3,quorum__acceptor0_acceptor2_acceptor3)': '1', 'member(acceptor3,quorum__acceptor0_acceptor2_acceptor4)': '0', 'member(acceptor3,quorum__acceptor0_acceptor3_acceptor4)': '1', 'member(acceptor3,quorum__acceptor1_acceptor2_acceptor3)': '1', 'member(acceptor3,quorum__acceptor1_acceptor2_acceptor4)': '0', 'member(acceptor3,quorum__acceptor1_acceptor3_acceptor4)': '1', 'member(acceptor3,quorum__acceptor2_acceptor3_acceptor4)': '1', 'member(acceptor4,quorum__acceptor0_acceptor1_acceptor2)': '0', 'member(acceptor4,quorum__acceptor0_acceptor1_acceptor3)': '0', 'member(acceptor4,quorum__acceptor0_acceptor1_acceptor4)': '1', 'member(acceptor4,quorum__acceptor0_acceptor2_acceptor3)': '0', 'member(acceptor4,quorum__acceptor0_acceptor2_acceptor4)': '1', 'member(acceptor4,quorum__acceptor0_acceptor3_acceptor4)': '1', 'member(acceptor4,quorum__acceptor1_acceptor2_acceptor3)': '0', 'member(acceptor4,quorum__acceptor1_acceptor2_acceptor4)': '1', 'member(acceptor4,quorum__acceptor1_acceptor3_acceptor4)': '1', 'member(acceptor4,quorum__acceptor2_acceptor3_acceptor4)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor2,proposer2)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor3,proposer2)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor4,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor4,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1_acceptor4,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor3,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor4,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor4,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2_acceptor4,proposer2)', 'chosenAt(quorum__acceptor0_acceptor3_acceptor4,proposer0)', 'chosenAt(quorum__acceptor0_acceptor3_acceptor4,proposer1)', 'chosenAt(quorum__acceptor0_acceptor3_acceptor4,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor3,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor4,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor4,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2_acceptor4,proposer2)', 'chosenAt(quorum__acceptor1_acceptor3_acceptor4,proposer0)', 'chosenAt(quorum__acceptor1_acceptor3_acceptor4,proposer1)', 'chosenAt(quorum__acceptor1_acceptor3_acceptor4,proposer2)', 'chosenAt(quorum__acceptor2_acceptor3_acceptor4,proposer0)', 'chosenAt(quorum__acceptor2_acceptor3_acceptor4,proposer1)', 'chosenAt(quorum__acceptor2_acceptor3_acceptor4,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'didNotPromise(acceptor3)', 'didNotPromise(acceptor4)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'promise(acceptor3,proposer0)', 'promise(acceptor3,proposer1)', 'promise(acceptor3,proposer2)', 'promise(acceptor4,proposer0)', 'promise(acceptor4,proposer1)', 'promise(acceptor4,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 73196681593764978191543, 73196682719664885034167, 73196684971464698719415, 73196689475064326089911, 35454651100254583483575, 16569796854794430016695, 132226928036480487353527, 44239134489724985210662071, 11589948334192002828849793821879, 11589948334487150734029146647735, 44201429344838322887158967, 44201724492743502239984823, 44239429637630164563487927, 94521783149818163850423, 75641540590376437771447, 75936688495555790597303, 75650763962413292547255, 75945911867592645373111, 94816931054997516676279, 132522075941659840179383, 7126216810559746436279, 2403994442878177078455, 42847230240373435575, 2404138558066252934327, 16574408540812857404599, 7131981418082780671159, 35454646596654956113079, 16569792351194802646199, 132226923532880859983031, 44239134485221385583291575, 11589948334191998325250166451383, 11589948334487146230429519277239, 44201429340334723259788471, 44201724488239902612614327, 44239429633126564936117431, 94521778646218536479927, 75641536086776810400951, 75936683991956163226807, 94816926551397889305783, 132522071438060212808887, 7126212306960119065783, 2403989939278549707959, 16574404037213230034103, 35454644344855142427831, 16569790099394988960951, 132226921281081046297783, 44239134482969585769606327, 11589948334191996073450352766135, 11589948334487143978629705591991, 44239429630874765122432183, 132522069186260399123639


=== State Orbit 0 =====================
size : 1
repr state: 00000000000000000000000000000011111000000000000000000000
lex min decimal: 73196681593764978191543
states:
00000000000000000000000000000011111000000000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 00000000000000000000000000000011111000000000000000000100
lex min decimal: 73196682719664885034167
states:
00000000000000000000000000000011111000000000000000000001
00000000000000000000000000000011111000000000000000000100
00000000000000000000000000000011111000000000000000000010




=== State Orbit 2 =====================
size : 3
repr state: 00000000000000000000000000000011111000000000000000000110
lex min decimal: 73196684971464698719415
states:
00000000000000000000000000000011111000000000000000000110
00000000000000000000000000000011111000000000000000000011
00000000000000000000000000000011111000000000000000000101




=== State Orbit 3 =====================
size : 1
repr state: 00000000000000000000000000000011111000000000000000000111
lex min decimal: 73196689475064326089911
states:
00000000000000000000000000000011111000000000000000000111




=== State Orbit 4 =====================
size : 15
repr state: 00000000000000000000000000000001111000100000000000000111
lex min decimal: 35454651100254583483575
states:
00000000000000000000000000000011110000000000000000100111
00000000000000000000000000000010111000000100000000000111
00000000000000000000000000000001111000100000000000000111
00000000000000000000000000000011110000000000000000010111
00000000000000000000000000000001111000010000000000000111
00000000000000000000000000000010111000000001000000000111
00000000000000000000000000000010111000000010000000000111
00000000000000000000000000000001111000001000000000000111
00000000000000000000000000000011101000000000000001000111
00000000000000000000000000000011011000000000100000000111
00000000000000000000000000000011011000000000010000000111
00000000000000000000000000000011101000000000000010000111
00000000000000000000000000000011110000000000000000001111
00000000000000000000000000000011101000000000000100000111
00000000000000000000000000000011011000000000001000000111




=== State Orbit 5 =====================
size : 30
repr state: 00000000000000000000000000000000111000100100000000000111
lex min decimal: 16569796854794430016695
states:
00000000000000000000000000000001110000001000000000001111
00000000000000000000000000000001011000010000010000000111
00000000000000000000000000000001110000100000000000100111
00000000000000000000000000000000111000100100000000000111
00000000000000000000000000000000111000010010000000000111
00000000000000000000000000000010101000000010000010000111
00000000000000000000000000000011100000000000000100100111
00000000000000000000000000000010110000000001000000001111
00000000000000000000000000000011001000000000100100000111
00000000000000000000000000000001011000001000001000000111
00000000000000000000000000000011001000000000001001000111
00000000000000000000000000000011010000000000001000001111
00000000000000000000000000000010110000000100000000100111
00000000000000000000000000000000111000001001000000000111
00000000000000000000000000000010011000000001001000000111
00000000000000000000000000000010011000000100100000000111
00000000000000000000000000000011100000000000000001001111
00000000000000000000000000000011010000000000100000100111
00000000000000000000000000000010011000000010010000000111
00000000000000000000000000000001011000100000100000000111
00000000000000000000000000000001101000100000000100000111
00000000000000000000000000000001110000010000000000010111
00000000000000000000000000000010110000000010000000010111
00000000000000000000000000000001101000010000000010000111
00000000000000000000000000000011100000000000000010010111
00000000000000000000000000000010101000000100000100000111
00000000000000000000000000000001101000001000000001000111
00000000000000000000000000000011001000000000010010000111
00000000000000000000000000000011010000000000010000010111
00000000000000000000000000000010101000000001000001000111




=== State Orbit 6 =====================
size : 30
repr state: 10000000000000000000000000000000011000100100100000000111
lex min decimal: 132226928036480487353527
states:
00000001000000000000000000000000110000010010000000010111
00000000000100000000000000000001001000001000001001000111
00000000000000010000000000000001100000100000000100100111
10000000000000000000000000000000011000100100100000000111
00000100000000000000000000000000101000001001000001000111
00000000100000000000000000000000110000001001000000001111
00000000000010000000000000000001010000100000100000100111
00000000000000000100000000000001100000001000000001001111
00000000000000000000000100000010010000000001001000001111
00000000000000000000000000001011000000000000010010010111
00000000000000000000001000000010010000000010010000010111
00000000010000000000000000000001001000100000100100000111
00000000000000000000010000000010010000000100100000100111
00000000000000000000000000010011000000000000100100100111
00000000000000000000000001000010100000000010000010010111
00000000000000001000000000000001100000010000000010010111
00100000000000000000000000000000011000001001001000000111
00000000000000000000000000000111000000000000001001001111
00001000000000000000000000000000101000010010000010000111
00000000000000000000100000000010001000000001001001000111
00000010000000000000000000000000110000100100000000100111
00000000000000000010000000000010001000000100100100000111
00000000000000000000000010000010100000000100000100100111
00000000000000100000000000000001010000001000001000001111
00000000000000000000000000100010100000000001000001001111
01000000000000000000000000000000011000010010010000000111
00000000000000000001000000000010001000000010010010000111
00000000000001000000000000000001010000010000010000010111
00000000001000000000000000000001001000010000010010000111
00010000000000000000000000000000101000100100000100000111




=== State Orbit 7 =====================
size : 15
repr state: 10010000010000000010000000000000001000100100100100000111
lex min decimal: 44239134489724985210662071
states:
00001001000000001000000001000000100000010010000010010111
00000000000000000001001001001010000000000010010010010111
01001000001000000001000000000000001000010010010010000111
00000000001001001000000000001001000000010000010010010111
00000000010010010000000000010001000000100000100100100111
00000000000000000000100100100110000000000001001001001111
00000100100000000100000000100000100000001001000001001111
00100100000100000000100000000000001000001001001001000111
10000010000010000000010000000000010000100100100000100111
00100000100000100000000100000000010000001001001000001111
00010010000000010000000010000000100000100100000100100111
00000000000000000010010010010010000000000100100100100111
10010000010000000010000000000000001000100100100100000111
01000001000001000000001000000000010000010010010000010111
00000000000100100100000000000101000000001000001001001111




=== State Orbit 8 =====================
size : 3
repr state: 10010010010010010010010010010000000000100100100100100111
lex min decimal: 11589948334192002828849793821879
states:
10010010010010010010010010010000000000100100100100100111
01001001001001001001001001001000000000010010010010010111
00100100100100100100100100100100000000001001001001001111




=== State Orbit 9 =====================
size : 3
repr state: 10010010010010010010010010010000000100100100100100100111
lex min decimal: 11589948334487150734029146647735
states:
00100100100100100100100100100100000001001001001001001111
10010010010010010010010010010000000100100100100100100111
01001001001001001001001001001000000010010010010010010111




=== State Orbit 10 =====================
size : 30
repr state: 10010000010000000010000000000000000000100100100100010111
lex min decimal: 44201429344838322887158967
states:
00100100000100000000100000000000000000001001001001010111
10000010000010000000010000000000000000100100100001100111
00000000000000000010010010010000000000010100100100100111
00001001000000001000000001000000000000010010001010010111
00100000100000100000000100000000000000001001001100001111
01000001000001000000001000000000000000010010010100010111
10010000010000000010000000000000000000100100100100001111
10010000010000000010000000000000000000100100100100010111
00000000010010010000000000010000000000100010100100100111
00100000100000100000000100000000000000001001001010001111
00000000010010010000000000010000000000100001100100100111
00100100000100000000100000000000000000001001001001100111
00000000000000000001001001001000000000001010010010010111
00000000001001001000000000001000000000010100010010010111
00000100100000000100000000100000000000001001010001001111
00001001000000001000000001000000000000010010100010010111
00010010000000010000000010000000000000100100010100100111
00000000001001001000000000001000000000010001010010010111
00000000000000000010010010010000000000001100100100100111
00000000000100100100000000000100000000001010001001001111
01001000001000000001000000000000000000010010010010100111
00000000000100100100000000000100000000001100001001001111
01001000001000000001000000000000000000010010010010001111
00000000000000000000100100100100000000010001001001001111
00000000000000000001001001001000000000100010010010010111
00000100100000000100000000100000000000001001100001001111
10000010000010000000010000000000000000100100100010100111
00000000000000000000100100100100000000100001001001001111
01000001000001000000001000000000000000010010010001010111
00010010000000010000000010000000000000100100001100100111




=== State Orbit 11 =====================
size : 30
repr state: 10010000010000000010000000000000000100100100100100010111
lex min decimal: 44201724492743502239984823
states:
01001000001000000001000000000000000010010010010010001111
10000010000010000000010000000000000100100100100010100111
00000000001001001000000000001000000010010001010010010111
10000010000010000000010000000000000100100100100001100111
00100000100000100000000100000000000001001001001100001111
00100000100000100000000100000000000001001001001010001111
00000000000000000010010010010000000100010100100100100111
00000000010010010000000000010000000100100001100100100111
00000100100000000100000000100000000001001001100001001111
00000000000000000001001001001000000010001010010010010111
00000000001001001000000000001000000010010100010010010111
00000000000000000001001001001000000010100010010010010111
01001000001000000001000000000000000010010010010010100111
00000000000100100100000000000100000001001010001001001111
00000000000000000010010010010000000100001100100100100111
00000000000000000000100100100100000001010001001001001111
00000000010010010000000000010000000100100010100100100111
00000000000000000000100100100100000001100001001001001111
00010010000000010000000010000000000100100100010100100111
01000001000001000000001000000000000010010010010100010111
01000001000001000000001000000000000010010010010001010111
00010010000000010000000010000000000100100100001100100111
00100100000100000000100000000000000001001001001001010111
00100100000100000000100000000000000001001001001001100111
10010000010000000010000000000000000100100100100100010111
10010000010000000010000000000000000100100100100100001111
00000100100000000100000000100000000001001001010001001111
00001001000000001000000001000000000010010010001010010111
00001001000000001000000001000000000010010010100010010111
00000000000100100100000000000100000001001100001001001111




=== State Orbit 12 =====================
size : 15
repr state: 10010000010000000010000000000000001100100100100100000111
lex min decimal: 44239429637630164563487927
states:
00000000001001001000000000001001000010010000010010010111
10010000010000000010000000000000001100100100100100000111
00100000100000100000000100000000010001001001001000001111
00000100100000000100000000100000100001001001000001001111
00000000000000000001001001001010000010000010010010010111
00010010000000010000000010000000100100100100000100100111
00000000000100100100000000000101000001001000001001001111
00000000000000000000100100100110000001000001001001001111
00001001000000001000000001000000100010010010000010010111
00000000000000000010010010010010000100000100100100100111
01001000001000000001000000000000001010010010010010000111
00000000010010010000000000010001000100100000100100100111
00100100000100000000100000000000001001001001001001000111
10000010000010000000010000000000010100100100100000100111
01000001000001000000001000000000010010010010010000010111




=== State Orbit 13 =====================
size : 120
repr state: 10000000000000000000000000000000001000100100100010000111
lex min decimal: 94521783149818163850423
states:
00000010000000000000000000000000010000100100010000100111
00000000000000010000000000000001000000100000010100100111
00000000000100000000000000000000001000001100001001000111
00000000000000000100000000000000100000001100000001001111
00000000000100000000000000000000001000001010001001000111
00000000000010000000000000000000010000100010100000100111
00010000000000000000000000000000001000100100010100000111
00000000000000000000000001000000100000001010000010010111
00000000000000000000000000001010000000000100010010010111
00000000000000000000010000000010000000000100100010100111
00000000000000001000000000000000100000010001000010010111
00000000000000000010000000000010000000000100100100010111
00000000000000000000100000000010000000000001001001100111
00000000000000000100000000000001000000001000100001001111
00000000000000000000000010000000100000001100000100100111
00000000000001000000000000000001000000010000010100010111
00000000000100000000000000000001000000001000001001100111
00000000100000000000000000000000100000001001000100001111
00000000000001000000000000000000010000010100010000010111
00000000000000100000000000000000010000001100001000001111
00000000000001000000000000000001000000010000010001010111
00000000000100000000000000000001000000001000001001010111
00000000000001000000000000000000010000010001010000010111
00000000000000000000000000000110000000000100001001001111
00000000000000000001000000000010000000000010010010001111
00000000000000000010000000000010000000000100100100001111
00000000000000000000000010000010000000000100010100100111
00000000000000000000000100000000010000100001001000001111
00000000010000000000000000000001000000100000100100001111
00000000000000000000100000000010000000000001001001010111
00000010000000000000000000000000010000100100001000100111
00000000001000000000000000000001000000010000010010100111
00000000000010000000000000000001000000100000100010100111
00000000000000000000000000100010000000000001100001001111
00000000000000000000000000001001000000001000010010010111
00010000000000000000000000000000001000100100001100000111
00000100000000000000000000000000100000001001000001100111
10000000000000000000000000000000010000100100100000001111
00000000000000000000000001000010000000000010100010010111
00000000000000100000000000000001000000001000001010001111
00000000000000000000000000100000100000100001000001001111
00000000000000001000000000000001000000010000001010010111
00000001000000000000000000000000010000010010100000010111
00000000000000000000000000000110000000000010001001001111
00000000000000000000001000000010000000000010010100010111
00000000000000000000000000010001000000001000100100100111
00100000000000000000000000000000010000001001001000100111
00000000000000010000000000000001000000100000001100100111
00000001000000000000000000000000100000010010000001010111
00000000000000001000000000000000100000010100000010010111
10000000000000000000000000000000001000100100100001000111
00010000000000000000000000000000100000100100000100010111
00000000000000000000000000100000100000010001000001001111
00000000000010000000000000000001000000100000100001100111
00000100000000000000000000000000001000001001100001000111
00001000000000000000000000000000100000010010000010001111
00000000000000100000000000000001000000001000001100001111
00000000000000000000000000100010000000000001010001001111
01000000000000000000000000000000001000010010010001000111
00000000000000000000000000010010000000000010100100100111
00000000000000000000000100000010000000000001001100001111
00000000000000000000010000000000010000001100100000100111
00000001000000000000000000000000010000010010001000010111
00010000000000000000000000000000100000100100000100001111
00000000000000000000000000000101000000010000001001001111
00000000000000000100000000000000100000001010000001001111
00000000100000000000000000000000010000001001100000001111
00000000000000010000000000000000100000100010000100100111
00000000001000000000000000000000001000010100010010000111
01000000000000000000000000000000001000010010010100000111
00000000000000010000000000000000100000100001000100100111
00000000000000100000000000000000010000001010001000001111
00000000000000000001000000000010000000000010010010100111
00000000000000000000000001000010000000000010001010010111
00100000000000000000000000000000010000001001001000010111
10000000000000000000000000000000001000100100100010000111
01000000000000000000000000000000010000010010010000001111
00000000000000000000001000000000010000001010010000010111
00000000000000000000100000000000001000010001001001000111
00000000000000000000000010000000100000010100000100100111
00000000000000000001000000000000001000001010010010000111
00000000000000000000000000010010000000000001100100100111
00000000001000000000000000000000001000010001010010000111
00000000000000001000000000000001000000010000100010010111
00000000100000000000000000000000100000001001000010001111
00000000000000000000000100000010000000000001001010001111
00000000000000000000000000000101000000100000001001001111
00001000000000000000000000000000001000010010001010000111
00000000000000000001000000000000001000100010010010000111
00100000000000000000000000000000001000001001001100000111
00000000000000000000000000001010000000000001010010010111
00000000100000000000000000000000010000001001010000001111
00000000000000000000000100000000010000010001001000001111
00000000000000000000001000000010000000000010010001010111
00000000000000000010000000000000001000010100100100000111
00001000000000000000000000000000001000010010100010000111
00000010000000000000000000000000100000100100000010100111
00000000000010000000000000000000010000100001100000100111
00000000000000000000010000000010000000000100100001100111
00000000000000000000000000010001000000010000100100100111
00000001000000000000000000000000100000010010000100010111
00000000000000000000001000000000010000100010010000010111
00000000000000000000010000000000010000010100100000100111
00000000000000000000000000001001000000100000010010010111
00000100000000000000000000000000001000001001010001000111
01000000000000000000000000000000010000010010010000100111
00000000000000000000000001000000100000100010000010010111
00000100000000000000000000000000100000001001000001010111
00001000000000000000000000000000100000010010000010100111
00000000000000000000100000000000001000100001001001000111
00000000000000000100000000000001000000001000010001001111
00000000000000000000000010000010000000000100001100100111
00000010000000000000000000000000100000100100000001100111
00000000001000000000000000000001000000010000010010001111
00000000010000000000000000000001000000100000100100010111
00000000000000000010000000000000001000001100100100000111
10000000000000000000000000000000010000100100100000010111
00000000010000000000000000000000001000100010100100000111
00000000010000000000000000000000001000100001100100000111
00100000000000000000000000000000001000001001001010000111




=== State Orbit 14 =====================
size : 60
repr state: 10000000000000000000000000000000000000100100100010010111
lex min decimal: 75641540590376437771447
states:
00000000000000000000001000000000000000100010010100010111
10000000000000000000000000000000000000100100100001001111
00000000010000000000000000000000000000100010100100010111
00000000000000000001000000000000000000001010010010001111
00000000000000000000010000000000000000010100100010100111
00000000000000000000000010000000000000001100001100100111
00000000000000000001000000000000000000100010010010100111
00001000000000000000000000000000000000010010100010100111
00010000000000000000000000000000000000100100001100001111
00000000000100000000000000000000000000001010001001010111
00000000000000000000000100000000000000010001001010001111
01000000000000000000000000000000000000010010010100100111
00000000001000000000000000000000000000010100010010100111
00000000000000000000100000000000000000010001001001010111
00000000000000000000000000100000000000100001100001001111
00000000000000000000000010000000000000010100010100100111
00000000000000000000000000000100000000100100001001001111
00000000000001000000000000000000000000010001010001010111
00001000000000000000000000000000000000010010001010001111
00000000000100000000000000000000000000001100001001100111
00000000000000001000000000000000000000010100100010010111
00000000000000000000000000001000000000001001010010010111
00000000000000000000000000100000000000010001010001001111
00000000000010000000000000000000000000100001100001100111
00000000000010000000000000000000000000100010100010100111
00000000000000000000100000000000000000100001001001100111
00000010000000000000000000000000000000100100010010100111
00010000000000000000000000000000000000100100010100010111
00000000000000010000000000000000000000100010010100100111
00000000000000000000000000000100000000010010001001001111
00000001000000000000000000000000000000010010001001010111
00000010000000000000000000000000000000100100001001100111
00000000000000000100000000000000000000001010010001001111
00000000000000000000000000001000000000100100010010010111
00100000000000000000000000000000000000001001001100100111
00000000100000000000000000000000000000001001010010001111
00000000000000000000000001000000000000100010100010010111
00000000000000001000000000000000000000010001001010010111
00000000000000000010000000000000000000001100100100001111
00000000000000010000000000000000000000100001001100100111
00000000000000000000000001000000000000001010001010010111
00000000000000000000010000000000000000001100100001100111
00000000000000100000000000000000000000001010001010001111
00000000000000000100000000000000000000001100100001001111
00000000000000000010000000000000000000010100100100010111
00100000000000000000000000000000000000001001001010010111
00000000000000000000000000010000000000001001100100100111
01000000000000000000000000000000000000010010010001001111
00000000000000000000001000000000000000001010010001010111
00000000000000000000000000010000000000010010100100100111
00000100000000000000000000000000000000001001010001010111
00000000100000000000000000000000000000001001100100001111
00000000000001000000000000000000000000010100010100010111
00000000001000000000000000000000000000010001010010001111
00000100000000000000000000000000000000001001100001100111
00000000000000000000000100000000000000100001001100001111
00000000010000000000000000000000000000100001100100001111
00000001000000000000000000000000000000010010100100010111
10000000000000000000000000000000000000100100100010010111
00000000000000100000000000000000000000001100001100001111




=== State Orbit 15 =====================
size : 60
repr state: 10000000000000000000000000000000000100100100100010010111
lex min decimal: 75936688495555790597303
states:
00000000000000000000000000100000000001010001010001001111
00001000000000000000000000000000000010010010100010100111
10000000000000000000000000000000000100100100100001001111
00000000000000001000000000000000000010010001001010010111
00000000010000000000000000000000000100100010100100010111
00001000000000000000000000000000000010010010001010001111
00000000000001000000000000000000000010010001010001010111
00000000000000000000000000000100000001010010001001001111
00010000000000000000000000000000000100100100010100010111
00000000000000000000010000000000000100001100100001100111
00000000000000000010000000000000000100010100100100010111
00000000000000000000001000000000000010001010010001010111
00000000000000000000000010000000000100001100001100100111
00000100000000000000000000000000000001001001010001010111
00000000000000000100000000000000000001001100100001001111
00000000000000000000000000100000000001100001100001001111
00000000000000000010000000000000000100001100100100001111
00000000000000000000000001000000000010001010001010010111
00000000000000000000000100000000000001010001001010001111
00000000000000000001000000000000000010100010010010100111
10000000000000000000000000000000000100100100100010010111
00000000000000000100000000000000000001001010010001001111
00000000000010000000000000000000000100100001100001100111
01000000000000000000000000000000000010010010010100100111
00000000000000000000000000010000000100001001100100100111
00000010000000000000000000000000000100100100001001100111
00000000000010000000000000000000000100100010100010100111
00000000000000010000000000000000000100100001001100100111
00000000000000000000000010000000000100010100010100100111
00000000000000100000000000000000000001001010001010001111
00000000000000000000000000001000000010100100010010010111
00000000000001000000000000000000000010010100010100010111
00000000000100000000000000000000000001001010001001010111
00000000000000000000000001000000000010100010100010010111
00000000000000000000000000000100000001100100001001001111
00000000001000000000000000000000000010010100010010100111
00000000000100000000000000000000000001001100001001100111
00000000000000100000000000000000000001001100001100001111
00000000000000000000000000001000000010001001010010010111
00000000010000000000000000000000000100100001100100001111
00000001000000000000000000000000000010010010100100010111
00100000000000000000000000000000000001001001001010010111
00010000000000000000000000000000000100100100001100001111
00000000000000001000000000000000000010010100100010010111
00000000100000000000000000000000000001001001100100001111
00000000000000000000000000010000000100010010100100100111
00000000001000000000000000000000000010010001010010001111
00000100000000000000000000000000000001001001100001100111
00000001000000000000000000000000000010010010001001010111
01000000000000000000000000000000000010010010010001001111
00000000000000010000000000000000000100100010010100100111
00000000100000000000000000000000000001001001010010001111
00000000000000000000100000000000000001010001001001010111
00000000000000000000001000000000000010100010010100010111
00000000000000000000100000000000000001100001001001100111
00000000000000000000010000000000000100010100100010100111
00000000000000000000000100000000000001100001001100001111
00000010000000000000000000000000000100100100010010100111
00100000000000000000000000000000000001001001001100100111
00000000000000000001000000000000000010001010010010001111




=== State Orbit 16 =====================
size : 60
repr state: 10000000000000000000000000000000000000100100100010001111
lex min decimal: 75650763962413292547255
states:
00000000010000000000000000000000000000100010100100001111
10000000000000000000000000000000000000100100100001010111
00100000000000000000000000000000000000001001001100010111
00000000000001000000000000000000000000010100010001010111
00000000000000000000010000000000000000001100100010100111
00000000000000000000000000100000000000010001100001001111
00000000000000000000000001000000000000100010001010010111
00001000000000000000000000000000000000010010100010001111
00000000000000000000001000000000000000001010010100010111
00000000000000000100000000000000000000001010100001001111
00000000000000000001000000000000000000100010010010001111
00100000000000000000000000000000000000001001001010100111
00000000000000000000000000010000000000001010100100100111
00000000000000000000000000100000000000100001010001001111
00000000000000000010000000000000000000001100100100010111
00000000000000000001000000000000000000001010010010100111
00000001000000000000000000000000000000010010100001010111
00000000000000000000100000000000000000100001001001010111
00000000000010000000000000000000000000100010100001100111
10000000000000000000000000000000000000100100100010001111
00000000001000000000000000000000000000010100010010001111
00000000000000001000000000000000000000010100001010010111
00000000000000010000000000000000000000100010001100100111
00010000000000000000000000000000000000100100001100010111
00000000000000100000000000000000000000001010001100001111
00001000000000000000000000000000000000010010001010100111
00000000000100000000000000000000000000001010001001100111
00000000000000000010000000000000000000010100100100001111
00000000000000000000100000000000000000010001001001100111
00000000000000000000000100000000000000100001001010001111
00000000000100000000000000000000000000001100001001010111
00000000000010000000000000000000000000100001100010100111
00000000000000000000000100000000000000010001001100001111
00000000000000000000000000010000000000010001100100100111
01000000000000000000000000000000000000010010010001100111
00000000000000001000000000000000000000010001100010010111
00000000000000000000000001000000000000001010100010010111
00000000100000000000000000000000000000001001010100001111
00000000010000000000000000000000000000100001100100010111
00000000000000000000000010000000000000001100010100100111
00000100000000000000000000000000000000001001010001100111
00000000000000100000000000000000000000001100001010001111
00000000000000010000000000000000000000100001010100100111
00000000000001000000000000000000000000010001010100010111
00000100000000000000000000000000000000001001100001010111
00000000000000000000000000001000000000100001010010010111
00000010000000000000000000000000000000100100010001100111
00000001000000000000000000000000000000010010001100010111
00010000000000000000000000000000000000100100010100001111
00000010000000000000000000000000000000100100001010100111
00000000000000000000000000001000000000001100010010010111
00000000000000000000000000000100000000100010001001001111
00000000000000000100000000000000000000001100010001001111
00000000100000000000000000000000000000001001100010001111
00000000001000000000000000000000000000010001010010100111
01000000000000000000000000000000000000010010010100001111
00000000000000000000000000000100000000010100001001001111
00000000000000000000001000000000000000100010010001010111
00000000000000000000000010000000000000010100001100100111
00000000000000000000010000000000000000010100100001100111




=== State Orbit 17 =====================
size : 60
repr state: 10000000000000000000000000000000000100100100100010001111
lex min decimal: 75945911867592645373111
states:
00000100000000000000000000000000000001001001100001010111
00000000100000000000000000000000000001001001010100001111
00000000000000000010000000000000000100001100100100010111
00000000000000000000000000100000000001010001100001001111
00000000000010000000000000000000000100100001100010100111
00000000000000001000000000000000000010010100001010010111
00000000000000000100000000000000000001001100010001001111
00000000000000000000000000100000000001100001010001001111
00000000000000000000100000000000000001010001001001100111
00000100000000000000000000000000000001001001010001100111
00000000000000000000000000001000000010001100010010010111
00000000000000000010000000000000000100010100100100001111
01000000000000000000000000000000000010010010010100001111
00000000000000000000000000010000000100010001100100100111
00100000000000000000000000000000000001001001001100010111
00100000000000000000000000000000000001001001001010100111
00001000000000000000000000000000000010010010100010001111
00001000000000000000000000000000000010010010001010100111
00000000000000000000000010000000000100010100001100100111
00000000000000000001000000000000000010001010010010100111
00000001000000000000000000000000000010010010001100010111
00000000000000000000000000001000000010100001010010010111
00000010000000000000000000000000000100100100001010100111
00000000000000010000000000000000000100100010001100100111
00000000010000000000000000000000000100100001100100010111
00000000000000010000000000000000000100100001010100100111
00000000100000000000000000000000000001001001100010001111
00000000000000000000000000000100000001100010001001001111
10000000000000000000000000000000000100100100100010001111
00000000000000000000000100000000000001010001001100001111
00010000000000000000000000000000000100100100001100010111
00000001000000000000000000000000000010010010100001010111
00000000000010000000000000000000000100100010100001100111
00000000000000000000000001000000000010001010100010010111
00000000000001000000000000000000000010010001010100010111
00010000000000000000000000000000000100100100010100001111
00000000000001000000000000000000000010010100010001010111
00000000000000000000010000000000000100010100100001100111
01000000000000000000000000000000000010010010010001100111
00000000000100000000000000000000000001001010001001100111
10000000000000000000000000000000000100100100100001010111
00000000000100000000000000000000000001001100001001010111
00000000001000000000000000000000000010010001010010100111
00000000000000000000001000000000000010001010010100010111
00000000000000000000000100000000000001100001001010001111
00000000000000000000100000000000000001100001001001010111
00000000000000001000000000000000000010010001100010010111
00000000000000000000000010000000000100001100010100100111
00000000000000000000001000000000000010100010010001010111
00000000000000100000000000000000000001001100001010001111
00000000000000000000000001000000000010100010001010010111
00000000000000100000000000000000000001001010001100001111
00000000010000000000000000000000000100100010100100001111
00000000001000000000000000000000000010010100010010001111
00000000000000000100000000000000000001001010100001001111
00000010000000000000000000000000000100100100010001100111
00000000000000000000010000000000000100001100100010100111
00000000000000000000000000010000000100001010100100100111
00000000000000000001000000000000000010100010010010001111
00000000000000000000000000000100000001010100001001001111




=== State Orbit 18 =====================
size : 120
repr state: 10000000000000000000000000000000001100100100100010000111
lex min decimal: 94816931054997516676279
states:
00000000000000000000001000000010000010000010010001010111
00000010000000000000000000000000100100100100000010100111
00000000000000000000010000000010000100000100100001100111
00000000000000000000000000001001000010100000010010010111
00000000000000000010000000000000001100001100100100000111
00000100000000000000000000000000100001001001000001100111
10000000000000000000000000000000010100100100100000001111
00000000000010000000000000000000010100100010100000100111
00000000000000000000100000000000001001100001001001000111
00000000000001000000000000000000010010010001010000010111
00000000000010000000000000000000010100100001100000100111
00000010000000000000000000000000010100100100010000100111
00000000000000000001000000000010000010000010010010001111
10000000000000000000000000000000010100100100100000010111
00000000000000000000001000000010000010000010010100010111
00000000000000000000000010000010000100000100010100100111
00000001000000000000000000000000010010010010001000010111
00000100000000000000000000000000001001001001010001000111
00000000000000000000000100000000010001100001001000001111
00000000010000000000000000000000001100100001100100000111
00001000000000000000000000000000001010010010100010000111
00000100000000000000000000000000100001001001000001010111
00000000000100000000000000000001000001001000001001010111
00000000000000000000100000000010000001000001001001100111
00010000000000000000000000000000100100100100000100010111
00000000000000000000000000010001000100001000100100100111
00000000000000000000000000010010000100000001100100100111
00010000000000000000000000000000001100100100001100000111
00000000001000000000000000000001000010010000010010001111
00000000100000000000000000000000010001001001010000001111
00000001000000000000000000000000100010010010000100010111
00000000000000100000000000000000010001001010001000001111
10000000000000000000000000000000001100100100100001000111
00000000000000000000000000100010000001000001100001001111
00000000000000010000000000000000100100100010000100100111
00000000000100000000000000000001000001001000001001100111
00000000001000000000000000000000001010010001010010000111
00000000000000000000000001000000100010001010000010010111
00000000000000000001000000000000001010100010010010000111
00000000000000000000000000100000100001010001000001001111
00000000000010000000000000000001000100100000100001100111
00000000000000000000000010000000100100010100000100100111
00000000000000000000000100000010000001000001001100001111
00000000000000000100000000000001000001001000100001001111
00000000000000000000000010000010000100000100001100100111
00000000000000000100000000000000100001001010000001001111
00000100000000000000000000000000001001001001100001000111
00000000000000000000010000000010000100000100100010100111
00000000000000000000001000000000010010100010010000010111
00000000000000000000000000001010000010000100010010010111
00000000000010000000000000000001000100100000100010100111
01000000000000000000000000000000001010010010010001000111
00000000000000000000000001000010000010000010001010010111
00000000000001000000000000000000010010010100010000010111
00000000000000000000100000000000001001010001001001000111
00000000000000001000000000000000100010010100000010010111
00000010000000000000000000000000010100100100001000100111
00000000000000000001000000000010000010000010010010100111
00000000000000000000000000000110000001000010001001001111
00000000000000000000000000001001000010001000010010010111
00000000000000001000000000000001000010010000100010010111
00000000000000000000000000000101000001010000001001001111
00000010000000000000000000000000100100100100000001100111
00100000000000000000000000000000010001001001001000100111
00000000001000000000000000000001000010010000010010100111
00000000000000000010000000000010000100000100100100010111
00000000000001000000000000000001000010010000010001010111
00000000000000000000000001000000100010100010000010010111
00000000000000000000000000100010000001000001010001001111
00000000010000000000000000000001000100100000100100001111
00100000000000000000000000000000001001001001001100000111
00000000000000001000000000000000100010010001000010010111
00000000000000000000000100000000010001010001001000001111
00000001000000000000000000000000100010010010000001010111
00000000000000000000000100000010000001000001001010001111
00000000000000010000000000000000100100100001000100100111
00000000000001000000000000000001000010010000010100010111
00000000000100000000000000000000001001001010001001000111
01000000000000000000000000000000010010010010010000100111
00010000000000000000000000000000001100100100010100000111
00000000000000000010000000000010000100000100100100001111
00000000001000000000000000000000001010010100010010000111
00010000000000000000000000000000100100100100000100001111
00000000100000000000000000000000100001001001000100001111
00000000000000000100000000000000100001001100000001001111
00000000000000000000001000000000010010001010010000010111
00000000000000000000000000010001000100010000100100100111
00000000000000010000000000000001000100100000001100100111
00000000000000000000010000000000010100010100100000100111
00000000000000000000000000010010000100000010100100100111
10000000000000000000000000000000001100100100100010000111
00000000100000000000000000000000100001001001000010001111
00000000000000010000000000000001000100100000010100100111
00000000000000000000000000001010000010000001010010010111
00001000000000000000000000000000100010010010000010100111
00000000000000000000010000000000010100001100100000100111
00001000000000000000000000000000100010010010000010001111
00001000000000000000000000000000001010010010001010000111
00000000000000100000000000000001000001001000001100001111
00000000000000000000100000000010000001000001001001010111
00000000000000000000000000100000100001100001000001001111
00000000000000000010000000000000001100010100100100000111
00000000000000000000000001000010000010000010100010010111
00000000000000000000000000000110000001000100001001001111
01000000000000000000000000000000010010010010010000001111
00000000000000000000000010000000100100001100000100100111
00000000010000000000000000000001000100100000100100010111
00100000000000000000000000000000010001001001001000010111
00000000000000100000000000000001000001001000001010001111
00000000000000100000000000000000010001001100001000001111
00000000100000000000000000000000010001001001100000001111
00000000000000001000000000000001000010010000001010010111
00000000000000000001000000000000001010001010010010000111
00000000000100000000000000000000001001001100001001000111
00000000000000000100000000000001000001001000010001001111
00000000010000000000000000000000001100100010100100000111
00000001000000000000000000000000010010010010100000010111
00000000000000000000000000000101000001100000001001001111
01000000000000000000000000000000001010010010010100000111
00100000000000000000000000000000001001001001001010000111




=== State Orbit 19 =====================
size : 30
repr state: 10000000000000000000000000000000011100100100100000000111
lex min decimal: 132522075941659840179383
states:
00000000000000000000000000010011000100000000100100100111
00000000000000000100000000000001100001001000000001001111
00000000000000000000000000000111000001000000001001001111
00000000000000001000000000000001100010010000000010010111
00100000000000000000000000000000011001001001001000000111
00000100000000000000000000000000101001001001000001000111
00000000000000000001000000000010001010000010010010000111
00000000000100000000000000000001001001001000001001000111
00000001000000000000000000000000110010010010000000010111
10000000000000000000000000000000011100100100100000000111
00000000000000000010000000000010001100000100100100000111
00000000000000000000010000000010010100000100100000100111
00001000000000000000000000000000101010010010000010000111
00000000000000000000000001000010100010000010000010010111
00000000000010000000000000000001010100100000100000100111
00000010000000000000000000000000110100100100000000100111
00010000000000000000000000000000101100100100000100000111
00000000010000000000000000000001001100100000100100000111
00000000000001000000000000000001010010010000010000010111
00000000000000100000000000000001010001001000001000001111
00000000001000000000000000000001001010010000010010000111
00000000000000000000001000000010010010000010010000010111
01000000000000000000000000000000011010010010010000000111
00000000000000000000100000000010001001000001001001000111
00000000000000000000000000100010100001000001000001001111
00000000000000000000000010000010100100000100000100100111
00000000100000000000000000000000110001001001000000001111
00000000000000010000000000000001100100100000000100100111
00000000000000000000000100000010010001000001001000001111
00000000000000000000000000001011000010000000010010010111




=== State Orbit 20 =====================
size : 180
repr state: 00000000000000000000000000000000011000100100010000000111
lex min decimal: 7126216810559746436279
states:
00000000000000000000000000000010100000000001000001010111
00000000000000000000000000000010100000000010000100100111
00000000000000000000000000000010100000000001000010001111
00000000000000000000000000000010010000000001010000010111
00000000000000000000000000000011000000000000100001001111
00000000000000000000000000000001100000100000000001100111
00000000000000000000000000000001010000010000010000001111
00000000000000000000000000000000011000001010001000000111
00000000000000000000000000000000101000100001000100000111
00000000000000000000000000000000101000001010000010000111
00000000000000000000000000000010010000000001001000010111
00000000000000000000000000000000110000001001000000100111
00000000000000000000000000000001100000010000000100100111
00000000000000000000000000000001001000100000001100000111
00000000000000000000000000000011000000000000001010001111
00000000000000000000000000000001100000010000000010001111
00000000000000000000000000000001010000001000010000001111
00000000000000000000000000000010100000000100000100001111
00000000000000000000000000000000101000100010000100000111
00000000000000000000000000000001010000010000001000001111
00000000000000000000000000000000101000001001000010000111
00000000000000000000000000000011000000000000001001100111
00000000000000000000000000000000110000010001000000001111
00000000000000000000000000000001100000001000000100100111
00000000000000000000000000000010001000000001001010000111
00000000000000000000000000000001100000010000000010100111
00000000000000000000000000000000011000100001001000000111
00000000000000000000000000000010001000000001001100000111
00000000000000000000000000000010010000000001001000100111
00000000000000000000000000000001001000100000010100000111
00000000000000000000000000000011000000000000010100100111
00000000000000000000000000000001001000100000001001000111
00000000000000000000000000000010010000000001010000001111
00000000000000000000000000000010100000000010000001010111
00000000000000000000000000000000101000010001000001000111
00000000000000000000000000000010010000000100001000001111
00000000000000000000000000000011000000000000100010100111
00000000000000000000000000000000101000010100000010000111
00000000000000000000000000000000011000001010010000000111
00000000000000000000000000000000110000010100000000100111
00000000000000000000000000000010100000000100000001100111
00000000000000000000000000000000101000010010000001000111
00000000000000000000000000000001001000010000010100000111
00000000000000000000000000000001001000010000100100000111
00000000000000000000000000000001010000001000001000100111
00000000000000000000000000000001010000001000001000010111
00000000000000000000000000000000110000010010000000100111
00000000000000000000000000000000101000010001000010000111
00000000000000000000000000000001001000001000100001000111
00000000000000000000000000000000011000010100100000000111
00000000000000000000000000000000011000100010100000000111
00000000000000000000000000000000101000100001000001000111
00000000000000000000000000000000011000001100100000000111
00000000000000000000000000000001001000001000001100000111
00000000000000000000000000000000110000100100000000010111
00000000000000000000000000000010010000000010100000010111
00000000000000000000000000000010100000000010000010100111
00000000000000000000000000000010001000000100100001000111
00000000000000000000000000000001001000100000100010000111
00000000000000000000000000000010001000000010001001000111
00000000000000000000000000000000101000001100000001000111
00000000000000000000000000000001001000010000001001000111
00000000000000000000000000000010010000000010001000010111
00000000000000000000000000000010001000000100001100000111
00000000000000000000000000000001010000010000100000100111
00000000000000000000000000000010010000000100010000100111
00000000000000000000000000000001010000100000010000100111
00000000000000000000000000000010010000000010010000001111
00000000000000000000000000000011000000000000010010001111
00000000000000000000000000000011000000000000010001010111
00000000000000000000000000000010010000000010010000100111
00000000000000000000000000000000011000010100010000000111
00000000000000000000000000000011000000000000100100010111
00000000000000000000000000000001100000001000000001100111
00000000000000000000000000000010001000000010010100000111
00000000000000000000000000000000101000001001000100000111
00000000000000000000000000000000101000001010000001000111
00000000000000000000000000000001100000100000000010100111
00000000000000000000000000000010100000000001000100100111
00000000000000000000000000000000101000100100000010000111
00000000000000000000000000000011000000000000010010100111
00000000000000000000000000000000101000010100000100000111
00000000000000000000000000000001001000100000100001000111
00000000000000000000000000000010010000000100001000100111
00000000000000000000000000000001100000010000000100010111
00000000000000000000000000000011000000000000100010010111
00000000000000000000000000000010100000000100000100010111
00000000000000000000000000000001100000100000000010010111
00000000000000000000000000000001100000010000000001001111
00000000000000000000000000000010100000000100000001001111
00000000000000000000000000000010001000000010010001000111
00000000000000000000000000000000011000001001010000000111
00000000000000000000000000000001100000001000000010001111
00000000000000000000000000000011000000000000010001001111
00000000000000000000000000000000110000100001000000001111
00000000000000000000000000000000011000001001100000000111
00000000000000000000000000000000101000010010000100000111
00000000000000000000000000000010010000000001100000001111
00000000000000000000000000000011000000000000001100001111
00000000000000000000000000000000011000010010001000000111
00000000000000000000000000000000110000100010000000010111
00000000000000000000000000000010001000000010100010000111
00000000000000000000000000000001010000100000100000001111
00000000000000000000000000000001010000100000001000100111
00000000000000000000000000000010001000000001100001000111
00000000000000000000000000000000110000001100000000001111
00000000000000000000000000000010010000000001100000100111
00000000000000000000000000000010010000000010100000100111
00000000000000000000000000000000110000001010000000001111
00000000000000000000000000000010100000000001000001100111
00000000000000000000000000000000011000100100001000000111
00000000000000000000000000000011000000000000100100001111
00000000000000000000000000000001001000010000100010000111
00000000000000000000000000000000011000100001100000000111
00000000000000000000000000000010010000000100100000001111
00000000000000000000000000000010001000000001010001000111
00000000000000000000000000000011000000000000100001100111
00000000000000000000000000000000110000100010000000100111
00000000000000000000000000000001001000001000100100000111
00000000000000000000000000000001010000001000010000010111
00000000000000000000000000000000101000100010000010000111
00000000000000000000000000000010100000000010000001001111
00000000000000000000000000000010010000000100010000010111
00000000000000000000000000000000110000001010000000010111
00000000000000000000000000000001010000010000100000010111
00000000000000000000000000000011000000000000010100010111
00000000000000000000000000000000110000010100000000010111
00000000000000000000000000000001100000001000000100001111
00000000000000000000000000000010001000000100010010000111
00000000000000000000000000000000110000010001000000010111
00000000000000000000000000000010001000000010100100000111
00000000000000000000000000000010001000000100100010000111
00000000000000000000000000000010001000000100001001000111
00000000000000000000000000000010001000000010001010000111
00000000000000000000000000000011000000000000001100100111
00000000000000000000000000000001010000001000100000100111
00000000000000000000000000000010010000000010001000001111
00000000000000000000000000000001010000100000010000010111
00000000000000000000000000000000011000100010010000000111
00000000000000000000000000000000011000010001010000000111
00000000000000000000000000000001010000010000001000010111
00000000000000000000000000000010100000000001000100001111
00000000000000000000000000000000110000001001000000010111
00000000000000000000000000000000101000100100000001000111
00000000000000000000000000000001001000001000010010000111
00000000000000000000000000000001010000100000001000001111
00000000000000000000000000000000110000100100000000001111
00000000000000000000000000000001100000100000000100001111
00000000000000000000000000000000110000001100000000100111
00000000000000000000000000000010001000000100010100000111
00000000000000000000000000000010100000000100000010100111
00000000000000000000000000000011000000000000001001010111
00000000000000000000000000000011000000000000001010010111
00000000000000000000000000000010100000000010000100010111
00000000000000000000000000000001001000001000010001000111
00000000000000000000000000000010001000000001010010000111
00000000000000000000000000000000011000100100010000000111
00000000000000000000000000000001001000010000001010000111
00000000000000000000000000000001100000001000000001010111
00000000000000000000000000000000011000001100001000000111
00000000000000000000000000000001010000001000100000001111
00000000000000000000000000000010100000000001000010010111
00000000000000000000000000000000011000010001001000000111
00000000000000000000000000000001100000010000000001010111
00000000000000000000000000000010100000000010000010001111
00000000000000000000000000000000101000001100000100000111
00000000000000000000000000000010100000000100000010010111
00000000000000000000000000000010010000000100100000010111
00000000000000000000000000000001010000100000100000010111
00000000000000000000000000000000110000010010000000001111
00000000000000000000000000000001001000100000010010000111
00000000000000000000000000000001001000001000001010000111
00000000000000000000000000000000110000100001000000100111
00000000000000000000000000000001001000010000010001000111
00000000000000000000000000000010001000000001100100000111
00000000000000000000000000000001100000100000000001001111
00000000000000000000000000000001010000010000010000100111
00000000000000000000000000000001100000100000000100010111
00000000000000000000000000000001100000001000000010010111
00000000000000000000000000000000011000010010100000000111




=== State Orbit 21 =====================
size : 90
repr state: 00000000000000000000000000000000001000100100010010000111
lex min decimal: 2403994442878177078455
states:
00000000000000000000000000000001000000100000001001100111
00000000000000000000000000000010000000000001010010001111
00000000000000000000000000000010000000000010010001001111
00000000000000000000000000000000001000010100010100000111
00000000000000000000000000000000010000001010001000010111
00000000000000000000000000000001000000010000010100100111
00000000000000000000000000000010000000000001100100001111
00000000000000000000000000000000100000010010000001001111
00000000000000000000000000000001000000100000100010010111
00000000000000000000000000000000100000010100000100010111
00000000000000000000000000000000001000001001010010000111
00000000000000000000000000000001000000010000100100010111
00000000000000000000000000000001000000001000010010001111
00000000000000000000000000000010000000000100001100001111
00000000000000000000000000000010000000000001010001010111
00000000000000000000000000000000010000001001010000010111
00000000000000000000000000000000010000100001100000001111
00000000000000000000000000000000010000001100100000001111
00000000000000000000000000000000010000001001100000100111
00000000000000000000000000000001000000001000100001100111
00000000000000000000000000000000100000100010000100010111
00000000000000000000000000000000100000100100000010010111
00000000000000000000000000000010000000000010100100010111
00000000000000000000000000000000001000100010010100000111
00000000000000000000000000000000010000010100100000010111
00000000000000000000000000000001000000001000001010010111
00000000000000000000000000000001000000010000100010100111
00000000000000000000000000000001000000001000100100001111
00000000000000000000000000000000100000010100000010100111
00000000000000000000000000000010000000000010001010001111
00000000000000000000000000000000100000001001000010010111
00000000000000000000000000000000010000100001001000100111
00000000000000000000000000000000010000100100001000001111
00000000000000000000000000000001000000100000001100001111
00000000000000000000000000000001000000010000001010001111
00000000000000000000000000000010000000000100100001001111
00000000000000000000000000000000010000100010010000100111
00000000000000000000000000000000001000001010001010000111
00000000000000000000000000000000010000010001001000010111
00000000000000000000000000000010000000000001001100100111
00000000000000000000000000000000100000001001000100100111
00000000000000000000000000000000010000010100010000100111
00000000000000000000000000000001000000010000001001010111
00000000000000000000000000000000100000100100000001001111
00000000000000000000000000000000010000010001010000001111
00000000000000000000000000000000001000100001001100000111
00000000000000000000000000000010000000000100100010010111
00000000000000000000000000000000100000010010000100100111
00000000000000000000000000000000001000010001010001000111
00000000000000000000000000000000100000001100000001100111
00000000000000000000000000000000001000010100100010000111
00000000000000000000000000000000100000001010000010001111
00000000000000000000000000000001000000001000010001010111
00000000000000000000000000000000100000010001000010001111
00000000000000000000000000000010000000000001001010010111
00000000000000000000000000000000100000100001000001100111
00000000000000000000000000000000001000010010001001000111
00000000000000000000000000000000001000001100100001000111
00000000000000000000000000000000010000001010010000001111
00000000000000000000000000000000010000100010100000010111
00000000000000000000000000000000010000001100001000100111
00000000000000000000000000000000001000001100001100000111
00000000000000000000000000000001000000001000001100100111
00000000000000000000000000000010000000000100010010100111
00000000000000000000000000000000010000010010001000001111
00000000000000000000000000000000001000100100010010000111
00000000000000000000000000000000001000010001001010000111
00000000000000000000000000000000001000100100001001000111
00000000000000000000000000000010000000000010010100100111
00000000000000000000000000000000100000100001000100001111
00000000000000000000000000000010000000000010100010100111
00000000000000000000000000000001000000100000100001001111
00000000000000000000000000000000001000100001100001000111
00000000000000000000000000000000010000010010100000100111
00000000000000000000000000000001000000010000010001001111
00000000000000000000000000000000100000001100000100001111
00000000000000000000000000000000001000100010100010000111
00000000000000000000000000000010000000000001100001100111
00000000000000000000000000000010000000000010001001010111
00000000000000000000000000000000100000010001000001010111
00000000000000000000000000000010000000000100010100010111
00000000000000000000000000000000001000001010010001000111
00000000000000000000000000000000010000100100010000010111
00000000000000000000000000000000001000001001100100000111
00000000000000000000000000000010000000000100001001100111
00000000000000000000000000000000100000001010000001010111
00000000000000000000000000000001000000100000010100010111
00000000000000000000000000000001000000100000010010100111
00000000000000000000000000000000001000010010100100000111
00000000000000000000000000000000100000100010000010100111




=== State Orbit 22 =====================
size : 90
repr state: 00000000000000000000000000000000000000100100010010001111
lex min decimal: 42847230240373435575
states:
00000000000000000000000000000000000000001100010001010111
00000000000000000000000000000000000000100001100010001111
00000000000000000000000000000000000000001010100100010111
00000000000000000000000000000000000000001001010010100111
00000000000000000000000000000000000000001010010001100111
00000000000000000000000000000000000000100001010100010111
00000000000000000000000000000000000000100010001010001111
00000000000000000000000000000000000000100001010010100111
00000000000000000000000000000000000000010100100001010111
00000000000000000000000000000000000000001010100001100111
00000000000000000000000000000000000000100001100001010111
00000000000000000000000000000000000000100010001100001111
00000000000000000000000000000000000000010001001100100111
00000000000000000000000000000000000000010001100100010111
00000000000000000000000000000000000000010100001001100111
00000000000000000000000000000000000000001001100010010111
00000000000000000000000000000000000000100001010001010111
00000000000000000000000000000000000000010100010100001111
00000000000000000000000000000000000000001100001010100111
00000000000000000000000000000000000000100010010001001111
00000000000000000000000000000000000000100100001001010111
00000000000000000000000000000000000000001010001010100111
00000000000000000000000000000000000000001010100010100111
00000000000000000000000000000000000000010001010100001111
00000000000000000000000000000000000000010100100010001111
00000000000000000000000000000000000000010001001010100111
00000000000000000000000000000000000000100010001001100111
00000000000000000000000000000000000000100001100010010111
00000000000000000000000000000000000000100010001010100111
00000000000000000000000000000000000000010010001100001111
00000000000000000000000000000000000000100010010100001111
00000000000000000000000000000000000000010010001100100111
00000000000000000000000000000000000000100010010001100111
00000000000000000000000000000000000000100001001010010111
00000000000000000000000000000000000000010100001100001111
00000000000000000000000000000000000000010100010001001111
00000000000000000000000000000000000000010001100010001111
00000000000000000000000000000000000000001100010100010111
00000000000000000000000000000000000000001001100100010111
00000000000000000000000000000000000000100100010001001111
00000000000000000000000000000000000000001100010010001111
00000000000000000000000000000000000000100001001010100111
00000000000000000000000000000000000000001010001100100111
00000000000000000000000000000000000000010001100010100111
00000000000000000000000000000000000000010010001001100111
00000000000000000000000000000000000000001001010100010111
00000000000000000000000000000000000000001100001010010111
00000000000000000000000000000000000000010001010100100111
00000000000000000000000000000000000000010100100001001111
00000000000000000000000000000000000000010100010001100111
00000000000000000000000000000000000000100010100001010111
00000000000000000000000000000000000000100001010100001111
00000000000000000000000000000000000000010001001100010111
00000000000000000000000000000000000000100001010001100111
00000000000000000000000000000000000000010001010001100111
00000000000000000000000000000000000000010100001001010111
00000000000000000000000000000000000000010100001010001111
00000000000000000000000000000000000000001010100100001111
00000000000000000000000000000000000000001010010100001111
00000000000000000000000000000000000000001100001100010111
00000000000000000000000000000000000000010001100001010111
00000000000000000000000000000000000000100001010010001111
00000000000000000000000000000000000000001100010010100111
00000000000000000000000000000000000000001010001100010111
00000000000000000000000000000000000000001010100010001111
00000000000000000000000000000000000000100010001001010111
00000000000000000000000000000000000000010001100100001111
00000000000000000000000000000000000000100100001010001111
00000000000000000000000000000000000000100100010001010111
00000000000000000000000000000000000000001100010001100111
00000000000000000000000000000000000000100010001100010111
00000000000000000000000000000000000000001001010100100111
00000000000000000000000000000000000000001100100010010111
00000000000000000000000000000000000000100100001010010111
00000000000000000000000000000000000000010010100100001111
00000000000000000000000000000000000000100010100001001111
00000000000000000000000000000000000000010100001100010111
00000000000000000000000000000000000000010001100001100111
00000000000000000000000000000000000000100100010010001111
00000000000000000000000000000000000000001001100010100111
00000000000000000000000000000000000000010100001010100111
00000000000000000000000000000000000000001100100001010111
00000000000000000000000000000000000000001010100001010111
00000000000000000000000000000000000000001010010100100111
00000000000000000000000000000000000000010010100001100111
00000000000000000000000000000000000000010010100001001111
00000000000000000000000000000000000000100010100010001111
00000000000000000000000000000000000000001100010100001111
00000000000000000000000000000000000000100001001100010111
00000000000000000000000000000000000000001100100010001111




=== State Orbit 23 =====================
size : 180
repr state: 00000000000000000000000000000000001000100100010001000111
lex min decimal: 2404138558066252934327
states:
00000000000000000000000000000000010000010100001000010111
00000000000000000000000000000001000000010000001100010111
00000000000000000000000000000000001000010100001001000111
00000000000000000000000000000010000000000100001010010111
00000000000000000000000000000000100000010001000100010111
00000000000000000000000000000010000000000001100001010111
00000000000000000000000000000010000000000010010100001111
00000000000000000000000000000000001000001100010100000111
00000000000000000000000000000000010000001100001000010111
00000000000000000000000000000001000000001000010001100111
00000000000000000000000000000001000000001000001010100111
00000000000000000000000000000000010000001001010000100111
00000000000000000000000000000000100000010001000010100111
00000000000000000000000000000001000000010000010100001111
00000000000000000000000000000000100000001100000100010111
00000000000000000000000000000000100000001001000010100111
00000000000000000000000000000000100000100100000010001111
00000000000000000000000000000010000000000100010001100111
00000000000000000000000000000010000000000010001100010111
00000000000000000000000000000000001000010001100100000111
00000000000000000000000000000010000000000001100100010111
00000000000000000000000000000000100000010001000100100111
00000000000000000000000000000010000000000010100001010111
00000000000000000000000000000010000000000010001001100111
00000000000000000000000000000000100000010010000100001111
00000000000000000000000000000000001000100001001010000111
00000000000000000000000000000000010000100001010000001111
00000000000000000000000000000000001000001010100100000111
00000000000000000000000000000010000000000010100010001111
00000000000000000000000000000000001000100001100010000111
00000000000000000000000000000001000000010000100001010111
00000000000000000000000000000000001000001001100010000111
00000000000000000000000000000001000000001000001100010111
00000000000000000000000000000001000000100000001010010111
00000000000000000000000000000000010000100001010000100111
00000000000000000000000000000001000000010000010001100111
00000000000000000000000000000000001000010100001100000111
00000000000000000000000000000000001000010100010001000111
00000000000000000000000000000000100000001010000100100111
00000000000000000000000000000001000000010000100001100111
00000000000000000000000000000000001000010010001100000111
00000000000000000000000000000000001000100010010001000111
00000000000000000000000000000001000000001000010100010111
00000000000000000000000000000010000000000100010100001111
00000000000000000000000000000000001000001010100010000111
00000000000000000000000000000010000000000100010001010111
00000000000000000000000000000000010000100001100000010111
00000000000000000000000000000000100000001100000010100111
00000000000000000000000000000000100000100001000010010111
00000000000000000000000000000001000000100000100001010111
00000000000000000000000000000000100000100001000100010111
00000000000000000000000000000001000000010000100001001111
00000000000000000000000000000010000000000010100100001111
00000000000000000000000000000001000000001000100001010111
00000000000000000000000000000010000000000010001010100111
00000000000000000000000000000010000000000100100010001111
00000000000000000000000000000000010000100010001000100111
00000000000000000000000000000000001000100010001001000111
00000000000000000000000000000010000000000001010010100111
00000000000000000000000000000000010000001010100000100111
00000000000000000000000000000000001000100010001010000111
00000000000000000000000000000001000000100000001010100111
00000000000000000000000000000010000000000010010001100111
00000000000000000000000000000000010000010100001000100111
00000000000000000000000000000010000000000100001001010111
00000000000000000000000000000000001000001010100001000111
00000000000000000000000000000000010000010001100000010111
00000000000000000000000000000001000000001000010100001111
00000000000000000000000000000010000000000100010010001111
00000000000000000000000000000001000000010000100010001111
00000000000000000000000000000000001000100001010001000111
00000000000000000000000000000010000000000001100010010111
00000000000000000000000000000000100000001010000100010111
00000000000000000000000000000000010000010001010000100111
00000000000000000000000000000000010000100100010000001111
00000000000000000000000000000001000000001000100100010111
00000000000000000000000000000000010000010010001000100111
00000000000000000000000000000010000000000001010100010111
00000000000000000000000000000000001000001010010100000111
00000000000000000000000000000010000000000001010001100111
00000000000000000000000000000001000000001000100010100111
00000000000000000000000000000000100000100010000001010111
00000000000000000000000000000000010000100001001000010111
00000000000000000000000000000000001000010001100010000111
00000000000000000000000000000000001000100001010010000111
00000000000000000000000000000010000000000010100001100111
00000000000000000000000000000010000000000010001100001111
00000000000000000000000000000000001000100100001010000111
00000000000000000000000000000000001000001100010001000111
00000000000000000000000000000000001000100100010001000111
00000000000000000000000000000000100000010100000001001111
00000000000000000000000000000000100000100001000001010111
00000000000000000000000000000010000000000100010001001111
00000000000000000000000000000001000000100000001001010111
00000000000000000000000000000000100000010100000100001111
00000000000000000000000000000000100000100010000001100111
00000000000000000000000000000000001000010001001100000111
00000000000000000000000000000010000000000001001100010111
00000000000000000000000000000000010000001010010000100111
00000000000000000000000000000000100000001001000100010111
00000000000000000000000000000001000000100000010001100111
00000000000000000000000000000010000000000001001010100111
00000000000000000000000000000000001000010100001010000111
00000000000000000000000000000000010000001010001000100111
00000000000000000000000000000000100000010100000001010111
00000000000000000000000000000001000000010000001100001111
00000000000000000000000000000000100000100010000001001111
00000000000000000000000000000010000000000010001100100111
00000000000000000000000000000001000000100000001010001111
00000000000000000000000000000000100000010001000001100111
00000000000000000000000000000001000000001000100010010111
00000000000000000000000000000000010000010100001000001111
00000000000000000000000000000000001000010001100001000111
00000000000000000000000000000001000000010000001100100111
00000000000000000000000000000000100000001010000001100111
00000000000000000000000000000000100000100001000010100111
00000000000000000000000000000000100000100010000100001111
00000000000000000000000000000000010000001100010000100111
00000000000000000000000000000000010000100010001000010111
00000000000000000000000000000000100000100100000001010111
00000000000000000000000000000001000000001000100010001111
00000000000000000000000000000000010000100001010000010111
00000000000000000000000000000000100000010001000100001111
00000000000000000000000000000000010000001100010000010111
00000000000000000000000000000001000000100000010001010111
00000000000000000000000000000000100000001100000010010111
00000000000000000000000000000000010000001010100000010111
00000000000000000000000000000000010000100010100000001111
00000000000000000000000000000010000000000001100010001111
00000000000000000000000000000010000000000100001100010111
00000000000000000000000000000000001000001010001100000111
00000000000000000000000000000000001000001100010010000111
00000000000000000000000000000010000000000100100001010111
00000000000000000000000000000001000000010000100100001111
00000000000000000000000000000000100000001100000010001111
00000000000000000000000000000000001000010001010100000111
00000000000000000000000000000000001000001100001010000111
00000000000000000000000000000000100000010010000001100111
00000000000000000000000000000000010000001100100000010111
00000000000000000000000000000010000000000010100001001111
00000000000000000000000000000001000000010000001001100111
00000000000000000000000000000000010000100100001000010111
00000000000000000000000000000010000000000001100010100111
00000000000000000000000000000000010000010100010000001111
00000000000000000000000000000001000000100000010010001111
00000000000000000000000000000000001000001100100010000111
00000000000000000000000000000001000000100000010001001111
00000000000000000000000000000000001000100010100001000111
00000000000000000000000000000000010000100010010000001111
00000000000000000000000000000000100000100010000010001111
00000000000000000000000000000000100000001100000001010111
00000000000000000000000000000000100000010100000010001111
00000000000000000000000000000000010000010010100000001111
00000000000000000000000000000000010000001001100000010111
00000000000000000000000000000000100000010100000001100111
00000000000000000000000000000001000000100000001100010111
00000000000000000000000000000000100000001010000010100111
00000000000000000000000000000000001000001001010100000111
00000000000000000000000000000001000000010000001010100111
00000000000000000000000000000001000000100000010100001111
00000000000000000000000000000000001000010100100001000111
00000000000000000000000000000000001000100001010100000111
00000000000000000000000000000000100000100001000010001111
00000000000000000000000000000010000000000001010100100111
00000000000000000000000000000000001000010010100001000111
00000000000000000000000000000000010000001010100000001111
00000000000000000000000000000000001000100010001100000111
00000000000000000000000000000001000000001000010100100111
00000000000000000000000000000010000000000100001010001111
00000000000000000000000000000010000000000100001010100111
00000000000000000000000000000000010000010001100000001111
00000000000000000000000000000000100000001010000100001111
00000000000000000000000000000000010000100010001000001111
00000000000000000000000000000001000000100000100010001111
00000000000000000000000000000001000000001000010010100111
00000000000000000000000000000000010000010100100000001111
00000000000000000000000000000000010000001100010000001111
00000000000000000000000000000000010000010001001000100111
00000000000000000000000000000010000000000001010100001111
00000000000000000000000000000000010000010001100000100111




=== State Orbit 24 =====================
size : 60
repr state: 00000000000000000000000000000000111000100010000000000111
lex min decimal: 16574408540812857404599
states:
00000000000000000000000000000011001000000000100001000111
00000000000000000000000000000001110000100000000000010111
00000000000000000000000000000001011000010000001000000111
00000000000000000000000000000010110000000001000000100111
00000000000000000000000000000001011000100000010000000111
00000000000000000000000000000011100000000000000100010111
00000000000000000000000000000011100000000000000001010111
00000000000000000000000000000011100000000000000010001111
00000000000000000000000000000001011000001000010000000111
00000000000000000000000000000010101000000001000010000111
00000000000000000000000000000000111000100001000000000111
00000000000000000000000000000001011000001000100000000111
00000000000000000000000000000011010000000000010000001111
00000000000000000000000000000001110000001000000000100111
00000000000000000000000000000011001000000000010100000111
00000000000000000000000000000010110000000010000000001111
00000000000000000000000000000010101000000010000100000111
00000000000000000000000000000011100000000000000100001111
00000000000000000000000000000000111000010001000000000111
00000000000000000000000000000000111000010100000000000111
00000000000000000000000000000011001000000000010001000111
00000000000000000000000000000001011000100000001000000111
00000000000000000000000000000010101000000010000001000111
00000000000000000000000000000011010000000000001000010111
00000000000000000000000000000011100000000000000001100111
00000000000000000000000000000011010000000000001000100111
00000000000000000000000000000010011000000001100000000111
00000000000000000000000000000001110000100000000000001111
00000000000000000000000000000001101000010000000001000111
00000000000000000000000000000011001000000000100010000111
00000000000000000000000000000011100000000000000010100111
00000000000000000000000000000000111000001100000000000111
00000000000000000000000000000001101000100000000010000111
00000000000000000000000000000010101000000100000010000111
00000000000000000000000000000001101000001000000010000111
00000000000000000000000000000011010000000000100000010111
00000000000000000000000000000000111000001010000000000111
00000000000000000000000000000010011000000100001000000111
00000000000000000000000000000010110000000100000000001111
00000000000000000000000000000010110000000001000000010111
00000000000000000000000000000011001000000000001100000111
00000000000000000000000000000001101000001000000100000111
00000000000000000000000000000000111000100010000000000111
00000000000000000000000000000011010000000000010000100111
00000000000000000000000000000010011000000010001000000111
00000000000000000000000000000011010000000000100000001111
00000000000000000000000000000001110000001000000000010111
00000000000000000000000000000010011000000100010000000111
00000000000000000000000000000010011000000010100000000111
00000000000000000000000000000001101000010000000100000111
00000000000000000000000000000010101000000100000001000111
00000000000000000000000000000010101000000001000100000111
00000000000000000000000000000010011000000001010000000111
00000000000000000000000000000001110000010000000000001111
00000000000000000000000000000010110000000100000000010111
00000000000000000000000000000010110000000010000000100111
00000000000000000000000000000001011000010000100000000111
00000000000000000000000000000001101000100000000001000111
00000000000000000000000000000011001000000000001010000111
00000000000000000000000000000001110000010000000000100111




=== State Orbit 25 =====================
size : 60
repr state: 00000000000000000000000000000000011000100010001000000111
lex min decimal: 7131981418082780671159
states:
00000000000000000000000000000000101000001010000100000111
00000000000000000000000000000000101000010100000001000111
00000000000000000000000000000001010000010000001000100111
00000000000000000000000000000010001000000001100010000111
00000000000000000000000000000010001000000001010100000111
00000000000000000000000000000010010000000010100000001111
00000000000000000000000000000000101000001100000010000111
00000000000000000000000000000010001000000100001010000111
00000000000000000000000000000001100000100000000010001111
00000000000000000000000000000010010000000010001000100111
00000000000000000000000000000010010000000100010000001111
00000000000000000000000000000000011000100010001000000111
00000000000000000000000000000010001000000010001100000111
00000000000000000000000000000000101000100001000010000111
00000000000000000000000000000001100000001000000100010111
00000000000000000000000000000001001000010000100001000111
00000000000000000000000000000011000000000000001100010111
00000000000000000000000000000001100000001000000010100111
00000000000000000000000000000001010000010000100000001111
00000000000000000000000000000001100000010000000100001111
00000000000000000000000000000010100000000100000001010111
00000000000000000000000000000000110000010001000000100111
00000000000000000000000000000000110000100001000000010111
00000000000000000000000000000001100000010000000001100111
00000000000000000000000000000010100000000001000010100111
00000000000000000000000000000011000000000000010100001111
00000000000000000000000000000001001000100000001010000111
00000000000000000000000000000001001000010000001100000111
00000000000000000000000000000000110000001100000000010111
00000000000000000000000000000001010000001000100000010111
00000000000000000000000000000010010000000001010000100111
00000000000000000000000000000010100000000010000100001111
00000000000000000000000000000011000000000000100010001111
00000000000000000000000000000001001000100000010001000111
00000000000000000000000000000000011000001100010000000111
00000000000000000000000000000001100000100000000001010111
00000000000000000000000000000000011000010001100000000111
00000000000000000000000000000000011000100001010000000111
00000000000000000000000000000011000000000000100001010111
00000000000000000000000000000010001000000100010001000111
00000000000000000000000000000010100000000010000001100111
00000000000000000000000000000010100000000001000100010111
00000000000000000000000000000010001000000010100001000111
00000000000000000000000000000001010000100000001000010111
00000000000000000000000000000011000000000000010001100111
00000000000000000000000000000000110000001010000000100111
00000000000000000000000000000011000000000000001010100111
00000000000000000000000000000001010000100000010000001111
00000000000000000000000000000001001000001000010100000111
00000000000000000000000000000010010000000001100000010111
00000000000000000000000000000010100000000100000010001111
00000000000000000000000000000000101000010001000100000111
00000000000000000000000000000001010000001000010000100111
00000000000000000000000000000000110000010100000000001111
00000000000000000000000000000010010000000100001000010111
00000000000000000000000000000000101000100010000001000111
00000000000000000000000000000001001000001000100010000111
00000000000000000000000000000000110000100010000000001111
00000000000000000000000000000000011000010100001000000111
00000000000000000000000000000000011000001010100000000111




=== State Orbit 26 =====================
size : 30
repr state: 00000000000000000000000000000001111000100000000000000110
lex min decimal: 35454646596654956113079
states:
00000000000000000000000000000001111000001000000000000101
00000000000000000000000000000011101000000000000010000011
00000000000000000000000000000001111000010000000000000011
00000000000000000000000000000011110000000000000000010011
00000000000000000000000000000011101000000000000001000011
00000000000000000000000000000010111000000100000000000110
00000000000000000000000000000001111000010000000000000110
00000000000000000000000000000011110000000000000000100101
00000000000000000000000000000011101000000000000010000110
00000000000000000000000000000011110000000000000000001011
00000000000000000000000000000010111000000010000000000011
00000000000000000000000000000011011000000000001000000011
00000000000000000000000000000010111000000010000000000110
00000000000000000000000000000011101000000000000100000101
00000000000000000000000000000011011000000000001000000101
00000000000000000000000000000011110000000000000000001101
00000000000000000000000000000001111000001000000000000011
00000000000000000000000000000011101000000000000001000101
00000000000000000000000000000011011000000000100000000110
00000000000000000000000000000010111000000100000000000101
00000000000000000000000000000011110000000000000000100110
00000000000000000000000000000010111000000001000000000011
00000000000000000000000000000011011000000000100000000101
00000000000000000000000000000001111000100000000000000101
00000000000000000000000000000010111000000001000000000101
00000000000000000000000000000011011000000000010000000110
00000000000000000000000000000011101000000000000100000110
00000000000000000000000000000011110000000000000000010110
00000000000000000000000000000011011000000000010000000011
00000000000000000000000000000001111000100000000000000110




=== State Orbit 27 =====================
size : 60
repr state: 00000000000000000000000000000000111000100100000000000110
lex min decimal: 16569792351194802646199
states:
00000000000000000000000000000011100000000000000010010110
00000000000000000000000000000001011000010000010000000110
00000000000000000000000000000010101000000010000010000110
00000000000000000000000000000011100000000000000001001011
00000000000000000000000000000010011000000001001000000101
00000000000000000000000000000011001000000000100100000110
00000000000000000000000000000011001000000000001001000011
00000000000000000000000000000001110000001000000000001011
00000000000000000000000000000010101000000001000001000011
00000000000000000000000000000001110000100000000000100101
00000000000000000000000000000000111000001001000000000011
00000000000000000000000000000010101000000001000001000101
00000000000000000000000000000001101000010000000010000110
00000000000000000000000000000010101000000100000100000101
00000000000000000000000000000011010000000000100000100110
00000000000000000000000000000011001000000000010010000110
00000000000000000000000000000011010000000000010000010011
00000000000000000000000000000000111000100100000000000110
00000000000000000000000000000011010000000000001000001101
00000000000000000000000000000000111000001001000000000101
00000000000000000000000000000011100000000000000010010011
00000000000000000000000000000001110000010000000000010110
00000000000000000000000000000010101000000100000100000110
00000000000000000000000000000010110000000100000000100101
00000000000000000000000000000011100000000000000100100101
00000000000000000000000000000011100000000000000001001101
00000000000000000000000000000001110000010000000000010011
00000000000000000000000000000010110000000010000000010110
00000000000000000000000000000011010000000000010000010110
00000000000000000000000000000010011000000010010000000110
00000000000000000000000000000001011000010000010000000011
00000000000000000000000000000001101000001000000001000011
00000000000000000000000000000011001000000000100100000101
00000000000000000000000000000010110000000100000000100110
00000000000000000000000000000010110000000001000000001011
00000000000000000000000000000000111000100100000000000101
00000000000000000000000000000001110000001000000000001101
00000000000000000000000000000010110000000010000000010011
00000000000000000000000000000001101000100000000100000101
00000000000000000000000000000011001000000000010010000011
00000000000000000000000000000000111000010010000000000011
00000000000000000000000000000010110000000001000000001101
00000000000000000000000000000011010000000000100000100101
00000000000000000000000000000011010000000000001000001011
00000000000000000000000000000001011000100000100000000101
00000000000000000000000000000001011000100000100000000110
00000000000000000000000000000001011000001000001000000101
00000000000000000000000000000001101000010000000010000011
00000000000000000000000000000010011000000001001000000011
00000000000000000000000000000010011000000100100000000101
00000000000000000000000000000001101000001000000001000101
00000000000000000000000000000001101000100000000100000110
00000000000000000000000000000010101000000010000010000011
00000000000000000000000000000001011000001000001000000011
00000000000000000000000000000011100000000000000100100110
00000000000000000000000000000000111000010010000000000110
00000000000000000000000000000011001000000000001001000101
00000000000000000000000000000010011000000100100000000110
00000000000000000000000000000001110000100000000000100110
00000000000000000000000000000010011000000010010000000011




=== State Orbit 28 =====================
size : 60
repr state: 10000000000000000000000000000000011000100100100000000110
lex min decimal: 132226923532880859983031
states:
00000000000000000000001000000010010000000010010000010011
00000000000100000000000000000001001000001000001001000011
00001000000000000000000000000000101000010010000010000110
00000000000000000000100000000010001000000001001001000011
00000000000000000001000000000010001000000010010010000011
01000000000000000000000000000000011000010010010000000110
00000000000000000000001000000010010000000010010000010110
00000000001000000000000000000001001000010000010010000011
00000000000000000000010000000010010000000100100000100101
00000000000000001000000000000001100000010000000010010011
00010000000000000000000000000000101000100100000100000101
00000000000000010000000000000001100000100000000100100101
00000000000000000000000010000010100000000100000100100101
00000000000000000000000000100010100000000001000001001101
00000000000000000000000010000010100000000100000100100110
00000000000010000000000000000001010000100000100000100101
00000000000000000100000000000001100000001000000001001011
00000000000000000001000000000010001000000010010010000110
00000010000000000000000000000000110000100100000000100110
00100000000000000000000000000000011000001001001000000101
00000000000000000000010000000010010000000100100000100110
00000000000000000000000000001011000000000000010010010110
00000000000000000100000000000001100000001000000001001101
00000100000000000000000000000000101000001001000001000011
00000100000000000000000000000000101000001001000001000101
00000000000000100000000000000001010000001000001000001101
00000000000000000000000000010011000000000000100100100110
00000000010000000000000000000001001000100000100100000101
10000000000000000000000000000000011000100100100000000110
00000000000000000000000100000010010000000001001000001101
00000000000000000000000001000010100000000010000010010011
00100000000000000000000000000000011000001001001000000011
00000000000000100000000000000001010000001000001000001011
00000000000100000000000000000001001000001000001001000101
00000000000000000000000000100010100000000001000001001011
00000000000000010000000000000001100000100000000100100110
00000000000010000000000000000001010000100000100000100110
00000000000001000000000000000001010000010000010000010011
00000000000000000000000100000010010000000001001000001011
00000001000000000000000000000000110000010010000000010110
00000010000000000000000000000000110000100100000000100101
00000000100000000000000000000000110000001001000000001011
00000000000000000000100000000010001000000001001001000101
00000000000000000000000000001011000000000000010010010011
00000000000000000000000000000111000000000000001001001101
00000000000000000000000000000111000000000000001001001011
00000000100000000000000000000000110000001001000000001101
00000000000000000010000000000010001000000100100100000110
10000000000000000000000000000000011000100100100000000101
00010000000000000000000000000000101000100100000100000110
00000000010000000000000000000001001000100000100100000110
00000000000001000000000000000001010000010000010000010110
00000000000000000010000000000010001000000100100100000101
00000001000000000000000000000000110000010010000000010011
01000000000000000000000000000000011000010010010000000011
00000000001000000000000000000001001000010000010010000110
00000000000000001000000000000001100000010000000010010110
00001000000000000000000000000000101000010010000010000011
00000000000000000000000001000010100000000010000010010110
00000000000000000000000000010011000000000000100100100101




=== State Orbit 29 =====================
size : 30
repr state: 10010000010000000010000000000000001000100100100100000110
lex min decimal: 44239134485221385583291575
states:
00000000000000000000100100100110000000000001001001001101
00100100000100000000100000000000001000001001001001000011
10000010000010000000010000000000010000100100100000100101
10000010000010000000010000000000010000100100100000100110
00100100000100000000100000000000001000001001001001000101
00000000000100100100000000000101000000001000001001001011
10010000010000000010000000000000001000100100100100000110
00000000000000000000100100100110000000000001001001001011
00001001000000001000000001000000100000010010000010010110
00000100100000000100000000100000100000001001000001001011
00001001000000001000000001000000100000010010000010010011
00000000001001001000000000001001000000010000010010010110
00000000010010010000000000010001000000100000100100100110
00000100100000000100000000100000100000001001000001001101
00000000010010010000000000010001000000100000100100100101
00000000000100100100000000000101000000001000001001001101
01001000001000000001000000000000001000010010010010000011
00000000001001001000000000001001000000010000010010010011
00000000000000000001001001001010000000000010010010010110
00010010000000010000000010000000100000100100000100100110
01000001000001000000001000000000010000010010010000010011
01000001000001000000001000000000010000010010010000010110
00010010000000010000000010000000100000100100000100100101
10010000010000000010000000000000001000100100100100000101
00100000100000100000000100000000010000001001001000001101
01001000001000000001000000000000001000010010010010000110
00000000000000000001001001001010000000000010010010010011
00000000000000000010010010010010000000000100100100100110
00000000000000000010010010010010000000000100100100100101
00100000100000100000000100000000010000001001001000001011




=== State Orbit 30 =====================
size : 6
repr state: 10010010010010010010010010010000000000100100100100100110
lex min decimal: 11589948334191998325250166451383
states:
10010010010010010010010010010000000000100100100100100101
00100100100100100100100100100100000000001001001001001101
01001001001001001001001001001000000000010010010010010110
00100100100100100100100100100100000000001001001001001011
01001001001001001001001001001000000000010010010010010011
10010010010010010010010010010000000000100100100100100110




=== State Orbit 31 =====================
size : 6
repr state: 10010010010010010010010010010000000100100100100100100110
lex min decimal: 11589948334487146230429519277239
states:
00100100100100100100100100100100000001001001001001001011
01001001001001001001001001001000000010010010010010010110
10010010010010010010010010010000000100100100100100100110
00100100100100100100100100100100000001001001001001001101
10010010010010010010010010010000000100100100100100100101
01001001001001001001001001001000000010010010010010010011




=== State Orbit 32 =====================
size : 30
repr state: 10010000010000000010000000000000000000100100100100010110
lex min decimal: 44201429340334723259788471
states:
00010010000000010000000010000000000000100100001100100101
01001000001000000001000000000000000000010010010010001011
01000001000001000000001000000000000000010010010001010011
00000100100000000100000000100000000000001001100001001101
00000000000000000001001001001000000000100010010010010110
00100100000100000000100000000000000000001001001001010011
00100000100000100000000100000000000000001001001010001011
00000100100000000100000000100000000000001001010001001011
01001000001000000001000000000000000000010010010010100110
00000000000000000001001001001000000000001010010010010011
00000000000000000010010010010000000000010100100100100110
10010000010000000010000000000000000000100100100100001101
00000000001001001000000000001000000000010100010010010110
00000000000100100100000000000100000000001100001001001101
00000000001001001000000000001000000000010001010010010011
00010010000000010000000010000000000000100100010100100110
01000001000001000000001000000000000000010010010100010110
00100100000100000000100000000000000000001001001001100101
00100000100000100000000100000000000000001001001100001101
00000000010010010000000000010000000000100010100100100110
00001001000000001000000001000000000000010010001010010011
00000000010010010000000000010000000000100001100100100101
00000000000000000000100100100100000000100001001001001101
00001001000000001000000001000000000000010010100010010110
10010000010000000010000000000000000000100100100100010110
10000010000010000000010000000000000000100100100010100110
10000010000010000000010000000000000000100100100001100101
00000000000100100100000000000100000000001010001001001011
00000000000000000010010010010000000000001100100100100101
00000000000000000000100100100100000000010001001001001011




=== State Orbit 33 =====================
size : 30
repr state: 10010000010000000010000000000000000100100100100100010110
lex min decimal: 44201724488239902612614327
states:
00001001000000001000000001000000000010010010100010010110
10010000010000000010000000000000000100100100100100001101
00001001000000001000000001000000000010010010001010010011
01000001000001000000001000000000000010010010010001010011
00100100000100000000100000000000000001001001001001100101
00000000000000000001001001001000000010100010010010010110
00000000000000000000100100100100000001100001001001001101
10010000010000000010000000000000000100100100100100010110
00000000010010010000000000010000000100100010100100100110
00000000000100100100000000000100000001001010001001001011
00010010000000010000000010000000000100100100010100100110
00100000100000100000000100000000000001001001001010001011
10000010000010000000010000000000000100100100100001100101
10000010000010000000010000000000000100100100100010100110
00000000001001001000000000001000000010010001010010010011
00000000000100100100000000000100000001001100001001001101
00000000000000000001001001001000000010001010010010010011
00000000001001001000000000001000000010010100010010010110
01001000001000000001000000000000000010010010010010001011
00000000010010010000000000010000000100100001100100100101
00000000000000000000100100100100000001010001001001001011
00000100100000000100000000100000000001001001100001001101
01000001000001000000001000000000000010010010010100010110
00100000100000100000000100000000000001001001001100001101
00000000000000000010010010010000000100010100100100100110
01001000001000000001000000000000000010010010010010100110
00100100000100000000100000000000000001001001001001010011
00000100100000000100000000100000000001001001010001001011
00000000000000000010010010010000000100001100100100100101
00010010000000010000000010000000000100100100001100100101




=== State Orbit 34 =====================
size : 30
repr state: 10010000010000000010000000000000001100100100100100000110
lex min decimal: 44239429633126564936117431
states:
00000000000000000001001001001010000010000010010010010110
00000000010010010000000000010001000100100000100100100101
00100000100000100000000100000000010001001001001000001011
00001001000000001000000001000000100010010010000010010011
01001000001000000001000000000000001010010010010010000011
10010000010000000010000000000000001100100100100100000110
00100000100000100000000100000000010001001001001000001101
00000000000100100100000000000101000001001000001001001101
00001001000000001000000001000000100010010010000010010110
00000000010010010000000000010001000100100000100100100110
00010010000000010000000010000000100100100100000100100110
00000000000000000010010010010010000100000100100100100110
01000001000001000000001000000000010010010010010000010011
00000000000100100100000000000101000001001000001001001011
00100100000100000000100000000000001001001001001001000101
00000000001001001000000000001001000010010000010010010110
00100100000100000000100000000000001001001001001001000011
00000000000000000010010010010010000100000100100100100101
00000100100000000100000000100000100001001001000001001011
10000010000010000000010000000000010100100100100000100110
00000000001001001000000000001001000010010000010010010011
10000010000010000000010000000000010100100100100000100101
01000001000001000000001000000000010010010010010000010110
00000100100000000100000000100000100001001001000001001101
00000000000000000000100100100110000001000001001001001101
01001000001000000001000000000000001010010010010010000110
10010000010000000010000000000000001100100100100100000101
00000000000000000001001001001010000010000010010010010011
00000000000000000000100100100110000001000001001001001011
00010010000000010000000010000000100100100100000100100101




=== State Orbit 35 =====================
size : 120
repr state: 10000000000000000000000000000000001000100100100010000110
lex min decimal: 94521778646218536479927
states:
00000000010000000000000000000000001000100001100100000101
01000000000000000000000000000000010000010010010000001011
00000000001000000000000000000000001000010001010010000011
00000000000000000000000000001001000000100000010010010110
00000000000000000000000000001010000000000001010010010011
00000000000000000000001000000010000000000010010100010110
00000000000000000010000000000010000000000100100100001101
00000100000000000000000000000000001000001001100001000101
00000000000000000000000000001010000000000100010010010110
10000000000000000000000000000000001000100100100001000101
00000000000000000000000000010010000000000010100100100110
00000000000000000000000000010001000000001000100100100101
00000100000000000000000000000000001000001001010001000011
00000000000000000000000100000000010000010001001000001011
00000000000000000000000000010010000000000001100100100101
00000000000000000000100000000000001000010001001001000011
00000100000000000000000000000000100000001001000001100101
00000000000000010000000000000000100000100001000100100101
00000000000000000000000010000000100000010100000100100110
00000000000000000000000010000010000000000100001100100101
00000000000000000000010000000000010000010100100000100110
00000000000000100000000000000000010000001100001000001101
00000000000000000100000000000000100000001100000001001101
00000000000000000000001000000010000000000010010001010011
00000000000000001000000000000001000000010000001010010011
00000000000000000000000001000010000000000010001010010011
00000000000000000010000000000000001000001100100100000101
00000000000100000000000000000001000000001000001001100101
00000000000000000000000000100000100000100001000001001101
00000000001000000000000000000000001000010100010010000110
00000000000000000010000000000010000000000100100100010110
00000000000000010000000000000000100000100010000100100110
00000010000000000000000000000000100000100100000001100101
00000010000000000000000000000000010000100100010000100110
00000000000000000000000000000101000000010000001001001011
00000100000000000000000000000000100000001001000001010011
00000000000000000000000000100010000000000001010001001011
00000000000010000000000000000001000000100000100001100101
00000000000000000000001000000000010000100010010000010110
00000000000000000000000000000110000000000010001001001011
00000000000000000100000000000000100000001010000001001011
00000000000001000000000000000001000000010000010100010110
00100000000000000000000000000000010000001001001000100101
00000000000000010000000000000001000000100000010100100110
00000000010000000000000000000000001000100010100100000110
00000000000000000000100000000010000000000001001001100101
00000000000000010000000000000001000000100000001100100101
00000000000100000000000000000001000000001000001001010011
01000000000000000000000000000000010000010010010000100110
00000000000000000000000001000000100000100010000010010110
00000000100000000000000000000000100000001001000100001101
00000000000010000000000000000000010000100010100000100110
00000000000100000000000000000000001000001100001001000101
00010000000000000000000000000000100000100100000100010110
00010000000000000000000000000000001000100100010100000110
00000000000000100000000000000001000000001000001100001101
10000000000000000000000000000000010000100100100000001101
00000000000000000001000000000010000000000010010010100110
00000000000000000000000001000010000000000010100010010110
00100000000000000000000000000000010000001001001000010011
00000000000000000000000000001001000000001000010010010011
00001000000000000000000000000000001000010010001010000011
00000000000000000000100000000000001000100001001001000101
00000000000000000001000000000010000000000010010010001011
00000000000000001000000000000001000000010000100010010110
01000000000000000000000000000000001000010010010001000011
00000000001000000000000000000001000000010000010010100110
00000000000100000000000000000000001000001010001001000011
10000000000000000000000000000000001000100100100010000110
10000000000000000000000000000000010000100100100000010110
00000000000000000000000000010001000000010000100100100110
00000000100000000000000000000000010000001001100000001101
00000000000010000000000000000000010000100001100000100101
00000000000000000100000000000001000000001000100001001101
00000000000000000000000000100010000000000001100001001101
00000000010000000000000000000001000000100000100100001101
00000000000000000000000100000000010000100001001000001101
00000000000010000000000000000001000000100000100010100110
00000000000000000000000001000000100000001010000010010011
00000000100000000000000000000000010000001001010000001011
00000000000000000000000000100000100000010001000001001011
00000000000000001000000000000000100000010100000010010110
00000000000000000000000010000000100000001100000100100101
00001000000000000000000000000000100000010010000010100110
00001000000000000000000000000000100000010010000010001011
00000010000000000000000000000000100000100100000010100110
00000001000000000000000000000000100000010010000001010011
00001000000000000000000000000000001000010010100010000110
00000001000000000000000000000000010000010010100000010110
00000000000001000000000000000001000000010000010001010011
00000000000000000100000000000001000000001000010001001011
00000000000000001000000000000000100000010001000010010011
00000000000000000000100000000010000000000001001001010011
01000000000000000000000000000000001000010010010100000110
00000000000000000001000000000000001000100010010010000110
00010000000000000000000000000000001000100100001100000101
00010000000000000000000000000000100000100100000100001101
00000000000000100000000000000001000000001000001010001011
00000000000000000000000100000010000000000001001100001101
00000000000000000001000000000000001000001010010010000011
00000000010000000000000000000001000000100000100100010110
00000000100000000000000000000000100000001001000010001011
00000000000000000000000010000010000000000100010100100110
00000000000001000000000000000000010000010100010000010110
00000001000000000000000000000000010000010010001000010011
00000000000001000000000000000000010000010001010000010011
00000000000000000000010000000010000000000100100001100101
00000000000000100000000000000000010000001010001000001011
00100000000000000000000000000000001000001001001010000011
00000000001000000000000000000001000000010000010010001011
00000000000000000000001000000000010000001010010000010011
00000000000000000000000000000101000000100000001001001101
00100000000000000000000000000000001000001001001100000101
00000000000000000010000000000000001000010100100100000110
00000001000000000000000000000000100000010010000100010110
00000000000000000000000100000010000000000001001010001011
00000010000000000000000000000000010000100100001000100101
00000000000000000000010000000010000000000100100010100110
00000000000000000000010000000000010000001100100000100101
00000000000000000000000000000110000000000100001001001101




=== State Orbit 36 =====================
size : 60
repr state: 10000000000000000000000000000000000000100100100010010110
lex min decimal: 75641536086776810400951
states:
00000000010000000000000000000000000000100010100100010110
00000000000000000100000000000000000000001010010001001011
00000000000001000000000000000000000000010001010001010011
00000000100000000000000000000000000000001001010010001011
00000000000000000000000010000000000000010100010100100110
00000000000000000000000001000000000000100010100010010110
00000000000000000000000001000000000000001010001010010011
00000000000000000010000000000000000000001100100100001101
00000000000000000000001000000000000000001010010001010011
00000000000010000000000000000000000000100001100001100101
00000000000000100000000000000000000000001100001100001101
00000001000000000000000000000000000000010010100100010110
00100000000000000000000000000000000000001001001010010011
00000000000000000010000000000000000000010100100100010110
00010000000000000000000000000000000000100100010100010110
00000000100000000000000000000000000000001001100100001101
00000000000000000000000000000100000000100100001001001101
00000000000000010000000000000000000000100001001100100101
00000000000001000000000000000000000000010100010100010110
00000000000100000000000000000000000000001010001001010011
00000000000100000000000000000000000000001100001001100101
00000000000000100000000000000000000000001010001010001011
00000000000000010000000000000000000000100010010100100110
00000000000000000000010000000000000000010100100010100110
00000000000000000000000000100000000000100001100001001101
00010000000000000000000000000000000000100100001100001101
00100000000000000000000000000000000000001001001100100101
00000000000000000000000000010000000000001001100100100101
00000001000000000000000000000000000000010010001001010011
00000000000000000000000000001000000000001001010010010011
00000000000000000000100000000000000000100001001001100101
00000000001000000000000000000000000000010001010010001011
00000000000000000000000000001000000000100100010010010110
00000000000000000100000000000000000000001100100001001101
00000000000000000000000000100000000000010001010001001011
00000000001000000000000000000000000000010100010010100110
00000000000000000000000010000000000000001100001100100101
10000000000000000000000000000000000000100100100010010110
00000000000000000000100000000000000000010001001001010011
01000000000000000000000000000000000000010010010100100110
00000000000000000000001000000000000000100010010100010110
00000000000000000000000100000000000000010001001010001011
00000000010000000000000000000000000000100001100100001101
00000010000000000000000000000000000000100100001001100101
00000000000000000001000000000000000000001010010010001011
00000000000000001000000000000000000000010100100010010110
00000000000000001000000000000000000000010001001010010011
00000100000000000000000000000000000000001001100001100101
00000010000000000000000000000000000000100100010010100110
10000000000000000000000000000000000000100100100001001101
00000000000010000000000000000000000000100010100010100110
00000000000000000001000000000000000000100010010010100110
00000000000000000000000000000100000000010010001001001011
00000000000000000000000100000000000000100001001100001101
00001000000000000000000000000000000000010010001010001011
00001000000000000000000000000000000000010010100010100110
01000000000000000000000000000000000000010010010001001011
00000000000000000000010000000000000000001100100001100101
00000000000000000000000000010000000000010010100100100110
00000100000000000000000000000000000000001001010001010011




=== State Orbit 37 =====================
size : 60
repr state: 10000000000000000000000000000000000100100100100010010110
lex min decimal: 75936683991956163226807
states:
00000010000000000000000000000000000100100100010010100110
00000000000001000000000000000000000010010001010001010011
00001000000000000000000000000000000010010010001010001011
00000100000000000000000000000000000001001001010001010011
00000010000000000000000000000000000100100100001001100101
00000000000000100000000000000000000001001100001100001101
00000000000000000010000000000000000100010100100100010110
00000000000000000000010000000000000100010100100010100110
00000000000100000000000000000000000001001010001001010011
00000000000000001000000000000000000010010001001010010011
00000000000000000000000000000100000001010010001001001011
00000000000000000000000001000000000010001010001010010011
00001000000000000000000000000000000010010010100010100110
00000000000000000000000010000000000100001100001100100101
00000000000000000000000000010000000100010010100100100110
00000000000000000010000000000000000100001100100100001101
00000000001000000000000000000000000010010001010010001011
00000001000000000000000000000000000010010010001001010011
00000000000000100000000000000000000001001010001010001011
00000000000100000000000000000000000001001100001001100101
00000000000000000000100000000000000001010001001001010011
00000000000010000000000000000000000100100001100001100101
00000000000000001000000000000000000010010100100010010110
00000000000000000100000000000000000001001010010001001011
00000000000000000000000100000000000001100001001100001101
00000100000000000000000000000000000001001001100001100101
00000000000000000000000000010000000100001001100100100101
00000000000000000000000010000000000100010100010100100110
00000000000000000000000001000000000010100010100010010110
00000000000000000001000000000000000010001010010010001011
00000000000000000000001000000000000010100010010100010110
00000001000000000000000000000000000010010010100100010110
00000000000010000000000000000000000100100010100010100110
00100000000000000000000000000000000001001001001010010011
10000000000000000000000000000000000100100100100010010110
00000000000000000000100000000000000001100001001001100101
01000000000000000000000000000000000010010010010100100110
00000000000000000000000000100000000001100001100001001101
00000000000000000000000000001000000010100100010010010110
00000000000000010000000000000000000100100001001100100101
00010000000000000000000000000000000100100100001100001101
00000000000000000001000000000000000010100010010010100110
00000000000000000000000100000000000001010001001010001011
01000000000000000000000000000000000010010010010001001011
00000000000000010000000000000000000100100010010100100110
00000000010000000000000000000000000100100001100100001101
00000000000000000000001000000000000010001010010001010011
00010000000000000000000000000000000100100100010100010110
00100000000000000000000000000000000001001001001100100101
00000000100000000000000000000000000001001001100100001101
00000000000001000000000000000000000010010100010100010110
00000000010000000000000000000000000100100010100100010110
00000000000000000000010000000000000100001100100001100101
00000000001000000000000000000000000010010100010010100110
00000000000000000000000000001000000010001001010010010011
00000000100000000000000000000000000001001001010010001011
00000000000000000100000000000000000001001100100001001101
00000000000000000000000000100000000001010001010001001011
00000000000000000000000000000100000001100100001001001101
10000000000000000000000000000000000100100100100001001101




=== State Orbit 38 =====================
size : 120
repr state: 10000000000000000000000000000000001100100100100010000110
lex min decimal: 94816926551397889305783
states:
00000000000000000000000100000000010001100001001000001101
00000000000001000000000000000000010010010100010000010110
00000000000000000100000000000000100001001100000001001101
00000000000000000000000000100000100001010001000001001011
00000000000000000000100000000010000001000001001001100101
00000000000000000001000000000010000010000010010010100110
00000000000000010000000000000000100100100001000100100101
10000000000000000000000000000000010100100100100000001101
00000010000000000000000000000000010100100100001000100101
00000000000000000000100000000000001001100001001001000101
00000000000000000000001000000010000010000010010001010011
00010000000000000000000000000000100100100100000100001101
00000000000000000010000000000000001100010100100100000110
00000000100000000000000000000000010001001001010000001011
00000000000000010000000000000000100100100010000100100110
00000100000000000000000000000000001001001001100001000101
00000000000000000000000010000010000100000100010100100110
01000000000000000000000000000000010010010010010000100110
00000000000001000000000000000000010010010001010000010011
00000000000000000000000010000000100100010100000100100110
00000000000000000000001000000000010010001010010000010011
00000000000001000000000000000001000010010000010100010110
00000000000000000000000000001010000010000100010010010110
00000000000000000000010000000010000100000100100001100101
00000000000000000000010000000000010100010100100000100110
01000000000000000000000000000000010010010010010000001011
00000000000000100000000000000000010001001010001000001011
00000000000000000010000000000010000100000100100100001101
00000000000000000001000000000010000010000010010010001011
00000000001000000000000000000000001010010001010010000011
00001000000000000000000000000000100010010010000010001011
00100000000000000000000000000000010001001001001000100101
00000100000000000000000000000000100001001001000001100101
00000000000000000000000001000000100010001010000010010011
00000000000000000000000100000000010001010001001000001011
00000000000000010000000000000001000100100000010100100110
00000000100000000000000000000000100001001001000100001101
00000000000100000000000000000001000001001000001001100101
00000000000000000000000000000101000001100000001001001101
00000000000000100000000000000001000001001000001100001101
00000010000000000000000000000000100100100100000010100110
00000000000001000000000000000001000010010000010001010011
00000000000000000001000000000000001010001010010010000011
00000000000000000000000000100000100001100001000001001101
00000000000000000100000000000001000001001000010001001011
00000000000000000000000000001001000010001000010010010011
00000000000100000000000000000000001001001100001001000101
00000000000000000000000100000010000001000001001100001101
00000000000000000000000001000010000010000010001010010011
00010000000000000000000000000000001100100100001100000101
00000000000000000000000000010001000100001000100100100101
00000001000000000000000000000000010010010010001000010011
00000000000000000000100000000000001001010001001001000011
00000000010000000000000000000000001100100001100100000101
00000001000000000000000000000000010010010010100000010110
00000000000100000000000000000000001001001010001001000011
00000100000000000000000000000000100001001001000001010011
00000000000000000000000000010010000100000001100100100101
10000000000000000000000000000000010100100100100000010110
00000000000000000000000000100010000001000001100001001101
00000000010000000000000000000001000100100000100100001101
00000001000000000000000000000000100010010010000100010110
00100000000000000000000000000000001001001001001100000101
00000000000010000000000000000000010100100010100000100110
00000000000000000000000000000101000001010000001001001011
00000000000100000000000000000001000001001000001001010011
00000000010000000000000000000000001100100010100100000110
00000000000000000000000000001010000010000001010010010011
00010000000000000000000000000000001100100100010100000110
00000000000000010000000000000001000100100000001100100101
00000000000010000000000000000001000100100000100010100110
00000000000000000000001000000010000010000010010100010110
00001000000000000000000000000000100010010010000010100110
00000000000000000000010000000010000100000100100010100110
00000000000000001000000000000001000010010000100010010110
00000000010000000000000000000001000100100000100100010110
00000010000000000000000000000000010100100100010000100110
00000000000000000000000000100010000001000001010001001011
00000000000000001000000000000001000010010000001010010011
00000000100000000000000000000000100001001001000010001011
00000000000000000000000010000010000100000100001100100101
00000001000000000000000000000000100010010010000001010011
00000000000000000001000000000000001010100010010010000110
00000000000000000000001000000000010010100010010000010110
00000000000000000000100000000010000001000001001001010011
10000000000000000000000000000000001100100100100001000101
00000000000000000000000000000110000001000100001001001101
00000000000000000100000000000001000001001000100001001101
00000000000000000000000000001001000010100000010010010110
00000000000000000010000000000010000100000100100100010110
00000000000000000000010000000000010100001100100000100101
00000000100000000000000000000000010001001001100000001101
10000000000000000000000000000000001100100100100010000110
01000000000000000000000000000000001010010010010100000110
00001000000000000000000000000000001010010010100010000110
00000000000000000100000000000000100001001010000001001011
00000000000000000000000010000000100100001100000100100101
00000000000000000000000000010010000100000010100100100110
00000000000000001000000000000000100010010001000010010011
00100000000000000000000000000000010001001001001000010011
00000000000000000000000100000010000001000001001010001011
00000000000000100000000000000000010001001100001000001101
00000000000000001000000000000000100010010100000010010110
00010000000000000000000000000000100100100100000100010110
00000010000000000000000000000000100100100100000001100101
00000000000010000000000000000000010100100001100000100101
00000000000000100000000000000001000001001000001010001011
00000000000000000000000000010001000100010000100100100110
00000000001000000000000000000001000010010000010010001011
00000000000000000000000001000000100010100010000010010110
01000000000000000000000000000000001010010010010001000011
00000000000000000000000000000110000001000010001001001011
00000000000010000000000000000001000100100000100001100101
00000000000000000010000000000000001100001100100100000101
00001000000000000000000000000000001010010010001010000011
00000000001000000000000000000001000010010000010010100110
00000000000000000000000001000010000010000010100010010110
00100000000000000000000000000000001001001001001010000011
00000100000000000000000000000000001001001001010001000011
00000000001000000000000000000000001010010100010010000110




=== State Orbit 39 =====================
size : 60
repr state: 10000000000000000000000000000000011100100100100000000110
lex min decimal: 132522071438060212808887
states:
00000000000000000000000001000010100010000010000010010011
00000000000000000000000000010011000100000000100100100110
00000000000000000000000000100010100001000001000001001011
00000000100000000000000000000000110001001001000000001101
00000000000000000000100000000010001001000001001001000101
00000000000000000001000000000010001010000010010010000011
00000000000000000000000100000010010001000001001000001101
00000000000000000000000000010011000100000000100100100101
00000100000000000000000000000000101001001001000001000011
10000000000000000000000000000000011100100100100000000110
00000000000000010000000000000001100100100000000100100110
01000000000000000000000000000000011010010010010000000110
00000000000000010000000000000001100100100000000100100101
00000001000000000000000000000000110010010010000000010011
00000000000000000000000000000111000001000000001001001011
00000000000000000000000010000010100100000100000100100110
00000000000000100000000000000001010001001000001000001101
00000000000000000000000100000010010001000001001000001011
00000000000000000000001000000010010010000010010000010110
00000000000000000000010000000010010100000100100000100101
00000001000000000000000000000000110010010010000000010110
01000000000000000000000000000000011010010010010000000011
00000000000001000000000000000001010010010000010000010110
00000000000100000000000000000001001001001000001001000011
00000010000000000000000000000000110100100100000000100101
00000000000001000000000000000001010010010000010000010011
00000000000000000000000001000010100010000010000010010110
00000000000000000000000000100010100001000001000001001101
00000100000000000000000000000000101001001001000001000101
00000000000000000000000000000111000001000000001001001101
00001000000000000000000000000000101010010010000010000011
00000000000000000000000010000010100100000100000100100101
00000000000000000000001000000010010010000010010000010011
00000000010000000000000000000001001100100000100100000101
00000000000010000000000000000001010100100000100000100101
00000000010000000000000000000001001100100000100100000110
00000000000000000100000000000001100001001000000001001101
00000000001000000000000000000001001010010000010010000011
00000000000000000001000000000010001010000010010010000110
00000000000000001000000000000001100010010000000010010011
00000000000000000100000000000001100001001000000001001011
00000000000000000010000000000010001100000100100100000101
00000000000000000000000000001011000010000000010010010110
00000000000100000000000000000001001001001000001001000101
00000000000000001000000000000001100010010000000010010110
00000000100000000000000000000000110001001001000000001011
10000000000000000000000000000000011100100100100000000101
00010000000000000000000000000000101100100100000100000101
00100000000000000000000000000000011001001001001000000101
00100000000000000000000000000000011001001001001000000011
00000000001000000000000000000001001010010000010010000110
00000000000000000000000000001011000010000000010010010011
00000000000000100000000000000001010001001000001000001011
00000000000010000000000000000001010100100000100000100110
00000000000000000000100000000010001001000001001001000011
00001000000000000000000000000000101010010010000010000110
00000000000000000010000000000010001100000100100100000110
00000000000000000000010000000010010100000100100000100110
00010000000000000000000000000000101100100100000100000110
00000010000000000000000000000000110100100100000000100110




=== State Orbit 40 =====================
size : 180
repr state: 00000000000000000000000000000000011000100100010000000110
lex min decimal: 7126212306960119065783
states:
00000000000000000000000000000000101000001010000010000011
00000000000000000000000000000000110000100100000000010110
00000000000000000000000000000001001000010000010001000011
00000000000000000000000000000010010000000010001000001011
00000000000000000000000000000001100000001000000010010011
00000000000000000000000000000000011000001010010000000011
00000000000000000000000000000001100000100000000001100101
00000000000000000000000000000000011000100100010000000110
00000000000000000000000000000010100000000010000100100110
00000000000000000000000000000010010000000010100000010110
00000000000000000000000000000000110000010100000000100110
00000000000000000000000000000001010000010000001000010011
00000000000000000000000000000000110000010100000000010110
00000000000000000000000000000011000000000000010100100110
00000000000000000000000000000000101000010001000010000011
00000000000000000000000000000001001000001000100001000101
00000000000000000000000000000011000000000000001010001011
00000000000000000000000000000010100000000100000100010110
00000000000000000000000000000000101000100010000100000110
00000000000000000000000000000010100000000010000010001011
00000000000000000000000000000010100000000001000100100101
00000000000000000000000000000000110000010001000000010011
00000000000000000000000000000000110000100100000000001101
00000000000000000000000000000000110000010010000000100110
00000000000000000000000000000010001000000100100010000110
00000000000000000000000000000001010000100000001000001101
00000000000000000000000000000001010000001000001000100101
00000000000000000000000000000011000000000000001001010011
00000000000000000000000000000010100000000100000010100110
00000000000000000000000000000010100000000001000001010011
00000000000000000000000000000010010000000100001000100101
00000000000000000000000000000011000000000000010100010110
00000000000000000000000000000001100000100000000100001101
00000000000000000000000000000010001000000100100001000101
00000000000000000000000000000001100000010000000100010110
00000000000000000000000000000010001000000001001100000101
00000000000000000000000000000010001000000010001001000011
00000000000000000000000000000011000000000000100100010110
00000000000000000000000000000000011000010010001000000011
00000000000000000000000000000001100000001000000010001011
00000000000000000000000000000000101000001100000100000101
00000000000000000000000000000000101000100100000001000101
00000000000000000000000000000010001000000001001010000011
00000000000000000000000000000001010000001000010000010011
00000000000000000000000000000010001000000001100100000101
00000000000000000000000000000001010000010000010000100110
00000000000000000000000000000001010000100000100000010110
00000000000000000000000000000001001000001000010001000011
00000000000000000000000000000001010000100000010000100110
00000000000000000000000000000001001000010000100100000110
00000000000000000000000000000001010000001000010000001011
00000000000000000000000000000000101000010010000100000110
00000000000000000000000000000000110000010001000000001011
00000000000000000000000000000000011000100001100000000101
00000000000000000000000000000000110000010010000000001011
00000000000000000000000000000001001000100000100010000110
00000000000000000000000000000001001000100000001100000101
00000000000000000000000000000010001000000100001001000101
00000000000000000000000000000001010000100000001000100101
00000000000000000000000000000010100000000010000010100110
00000000000000000000000000000010100000000100000010010110
00000000000000000000000000000001001000001000010010000011
00000000000000000000000000000000101000001001000010000011
00000000000000000000000000000001010000010000100000100110
00000000000000000000000000000000101000100001000100000101
00000000000000000000000000000011000000000000010001001011
00000000000000000000000000000000110000001100000000001101
00000000000000000000000000000010100000000001000010001011
00000000000000000000000000000000101000001010000001000011
00000000000000000000000000000010001000000100010100000110
00000000000000000000000000000010100000000100000001100101
00000000000000000000000000000010010000000100010000100110
00000000000000000000000000000000011000001100100000000101
00000000000000000000000000000011000000000000100001100101
00000000000000000000000000000010001000000001100001000101
00000000000000000000000000000000101000100100000010000110
00000000000000000000000000000000110000001100000000100101
00000000000000000000000000000010001000000100001100000101
00000000000000000000000000000011000000000000010010001011
00000000000000000000000000000001010000100000010000010110
00000000000000000000000000000001001000100000100001000101
00000000000000000000000000000010010000000010001000010011
00000000000000000000000000000001010000010000001000001011
00000000000000000000000000000011000000000000010001010011
00000000000000000000000000000010100000000001000001100101
00000000000000000000000000000001001000010000010100000110
00000000000000000000000000000001010000010000100000010110
00000000000000000000000000000010100000000010000001001011
00000000000000000000000000000010010000000010010000001011
00000000000000000000000000000011000000000000001100100101
00000000000000000000000000000010001000000010001010000011
00000000000000000000000000000010100000000001000100001101
00000000000000000000000000000010010000000010100000100110
00000000000000000000000000000000110000100010000000100110
00000000000000000000000000000000110000001010000000010011
00000000000000000000000000000000101000010100000010000110
00000000000000000000000000000010010000000001100000100101
00000000000000000000000000000000011000100100001000000101
00000000000000000000000000000001001000010000001010000011
00000000000000000000000000000010010000000100010000010110
00000000000000000000000000000001100000001000000100001101
00000000000000000000000000000010100000000010000100010110
00000000000000000000000000000001001000100000001001000101
00000000000000000000000000000010001000000010010100000110
00000000000000000000000000000010010000000100001000001101
00000000000000000000000000000001001000100000010100000110
00000000000000000000000000000000011000001001100000000101
00000000000000000000000000000000011000100010100000000110
00000000000000000000000000000010001000000010010001000011
00000000000000000000000000000000011000001100001000000101
00000000000000000000000000000010010000000001001000010011
00000000000000000000000000000011000000000000010010100110
00000000000000000000000000000010001000000100010010000110
00000000000000000000000000000000011000001010001000000011
00000000000000000000000000000000011000010100100000000110
00000000000000000000000000000001001000010000100010000110
00000000000000000000000000000000110000001010000000001011
00000000000000000000000000000011000000000000001001100101
00000000000000000000000000000010010000000100100000001101
00000000000000000000000000000000101000010100000100000110
00000000000000000000000000000000011000100001001000000101
00000000000000000000000000000010010000000001010000001011
00000000000000000000000000000001001000010000001001000011
00000000000000000000000000000001010000100000100000001101
00000000000000000000000000000000101000001001000100000101
00000000000000000000000000000001100000100000000001001101
00000000000000000000000000000011000000000000001010010011
00000000000000000000000000000000101000001100000001000101
00000000000000000000000000000001100000010000000100100110
00000000000000000000000000000010100000000100000001001101
00000000000000000000000000000000011000100010010000000110
00000000000000000000000000000000110000100001000000100101
00000000000000000000000000000001010000010000010000001011
00000000000000000000000000000010010000000010010000100110
00000000000000000000000000000000011000010001001000000011
00000000000000000000000000000000110000001001000000100101
00000000000000000000000000000001100000100000000010010110
00000000000000000000000000000001100000001000000001100101
00000000000000000000000000000010010000000001001000100101
00000000000000000000000000000011000000000000100100001101
00000000000000000000000000000011000000000000100010010110
00000000000000000000000000000001100000001000000001010011
00000000000000000000000000000000101000010010000001000011
00000000000000000000000000000000110000100001000000001101
00000000000000000000000000000010001000000010100100000110
00000000000000000000000000000001010000001000001000010011
00000000000000000000000000000001001000001000100100000101
00000000000000000000000000000011000000000000100010100110
00000000000000000000000000000010100000000001000010010011
00000000000000000000000000000010001000000001010001000011
00000000000000000000000000000000011000010100010000000110
00000000000000000000000000000010001000000001010010000011
00000000000000000000000000000001001000001000001010000011
00000000000000000000000000000000110000100010000000010110
00000000000000000000000000000010010000000001100000001101
00000000000000000000000000000001100000100000000100010110
00000000000000000000000000000011000000000000100001001101
00000000000000000000000000000010010000000100100000010110
00000000000000000000000000000001001000001000001100000101
00000000000000000000000000000000011000001001010000000011
00000000000000000000000000000001010000001000100000100101
00000000000000000000000000000001001000100000010010000110
00000000000000000000000000000000101000100010000010000110
00000000000000000000000000000001100000010000000001010011
00000000000000000000000000000000110000001001000000010011
00000000000000000000000000000010001000000010100010000110
00000000000000000000000000000010010000000001010000010011
00000000000000000000000000000000101000100001000001000101
00000000000000000000000000000001100000010000000001001011
00000000000000000000000000000001100000001000000100100101
00000000000000000000000000000011000000000000001100001101
00000000000000000000000000000001100000010000000010001011
00000000000000000000000000000000011000010010100000000110
00000000000000000000000000000000011000010001010000000011
00000000000000000000000000000001100000010000000010100110
00000000000000000000000000000000101000010001000001000011
00000000000000000000000000000001010000001000100000001101
00000000000000000000000000000010100000000010000001010011
00000000000000000000000000000010100000000100000100001101
00000000000000000000000000000001100000100000000010100110




=== State Orbit 41 =====================
size : 90
repr state: 00000000000000000000000000000000001000100100010010000110
lex min decimal: 2403989939278549707959
states:
00000000000000000000000000000010000000000001010010001011
00000000000000000000000000000000001000001001010010000011
00000000000000000000000000000001000000010000010100100110
00000000000000000000000000000000001000100010100010000110
00000000000000000000000000000010000000000100010010100110
00000000000000000000000000000001000000010000010001001011
00000000000000000000000000000000100000001010000001010011
00000000000000000000000000000000001000001010010001000011
00000000000000000000000000000010000000000010100100010110
00000000000000000000000000000010000000000010001010001011
00000000000000000000000000000000001000100001100001000101
00000000000000000000000000000000100000010001000001010011
00000000000000000000000000000000100000001100000100001101
00000000000000000000000000000010000000000100010100010110
00000000000000000000000000000000001000100001001100000101
00000000000000000000000000000010000000000001100100001101
00000000000000000000000000000000001000100100001001000101
00000000000000000000000000000000100000001001000100100101
00000000000000000000000000000001000000001000001010010011
00000000000000000000000000000010000000000001001010010011
00000000000000000000000000000000001000100100010010000110
00000000000000000000000000000000010000010001010000001011
00000000000000000000000000000000010000001010010000001011
00000000000000000000000000000000010000100010100000010110
00000000000000000000000000000000001000010010001001000011
00000000000000000000000000000000100000100010000010100110
00000000000000000000000000000001000000001000010010001011
00000000000000000000000000000000100000010010000100100110
00000000000000000000000000000000010000100001100000001101
00000000000000000000000000000000001000001001100100000101
00000000000000000000000000000001000000100000010100010110
00000000000000000000000000000000001000001100001100000101
00000000000000000000000000000000010000010100100000010110
00000000000000000000000000000000100000100001000100001101
00000000000000000000000000000000010000100001001000100101
00000000000000000000000000000000100000001010000010001011
00000000000000000000000000000000010000100100010000010110
00000000000000000000000000000000010000001100100000001101
00000000000000000000000000000000010000010001001000010011
00000000000000000000000000000001000000010000100100010110
00000000000000000000000000000010000000000010001001010011
00000000000000000000000000000000001000010010100100000110
00000000000000000000000000000001000000001000100001100101
00000000000000000000000000000010000000000001001100100101
00000000000000000000000000000000100000010001000010001011
00000000000000000000000000000000010000100010010000100110
00000000000000000000000000000001000000010000001010001011
00000000000000000000000000000010000000000100100010010110
00000000000000000000000000000000100000010010000001001011
00000000000000000000000000000000100000001001000010010011
00000000000000000000000000000001000000100000100010010110
00000000000000000000000000000000010000010010001000001011
00000000000000000000000000000001000000001000010001010011
00000000000000000000000000000001000000001000100100001101
00000000000000000000000000000001000000100000100001001101
00000000000000000000000000000010000000000010010001001011
00000000000000000000000000000000100000100100000001001101
00000000000000000000000000000000100000100100000010010110
00000000000000000000000000000000010000001001100000100101
00000000000000000000000000000000100000001100000001100101
00000000000000000000000000000001000000100000001100001101
00000000000000000000000000000010000000000100100001001101
00000000000000000000000000000000010000001010001000010011
00000000000000000000000000000000010000001001010000010011
00000000000000000000000000000010000000000100001100001101
00000000000000000000000000000000001000001010001010000011
00000000000000000000000000000000001000001100100001000101
00000000000000000000000000000010000000000001010001010011
00000000000000000000000000000001000000010000100010100110
00000000000000000000000000000010000000000010010100100110
00000000000000000000000000000000001000010100100010000110
00000000000000000000000000000000010000001100001000100101
00000000000000000000000000000000010000100100001000001101
00000000000000000000000000000001000000010000001001010011
00000000000000000000000000000001000000100000010010100110
00000000000000000000000000000000001000010001001010000011
00000000000000000000000000000000010000010100010000100110
00000000000000000000000000000010000000000010100010100110
00000000000000000000000000000000100000100001000001100101
00000000000000000000000000000010000000000100001001100101
00000000000000000000000000000001000000001000001100100101
00000000000000000000000000000010000000000001100001100101
00000000000000000000000000000000001000010001010001000011
00000000000000000000000000000000100000010100000100010110
00000000000000000000000000000000010000010010100000100110
00000000000000000000000000000000100000100010000100010110
00000000000000000000000000000000100000010100000010100110
00000000000000000000000000000000001000010100010100000110
00000000000000000000000000000000001000100010010100000110
00000000000000000000000000000001000000100000001001100101




=== State Orbit 42 =====================
size : 60
repr state: 00000000000000000000000000000000111000100010000000000110
lex min decimal: 16574404037213230034103
states:
00000000000000000000000000000011100000000000000100001101
00000000000000000000000000000001101000100000000010000110
00000000000000000000000000000001110000001000000000100101
00000000000000000000000000000001101000010000000001000011
00000000000000000000000000000010011000000100010000000110
00000000000000000000000000000011001000000000010100000110
00000000000000000000000000000010011000000001100000000101
00000000000000000000000000000011010000000000001000010011
00000000000000000000000000000010101000000010000001000011
00000000000000000000000000000010101000000010000100000110
00000000000000000000000000000010110000000100000000001101
00000000000000000000000000000011010000000000100000010110
00000000000000000000000000000000111000010001000000000011
00000000000000000000000000000010110000000001000000100101
00000000000000000000000000000011010000000000001000100101
00000000000000000000000000000001110000010000000000001011
00000000000000000000000000000011100000000000000010001011
00000000000000000000000000000001011000100000010000000110
00000000000000000000000000000000111000100010000000000110
00000000000000000000000000000001101000001000000100000101
00000000000000000000000000000010101000000001000100000101
00000000000000000000000000000010011000000001010000000011
00000000000000000000000000000001101000100000000001000101
00000000000000000000000000000010110000000100000000010110
00000000000000000000000000000011001000000000100001000101
00000000000000000000000000000010011000000010100000000110
00000000000000000000000000000000111000100001000000000101
00000000000000000000000000000010101000000100000001000101
00000000000000000000000000000001110000010000000000100110
00000000000000000000000000000000111000001100000000000101
00000000000000000000000000000001011000010000001000000011
00000000000000000000000000000001110000100000000000001101
00000000000000000000000000000011100000000000000001100101
00000000000000000000000000000001110000100000000000010110
00000000000000000000000000000001110000001000000000010011
00000000000000000000000000000010101000000001000010000011
00000000000000000000000000000011010000000000010000100110
00000000000000000000000000000011001000000000010001000011
00000000000000000000000000000010110000000010000000001011
00000000000000000000000000000011001000000000001010000011
00000000000000000000000000000000111000010100000000000110
00000000000000000000000000000011100000000000000010100110
00000000000000000000000000000011100000000000000001010011
00000000000000000000000000000001011000001000010000000011
00000000000000000000000000000010101000000100000010000110
00000000000000000000000000000001101000010000000100000110
00000000000000000000000000000011001000000000100010000110
00000000000000000000000000000001011000010000100000000110
00000000000000000000000000000000111000001010000000000011
00000000000000000000000000000010110000000010000000100110
00000000000000000000000000000001011000100000001000000101
00000000000000000000000000000001011000001000100000000101
00000000000000000000000000000011010000000000100000001101
00000000000000000000000000000010011000000100001000000101
00000000000000000000000000000010011000000010001000000011
00000000000000000000000000000011100000000000000100010110
00000000000000000000000000000011001000000000001100000101
00000000000000000000000000000001101000001000000010000011
00000000000000000000000000000011010000000000010000001011
00000000000000000000000000000010110000000001000000010011




=== State Orbit 43 =====================
size : 15
repr state: 00000000000000000000000000000001111000100000000000000100
lex min decimal: 35454644344855142427831
states:
00000000000000000000000000000011110000000000000000100100
00000000000000000000000000000011110000000000000000010010
00000000000000000000000000000011101000000000000001000001
00000000000000000000000000000010111000000001000000000001
00000000000000000000000000000001111000100000000000000100
00000000000000000000000000000011011000000000100000000100
00000000000000000000000000000011011000000000001000000001
00000000000000000000000000000011101000000000000100000100
00000000000000000000000000000001111000010000000000000010
00000000000000000000000000000011101000000000000010000010
00000000000000000000000000000011110000000000000000001001
00000000000000000000000000000001111000001000000000000001
00000000000000000000000000000011011000000000010000000010
00000000000000000000000000000010111000000010000000000010
00000000000000000000000000000010111000000100000000000100




=== State Orbit 44 =====================
size : 30
repr state: 00000000000000000000000000000000111000100100000000000100
lex min decimal: 16569790099394988960951
states:
00000000000000000000000000000011001000000000010010000010
00000000000000000000000000000010011000000001001000000001
00000000000000000000000000000001101000010000000010000010
00000000000000000000000000000011010000000000001000001001
00000000000000000000000000000001110000100000000000100100
00000000000000000000000000000010101000000100000100000100
00000000000000000000000000000001101000100000000100000100
00000000000000000000000000000010101000000001000001000001
00000000000000000000000000000001101000001000000001000001
00000000000000000000000000000000111000010010000000000010
00000000000000000000000000000001110000001000000000001001
00000000000000000000000000000001110000010000000000010010
00000000000000000000000000000011001000000000100100000100
00000000000000000000000000000001011000001000001000000001
00000000000000000000000000000000111000100100000000000100
00000000000000000000000000000011001000000000001001000001
00000000000000000000000000000010101000000010000010000010
00000000000000000000000000000010011000000100100000000100
00000000000000000000000000000011100000000000000010010010
00000000000000000000000000000001011000010000010000000010
00000000000000000000000000000000111000001001000000000001
00000000000000000000000000000011010000000000100000100100
00000000000000000000000000000010110000000100000000100100
00000000000000000000000000000011100000000000000100100100
00000000000000000000000000000001011000100000100000000100
00000000000000000000000000000010110000000001000000001001
00000000000000000000000000000010011000000010010000000010
00000000000000000000000000000010110000000010000000010010
00000000000000000000000000000011010000000000010000010010
00000000000000000000000000000011100000000000000001001001




=== State Orbit 45 =====================
size : 30
repr state: 10000000000000000000000000000000011000100100100000000100
lex min decimal: 132226921281081046297783
states:
00000000000000000100000000000001100000001000000001001001
00000000000010000000000000000001010000100000100000100100
00000000000000000000000000001011000000000000010010010010
00000000000000000000000010000010100000000100000100100100
00010000000000000000000000000000101000100100000100000100
00000000000000000000000000000111000000000000001001001001
00000000000000010000000000000001100000100000000100100100
00000000000000001000000000000001100000010000000010010010
00000000000000000000000000010011000000000000100100100100
00000000000000000000010000000010010000000100100000100100
00000000000100000000000000000001001000001000001001000001
01000000000000000000000000000000011000010010010000000010
00000000000000000000000001000010100000000010000010010010
10000000000000000000000000000000011000100100100000000100
00000000000001000000000000000001010000010000010000010010
00000000000000000000001000000010010000000010010000010010
00000000000000000000000000100010100000000001000001001001
00100000000000000000000000000000011000001001001000000001
00000000000000000000000100000010010000000001001000001001
00000001000000000000000000000000110000010010000000010010
00000000000000000001000000000010001000000010010010000010
00000000010000000000000000000001001000100000100100000100
00000000000000000010000000000010001000000100100100000100
00001000000000000000000000000000101000010010000010000010
00000010000000000000000000000000110000100100000000100100
00000000000000100000000000000001010000001000001000001001
00000000000000000000100000000010001000000001001001000001
00000000100000000000000000000000110000001001000000001001
00000100000000000000000000000000101000001001000001000001
00000000001000000000000000000001001000010000010010000010




=== State Orbit 46 =====================
size : 15
repr state: 10010000010000000010000000000000001000100100100100000100
lex min decimal: 44239134482969585769606327
states:
01000001000001000000001000000000010000010010010000010010
10010000010000000010000000000000001000100100100100000100
00001001000000001000000001000000100000010010000010010010
00000000010010010000000000010001000000100000100100100100
00100000100000100000000100000000010000001001001000001001
00000000000000000001001001001010000000000010010010010010
00000100100000000100000000100000100000001001000001001001
00000000000100100100000000000101000000001000001001001001
00000000000000000010010010010010000000000100100100100100
00000000001001001000000000001001000000010000010010010010
00000000000000000000100100100110000000000001001001001001
00010010000000010000000010000000100000100100000100100100
01001000001000000001000000000000001000010010010010000010
10000010000010000000010000000000010000100100100000100100
00100100000100000000100000000000001000001001001001000001




=== State Orbit 47 =====================
size : 3
repr state: 10010010010010010010010010010000000000100100100100100100
lex min decimal: 11589948334191996073450352766135
states:
00100100100100100100100100100100000000001001001001001001
10010010010010010010010010010000000000100100100100100100
01001001001001001001001001001000000000010010010010010010




=== State Orbit 48 =====================
size : 3
repr state: 10010010010010010010010010010000000100100100100100100100
lex min decimal: 11589948334487143978629705591991
states:
00100100100100100100100100100100000001001001001001001001
01001001001001001001001001001000000010010010010010010010
10010010010010010010010010010000000100100100100100100100




=== State Orbit 49 =====================
size : 15
repr state: 10010000010000000010000000000000001100100100100100000100
lex min decimal: 44239429630874765122432183
states:
01000001000001000000001000000000010010010010010000010010
00000000000000000010010010010010000100000100100100100100
00100100000100000000100000000000001001001001001001000001
01001000001000000001000000000000001010010010010010000010
10010000010000000010000000000000001100100100100100000100
00000000000100100100000000000101000001001000001001001001
00000000000000000001001001001010000010000010010010010010
00001001000000001000000001000000100010010010000010010010
00000000001001001000000000001001000010010000010010010010
00010010000000010000000010000000100100100100000100100100
00100000100000100000000100000000010001001001001000001001
00000000010010010000000000010001000100100000100100100100
00000000000000000000100100100110000001000001001001001001
00000100100000000100000000100000100001001001000001001001
10000010000010000000010000000000010100100100100000100100




=== State Orbit 50 =====================
size : 30
repr state: 10000000000000000000000000000000011100100100100000000100
lex min decimal: 132522069186260399123639
states:
00000010000000000000000000000000110100100100000000100100
00000000000000000000000000001011000010000000010010010010
00000000100000000000000000000000110001001001000000001001
00000000000000000000100000000010001001000001001001000001
00000000001000000000000000000001001010010000010010000010
00000000000000000000000001000010100010000010000010010010
00000100000000000000000000000000101001001001000001000001
00000000000001000000000000000001010010010000010000010010
00000000000000001000000000000001100010010000000010010010
00000000000000000001000000000010001010000010010010000010
00000000000000000000000010000010100100000100000100100100
00000000000000000010000000000010001100000100100100000100
00000001000000000000000000000000110010010010000000010010
00000000000000100000000000000001010001001000001000001001
01000000000000000000000000000000011010010010010000000010
00000000000000000000000100000010010001000001001000001001
00001000000000000000000000000000101010010010000010000010
00000000000000010000000000000001100100100000000100100100
00000000000000000100000000000001100001001000000001001001
00000000000000000000010000000010010100000100100000100100
00010000000000000000000000000000101100100100000100000100
00000000000000000000001000000010010010000010010000010010
10000000000000000000000000000000011100100100100000000100
00000000000000000000000000010011000100000000100100100100
00000000000010000000000000000001010100100000100000100100
00000000000100000000000000000001001001001000001001000001
00000000000000000000000000100010100001000001000001001001
00000000000000000000000000000111000001000000001001001001
00100000000000000000000000000000011001001001001000000001
00000000010000000000000000000001001100100000100100000100



[QRM NOTE]: Time elapsed since start: 32.868 seconds

[QRM NOTE]: Time elapsed since last: 25.787 seconds

[QRM NOTE]: Peak memory: 1915839 bytes


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=5,proposer=3]

=========================================================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 59.307 seconds

[QRM NOTE]: Time elapsed since last: 26.439 seconds

[QRM NOTE]: Peak memory: 1719422 bytes

python3 qrm.py ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy -s acceptor=3,proposer=4 -f 2 -g -w -r -t -k -v 5 -w -l ivybench/sym_quorum/ivy/simple-election.check.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=4]

=============================================================================================================


==============================================

	Set up for forward reachability

==============================================

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_4.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_4.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_4.finite.cpp simple-election.acceptor_3_proposer_4.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_4.finite.o simple-election.acceptor_3_proposer_4.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[FW NOTE]: number of state atoms: 35

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: number of branching actions: 28

[FW NOTE]: symmetric group order: 144

[QRM NOTE]: Time elapsed since start: 6.801 seconds

[QRM NOTE]: Time elapsed since last: 6.801 seconds

[QRM NOTE]: Peak memory: 1207011 bytes


=====================================

	Symmetric Quotient DFS

=====================================

[FW NOTE]: dfs max depth: 8

[FW NOTE]: number of total reachable states:        848

[FW NOTE]: number of dfs representative states:     36

[FW NOTE]: number of dfs non-representative states: 812


====================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=4]

====================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2', 'proposer3']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: member('acceptor', 'quorum')
predicate: didNotPromise('acceptor',)
predicate: chosenAt('quorum', 'proposer')
predicate: promise('acceptor', 'proposer')
predicate: leader('proposer',)
predicate: start('proposer',)
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor1,proposer3)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer3)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer3)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'leader(proposer3)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor0,proposer3)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor1,proposer3)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'promise(acceptor2,proposer3)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)', 'start(proposer3)']
representative states : 3758096811, 3758097323, 3758098347, 3758100395, 3758104491, 1612717995, 6442598315, 1172528316331, 1172561870763, 4299308971, 4332863403, 6476152747, 539238315, 2400171, 1612713899, 6442594219, 1172528312235, 1172561866667, 4299304875, 4332859307, 6476148651, 539234219, 2396075, 1612711851, 6442592171, 1172528310187, 1172561864619, 4299302827, 4332857259, 6476146603, 539232171, 1612710827, 6442591147, 1172528309163, 1172561863595, 6476145579


=== State Orbit 0 =====================
size : 1
repr state: 00000000000011100000000000000000000
lex min decimal: 3758096811
states:
00000000000011100000000000000000000




=== State Orbit 1 =====================
size : 4
repr state: 00000000000011100000000000000001000
lex min decimal: 3758097323
states:
00000000000011100000000000000000010
00000000000011100000000000000000001
00000000000011100000000000000001000
00000000000011100000000000000000100




=== State Orbit 2 =====================
size : 6
repr state: 00000000000011100000000000000001100
lex min decimal: 3758098347
states:
00000000000011100000000000000000011
00000000000011100000000000000001100
00000000000011100000000000000000101
00000000000011100000000000000000110
00000000000011100000000000000001001
00000000000011100000000000000001010




=== State Orbit 3 =====================
size : 4
repr state: 00000000000011100000000000000001110
lex min decimal: 3758100395
states:
00000000000011100000000000000001110
00000000000011100000000000000001011
00000000000011100000000000000001101
00000000000011100000000000000000111




=== State Orbit 4 =====================
size : 1
repr state: 00000000000011100000000000000001111
lex min decimal: 3758104491
states:
00000000000011100000000000000001111




=== State Orbit 5 =====================
size : 12
repr state: 00000000000001100001000000000001111
lex min decimal: 1612717995
states:
00000000000011000000000000010001111
00000000000001100001000000000001111
00000000000010100000000001000001111
00000000000010100000000100000001111
00000000000011000000000000001001111
00000000000011000000000000000011111
00000000000010100000000000100001111
00000000000011000000000000000101111
00000000000001100000100000000001111
00000000000001100000010000000001111
00000000000010100000000010000001111
00000000000001100000001000000001111




=== State Orbit 6 =====================
size : 12
repr state: 10000000000000100001000100000001111
lex min decimal: 6442598315
states:
00001000000001000001000000010001111
00000001000001000000001000000011111
00100000000000100000010001000001111
01000000000000100000100010000001111
00000000100010000000000100010001111
00000010000001000000010000000101111
00000000000110000000000000100011111
00000100000001000000100000001001111
00000000010010000000000010001001111
10000000000000100001000100000001111
00010000000000100000001000100001111
00000000001010000000000001000101111




=== State Orbit 7 =====================
size : 4
repr state: 10001000100000000001000100010001111
lex min decimal: 1172528316331
states:
10001000100000000001000100010001111
00100010001000000000010001000101111
01000100010000000000100010001001111
00010001000100000000001000100011111




=== State Orbit 8 =====================
size : 4
repr state: 10001000100000010001000100010001111
lex min decimal: 1172561870763
states:
01000100010000001000100010001001111
00010001000100000010001000100011111
00100010001000000100010001000101111
10001000100000010001000100010001111




=== State Orbit 9 =====================
size : 36
repr state: 10000000000000000001000100001001111
lex min decimal: 4299308971
states:
00000000100000000000010100010001111
00000000010000000000001010001001111
00010000000000000000001000100101111
00000000000100000001000000100011111
00000001000000000000001001000011111
00000100000000000000100001001001111
10000000000000000001000100000011111
00001000000000000001000000110001111
00000000001000000000001001000101111
00010000000000000000001000101001111
00000001000000000000001100000011111
00000000000100000000010000100011111
00000010000000000000010010000101111
00001000000000000001000010010001111
10000000000000000001000100001001111
01000000000000000000100010000101111
00000100000000000000100100001001111
00100000000000000000010001000011111
00100000000000000000010001001001111
10000000000000000001000100000101111
00010000000000000000001000110001111
00000000100000000000100100010001111
00001000000000000001000001010001111
01000000000000000000100010000011111
00000000100000000000001100010001111
00000000010000000000010010001001111
00100000000000000000010001010001111
00000010000000000000010100000101111
01000000000000000000100010010001111
00000000000100000000100000100011111
00000000001000000000100001000101111
00000000001000000001000001000101111
00000100000000000000100000101001111
00000001000000000000001010000011111
00000010000000000000010000100101111
00000000010000000001000010001001111




=== State Orbit 10 =====================
size : 36
repr state: 10000000000000010001000100001001111
lex min decimal: 4332863403
states:
00000000010000001001000010001001111
00010000000000000010001000100101111
10000000000000010001000100001001111
00000010000000000100010000100101111
00010000000000000010001000101001111
00000100000000001000100000101001111
00000100000000001000100001001001111
00000001000000000010001100000011111
00100000000000000100010001010001111
00000000100000010000010100010001111
00000000000100000011000000100011111
00000000100000010000100100010001111
00010000000000000010001000110001111
00000000010000001000010010001001111
00001000000000010001000000110001111
00000000100000010000001100010001111
00000000001000000100100001000101111
00100000000000000100010001001001111
01000000000000001000100010000011111
00000001000000000010001001000011111
00000010000000000100010100000101111
00000000001000000101000001000101111
00000010000000000100010010000101111
00000001000000000010001010000011111
00000000000100000010100000100011111
01000000000000001000100010000101111
00000000001000000100001001000101111
00000000000100000010010000100011111
00001000000000010001000010010001111
00000100000000001000100100001001111
00001000000000010001000001010001111
00100000000000000100010001000011111
10000000000000010001000100000011111
10000000000000010001000100000101111
01000000000000001000100010010001111
00000000010000001000001010001001111




=== State Orbit 11 =====================
size : 12
repr state: 10000000000000110001000100000001111
lex min decimal: 6476152747
states:
00000000001010000100000001000101111
00000000100010010000000100010001111
00000010000001000100010000000101111
00000000000110000010000000100011111
10000000000000110001000100000001111
00001000000001010001000000010001111
00000001000001000010001000000011111
00000100000001001000100000001001111
01000000000000101000100010000001111
00000000010010001000000010001001111
00100000000000100100010001000001111
00010000000000100010001000100001111




=== State Orbit 12 =====================
size : 36
repr state: 00000000000000100001000010000001111
lex min decimal: 539238315
states:
00000000000001000000100000010001111
00000000000010000000000010000101111
00000000000001000000001000001001111
00000000000010000000000000110001111
00000000000001000000100000000011111
00000000000010000000000001001001111
00000000000010000000000001000011111
00000000000001000000100000000101111
00000000000000100000100100000001111
00000000000010000000000010000011111
00000000000010000000000001010001111
00000000000000100000010000100001111
00000000000000100000010010000001111
00000000000000100001000010000001111
00000000000010000000000100000011111
00000000000010000000000100000101111
00000000000000100000100001000001111
00000000000010000000000000100101111
00000000000001000000010000001001111
00000000000001000001000000001001111
00000000000000100000100000100001111
00000000000000100000001100000001111
00000000000001000000001000010001111
00000000000000100001000001000001111
00000000000000100001000000100001111
00000000000001000000001000000101111
00000000000010000000000010010001111
00000000000000100000001001000001111
00000000000010000000000000101001111
00000000000010000000000100001001111
00000000000001000001000000000011111
00000000000000100000001010000001111
00000000000001000001000000000101111
00000000000001000000010000000011111
00000000000000100000010100000001111
00000000000001000000010000010001111




=== State Orbit 13 =====================
size : 24
repr state: 00000000000000000001000010000101111
lex min decimal: 2400171
states:
00000000000000000000010100001001111
00000000000000000000100100000011111
00000000000000000000001010010001111
00000000000000000001000001000011111
00000000000000000001000010000011111
00000000000000000000010100000011111
00000000000000000000001010000101111
00000000000000000000001001010001111
00000000000000000000001100001001111
00000000000000000000100000110001111
00000000000000000000100100000101111
00000000000000000000001001001001111
00000000000000000001000001001001111
00000000000000000000100001010001111
00000000000000000000010010010001111
00000000000000000000100000100101111
00000000000000000000100001000011111
00000000000000000001000010000101111
00000000000000000000010000110001111
00000000000000000000001100000101111
00000000000000000001000000101001111
00000000000000000000010010000011111
00000000000000000001000000100101111
00000000000000000000010000101001111




=== State Orbit 14 =====================
size : 36
repr state: 00000000000001100001000000000001110
lex min decimal: 1612713899
states:
00000000000001100001000000000001110
00000000000011000000000000000011101
00000000000010100000000000100001101
00000000000001100000010000000001011
00000000000001100001000000000001011
00000000000011000000000000010001011
00000000000010100000000001000001110
00000000000011000000000000000101011
00000000000001100000001000000001011
00000000000011000000000000000011011
00000000000001100000100000000001101
00000000000011000000000000000010111
00000000000011000000000000010001101
00000000000010100000000010000001110
00000000000011000000000000001001101
00000000000010100000000100000001110
00000000000010100000000001000000111
00000000000010100000000010000001101
00000000000011000000000000000100111
00000000000010100000000000100001011
00000000000010100000000001000001011
00000000000001100000001000000001101
00000000000001100000001000000000111
00000000000001100001000000000001101
00000000000001100000010000000001110
00000000000001100000100000000000111
00000000000011000000000000010001110
00000000000010100000000100000001011
00000000000001100000100000000001110
00000000000011000000000000001001110
00000000000001100000010000000000111
00000000000010100000000000100000111
00000000000011000000000000001000111
00000000000010100000000010000000111
00000000000011000000000000000101110
00000000000010100000000100000001101




=== State Orbit 15 =====================
size : 36
repr state: 10000000000000100001000100000001110
lex min decimal: 6442594219
states:
00001000000001000001000000010001101
10000000000000100001000100000001110
00010000000000100000001000100000111
00000000100010000000000100010001110
00000100000001000000100000001001101
00010000000000100000001000100001101
00001000000001000001000000010001110
00100000000000100000010001000001011
00000010000001000000010000000100111
00000001000001000000001000000011011
00000000010010000000000010001000111
10000000000000100001000100000001011
00000010000001000000010000000101011
00000001000001000000001000000011101
01000000000000100000100010000000111
00000000000110000000000000100011101
00000100000001000000100000001000111
00000000001010000000000001000101011
00100000000000100000010001000001110
00000001000001000000001000000010111
00000100000001000000100000001001110
00000010000001000000010000000101110
00000000001010000000000001000101110
01000000000000100000100010000001110
00000000000110000000000000100011011
10000000000000100001000100000001101
00000000001010000000000001000100111
01000000000000100000100010000001101
00000000100010000000000100010001011
00000000010010000000000010001001110
00100000000000100000010001000000111
00000000100010000000000100010001101
00000000010010000000000010001001101
00000000000110000000000000100010111
00001000000001000001000000010001011
00010000000000100000001000100001011




=== State Orbit 16 =====================
size : 12
repr state: 10001000100000000001000100010001110
lex min decimal: 1172528312235
states:
10001000100000000001000100010001011
00010001000100000000001000100011011
00100010001000000000010001000101011
10001000100000000001000100010001110
00010001000100000000001000100010111
00010001000100000000001000100011101
10001000100000000001000100010001101
01000100010000000000100010001001110
00100010001000000000010001000101110
01000100010000000000100010001001101
00100010001000000000010001000100111
01000100010000000000100010001000111




=== State Orbit 17 =====================
size : 12
repr state: 10001000100000010001000100010001110
lex min decimal: 1172561866667
states:
00100010001000000100010001000100111
01000100010000001000100010001001101
00010001000100000010001000100011101
01000100010000001000100010001000111
00010001000100000010001000100010111
00100010001000000100010001000101110
10001000100000010001000100010001110
10001000100000010001000100010001011
10001000100000010001000100010001101
00100010001000000100010001000101011
01000100010000001000100010001001110
00010001000100000010001000100011011




=== State Orbit 18 =====================
size : 72
repr state: 10000000000000000001000100001001110
lex min decimal: 4299304875
states:
01000000000000000000100010000100111
00000000001000000000100001000100111
00000000000100000000010000100011011
00000001000000000000001001000010111
00001000000000000001000001010001110
00000001000000000000001100000011011
00001000000000000001000000110001011
00000010000000000000010010000100111
10000000000000000001000100001001101
01000000000000000000100010010001110
00100000000000000000010001010001011
00100000000000000000010001001000111
00000001000000000000001010000011101
00000000000100000001000000100011011
00000000100000000000100100010001101
00000000100000000000010100010001110
00000000100000000000100100010001110
00000000000100000000010000100010111
00100000000000000000010001010001110
00001000000000000001000000110001101
00000010000000000000010000100101011
00000000100000000000001100010001101
10000000000000000001000100000101011
00000100000000000000100100001001110
00000000001000000000001001000101011
00000000000100000000100000100010111
00000000100000000000001100010001011
10000000000000000001000100000011011
00100000000000000000010001001001110
00010000000000000000001000100101011
00000100000000000000100100001001101
00010000000000000000001000110001101
00000000001000000001000001000101011
01000000000000000000100010000011101
00000000000100000001000000100011101
01000000000000000000100010000010111
00000000100000000000010100010001011
00000001000000000000001001000011011
00000000001000000000100001000101110
00010000000000000000001000101000111
01000000000000000000100010000101110
01000000000000000000100010010001101
00000000010000000000001010001001101
00001000000000000001000010010001101
00100000000000000000010001000011011
00000010000000000000010010000101110
00000100000000000000100001001001110
00000010000000000000010100000101011
00000010000000000000010000100100111
00000000010000000001000010001001101
00000000010000000000010010001000111
00000100000000000000100001001000111
00000000010000000001000010001001110
00000000010000000000001010001000111
00010000000000000000001000110001011
00000100000000000000100000101001101
00001000000000000001000010010001110
10000000000000000001000100000101110
00000000001000000001000001000101110
00000010000000000000010100000101110
00000001000000000000001100000011101
00000000010000000000010010001001110
00100000000000000000010001000010111
00000100000000000000100000101000111
00000000001000000000001001000100111
00000001000000000000001010000010111
00001000000000000001000001010001011
00000000000100000000100000100011101
10000000000000000001000100001001110
00010000000000000000001000101001101
00010000000000000000001000100100111
10000000000000000001000100000011101




=== State Orbit 19 =====================
size : 72
repr state: 10000000000000010001000100001001110
lex min decimal: 4332859307
states:
00001000000000010001000010010001101
00000000100000010000100100010001101
00000000001000000100001001000100111
00000000010000001000001010001000111
00000000001000000100100001000101110
00001000000000010001000001010001011
00000000010000001001000010001001110
10000000000000010001000100000101011
00000000000100000010100000100011101
00000001000000000010001001000010111
00000000001000000100001001000101011
00000000100000010000001100010001101
00000000010000001000010010001000111
00001000000000010001000000110001101
00001000000000010001000000110001011
00100000000000000100010001010001110
00010000000000000010001000100100111
00100000000000000100010001001001110
00000010000000000100010010000100111
00000000010000001000010010001001110
00000100000000001000100100001001110
00001000000000010001000010010001110
10000000000000010001000100000011011
00000010000000000100010000100100111
00000001000000000010001001000011011
00010000000000000010001000101000111
01000000000000001000100010010001101
00000100000000001000100000101000111
00000000000100000011000000100011011
01000000000000001000100010000010111
00000000000100000010100000100010111
01000000000000001000100010010001110
00000100000000001000100100001001101
00001000000000010001000001010001110
00000001000000000010001010000010111
00000000000100000010010000100011011
10000000000000010001000100000011101
01000000000000001000100010000101110
00010000000000000010001000100101011
10000000000000010001000100001001101
01000000000000001000100010000011101
00000000100000010000010100010001110
00000001000000000010001010000011101
00000000000100000010010000100010111
00010000000000000010001000101001101
00100000000000000100010001000011011
00010000000000000010001000110001011
00000100000000001000100000101001101
00100000000000000100010001000010111
00000100000000001000100001001000111
00000010000000000100010010000101110
00010000000000000010001000110001101
00000010000000000100010000100101011
00000000100000010000100100010001110
00000000100000010000001100010001011
00000000001000000101000001000101011
10000000000000010001000100001001110
00000001000000000010001100000011011
10000000000000010001000100000101110
00000000100000010000010100010001011
00000010000000000100010100000101011
00000000001000000100100001000100111
00000000000100000011000000100011101
00100000000000000100010001010001011
00000100000000001000100001001001110
01000000000000001000100010000100111
00000000001000000101000001000101110
00100000000000000100010001001000111
00000001000000000010001100000011101
00000000010000001000001010001001101
00000010000000000100010100000101110
00000000010000001001000010001001101




=== State Orbit 20 =====================
size : 36
repr state: 10000000000000110001000100000001110
lex min decimal: 6476148651
states:
00010000000000100010001000100000111
00000001000001000010001000000011011
00000000100010010000000100010001101
00000100000001001000100000001000111
00000000010010001000000010001000111
00000010000001000100010000000101011
00010000000000100010001000100001011
10000000000000110001000100000001110
01000000000000101000100010000000111
00000010000001000100010000000101110
00001000000001010001000000010001110
00001000000001010001000000010001101
00000000010010001000000010001001101
10000000000000110001000100000001011
00000000100010010000000100010001011
00000010000001000100010000000100111
01000000000000101000100010000001110
00100000000000100100010001000000111
00000100000001001000100000001001110
00010000000000100010001000100001101
00000000000110000010000000100010111
00000000001010000100000001000101011
10000000000000110001000100000001101
00000000010010001000000010001001110
01000000000000101000100010000001101
00100000000000100100010001000001110
00000001000001000010001000000010111
00000000000110000010000000100011011
00100000000000100100010001000001011
00000000100010010000000100010001110
00000000001010000100000001000101110
00000001000001000010001000000011101
00000000000110000010000000100011101
00000100000001001000100000001001101
00001000000001010001000000010001011
00000000001010000100000001000100111




=== State Orbit 21 =====================
size : 72
repr state: 00000000000000100001000010000001110
lex min decimal: 539234219
states:
00000000000001000000001000010001011
00000000000010000000000010000010111
00000000000001000000001000001000111
00000000000010000000000010000100111
00000000000000100000010010000000111
00000000000000100001000000100001101
00000000000001000000100000010001101
00000000000010000000000000101000111
00000000000000100001000001000001011
00000000000000100000001001000000111
00000000000010000000000001010001110
00000000000010000000000001000010111
00000000000001000001000000000011101
00000000000010000000000001010001011
00000000000001000000001000000100111
00000000000000100001000010000001101
00000000000000100000001001000001011
00000000000001000000010000001001110
00000000000000100000100100000001110
00000000000000100000100000100001101
00000000000000100000100000100000111
00000000000000100000010000100001011
00000000000000100001000001000001110
00000000000001000000100000000011101
00000000000000100000001010000000111
00000000000001000000010000000011011
00000000000000100000010000100000111
00000000000010000000000100001001110
00000000000001000000100000010001110
00000000000010000000000100000011101
00000000000010000000000010000101110
00000000000001000001000000000101110
00000000000001000001000000000011011
00000000000001000000001000000101011
00000000000000100000001100000001101
00000000000010000000000000100101011
00000000000001000001000000000101011
00000000000010000000000001001000111
00000000000001000000001000001001101
00000000000010000000000100000011011
00000000000000100000100001000001110
00000000000000100000001100000001011
00000000000001000000100000000010111
00000000000000100001000000100001011
00000000000010000000000001001001110
00000000000010000000000000101001101
00000000000000100000001010000001101
00000000000001000000100000000101110
00000000000000100000100001000000111
00000000000010000000000001000011011
00000000000000100001000010000001110
00000000000001000000100000000100111
00000000000001000001000000001001110
00000000000000100000010100000001011
00000000000001000000010000001000111
00000000000010000000000100000101110
00000000000000100000100100000001101
00000000000010000000000000110001101
00000000000010000000000000110001011
00000000000010000000000000100100111
00000000000001000001000000001001101
00000000000010000000000100000101011
00000000000010000000000100001001101
00000000000000100000010010000001110
00000000000001000000010000010001011
00000000000010000000000010000011101
00000000000000100000010100000001110
00000000000001000000010000000010111
00000000000010000000000010010001110
00000000000001000000010000010001110
00000000000001000000001000010001101
00000000000010000000000010010001101




=== State Orbit 22 =====================
size : 24
repr state: 00000000000000000001000010000101110
lex min decimal: 2396075
states:
00000000000000000001000001001001110
00000000000000000001000000101001101
00000000000000000001000010000011101
00000000000000000000100000110001101
00000000000000000000100001010001110
00000000000000000000100100000011101
00000000000000000000010010010001110
00000000000000000000001100000101011
00000000000000000000010100000011011
00000000000000000000001001010001011
00000000000000000000001010000100111
00000000000000000001000000100101011
00000000000000000000100000100100111
00000000000000000000001010010001101
00000000000000000000001001001000111
00000000000000000001000001000011011
00000000000000000000010000101000111
00000000000000000000100001000010111
00000000000000000001000010000101110
00000000000000000000010000110001011
00000000000000000000010010000010111
00000000000000000000001100001001101
00000000000000000000010100001001110
00000000000000000000100100000101110




=== State Orbit 23 =====================
size : 36
repr state: 00000000000001100001000000000001100
lex min decimal: 1612711851
states:
00000000000010100000000000100000011
00000000000011000000000000001001100
00000000000001100001000000000001001
00000000000001100000001000000000011
00000000000011000000000000000010101
00000000000001100000001000000001001
00000000000010100000000100000001010
00000000000001100000010000000000110
00000000000001100000001000000000101
00000000000011000000000000010001100
00000000000010100000000000100001001
00000000000001100001000000000001010
00000000000001100001000000000001100
00000000000011000000000000000100011
00000000000011000000000000010001010
00000000000010100000000100000001100
00000000000010100000000010000000101
00000000000010100000000001000001010
00000000000011000000000000010001001
00000000000011000000000000001000110
00000000000001100000010000000000011
00000000000010100000000001000000110
00000000000011000000000000000101010
00000000000011000000000000000010011
00000000000001100000100000000000110
00000000000010100000000001000000011
00000000000001100000100000000001100
00000000000001100000010000000001010
00000000000001100000100000000000101
00000000000010100000000010000000110
00000000000010100000000000100000101
00000000000011000000000000001000101
00000000000011000000000000000100110
00000000000010100000000010000001100
00000000000010100000000100000001001
00000000000011000000000000000011001




=== State Orbit 24 =====================
size : 36
repr state: 10000000000000100001000100000001100
lex min decimal: 6442592171
states:
00000000100010000000000100010001010
00000001000001000000001000000011001
00000010000001000000010000000101010
00000000000110000000000000100011001
10000000000000100001000100000001001
00000000100010000000000100010001100
00100000000000100000010001000000011
00001000000001000001000000010001100
00000000010010000000000010001000110
00001000000001000001000000010001001
00001000000001000001000000010001010
00010000000000100000001000100000101
00000000010010000000000010001001100
00100000000000100000010001000001010
00000100000001000000100000001000110
00000010000001000000010000000100011
00010000000000100000001000100000011
00000100000001000000100000001001100
00000000001010000000000001000100011
00000001000001000000001000000010101
00000000001010000000000001000101010
00000000000110000000000000100010101
01000000000000100000100010000000101
01000000000000100000100010000000110
10000000000000100001000100000001010
00100000000000100000010001000000110
00000100000001000000100000001000101
00000000001010000000000001000100110
00000000000110000000000000100010011
10000000000000100001000100000001100
01000000000000100000100010000001100
00000010000001000000010000000100110
00000000010010000000000010001000101
00000001000001000000001000000010011
00000000100010000000000100010001001
00010000000000100000001000100001001




=== State Orbit 25 =====================
size : 12
repr state: 10001000100000000001000100010001100
lex min decimal: 1172528310187
states:
10001000100000000001000100010001010
00100010001000000000010001000100011
01000100010000000000100010001000101
10001000100000000001000100010001100
01000100010000000000100010001000110
00100010001000000000010001000101010
00010001000100000000001000100011001
01000100010000000000100010001001100
00010001000100000000001000100010011
00010001000100000000001000100010101
00100010001000000000010001000100110
10001000100000000001000100010001001




=== State Orbit 26 =====================
size : 12
repr state: 10001000100000010001000100010001100
lex min decimal: 1172561864619
states:
00010001000100000010001000100010011
00010001000100000010001000100011001
00100010001000000100010001000100110
00100010001000000100010001000101010
01000100010000001000100010001001100
01000100010000001000100010001000110
01000100010000001000100010001000101
10001000100000010001000100010001100
00100010001000000100010001000100011
10001000100000010001000100010001001
00010001000100000010001000100010101
10001000100000010001000100010001010




=== State Orbit 27 =====================
size : 36
repr state: 10000000000000000001000100001001100
lex min decimal: 4299302827
states:
00000000000100000000010000100010011
00010000000000000000001000110001001
00001000000000000001000000110001001
00000000001000000000100001000100110
00000000100000000000100100010001100
00010000000000000000001000100100011
00001000000000000001000010010001100
00000000010000000000001010001000101
00100000000000000000010001001000110
01000000000000000000100010010001100
00000100000000000000100000101000101
00000100000000000000100001001000110
01000000000000000000100010000100110
00000010000000000000010010000100110
00000000100000000000001100010001001
00001000000000000001000001010001010
01000000000000000000100010000010101
00000000000100000001000000100011001
00000000010000000000010010001000110
00100000000000000000010001010001010
10000000000000000001000100000011001
00100000000000000000010001000010011
00000010000000000000010100000101010
00000001000000000000001001000010011
00000001000000000000001100000011001
00000001000000000000001010000010101
00000000001000000000001001000100011
00000000001000000001000001000101010
00000000000100000000100000100010101
00000000010000000001000010001001100
10000000000000000001000100000101010
10000000000000000001000100001001100
00010000000000000000001000101000101
00000100000000000000100100001001100
00000010000000000000010000100100011
00000000100000000000010100010001010




=== State Orbit 28 =====================
size : 36
repr state: 10000000000000010001000100001001100
lex min decimal: 4332857259
states:
00000001000000000010001100000011001
10000000000000010001000100001001100
00000100000000001000100001001000110
00010000000000000010001000100100011
00000010000000000100010100000101010
00000000000100000011000000100011001
00001000000000010001000000110001001
00000010000000000100010010000100110
00000000100000010000001100010001001
00000000001000000101000001000101010
01000000000000001000100010000100110
00000100000000001000100000101000101
00000000010000001000001010001000101
01000000000000001000100010010001100
00000000001000000100001001000100011
00100000000000000100010001000010011
10000000000000010001000100000011001
00000001000000000010001010000010101
00000000100000010000010100010001010
00000000010000001000010010001000110
00010000000000000010001000101000101
10000000000000010001000100000101010
00000000100000010000100100010001100
00000000000100000010100000100010101
00000000010000001001000010001001100
00010000000000000010001000110001001
00000000000100000010010000100010011
00100000000000000100010001010001010
00000010000000000100010000100100011
00001000000000010001000010010001100
00100000000000000100010001001000110
00001000000000010001000001010001010
01000000000000001000100010000010101
00000000001000000100100001000100110
00000001000000000010001001000010011
00000100000000001000100100001001100




=== State Orbit 29 =====================
size : 36
repr state: 10000000000000110001000100000001100
lex min decimal: 6476146603
states:
00000000100010010000000100010001010
10000000000000110001000100000001001
00000000010010001000000010001000110
00000000000110000010000000100010011
01000000000000101000100010000000101
00000000100010010000000100010001001
00000000010010001000000010001001100
00001000000001010001000000010001001
00000001000001000010001000000010011
00000001000001000010001000000010101
00010000000000100010001000100001001
00000010000001000100010000000100011
00010000000000100010001000100000011
01000000000000101000100010000001100
00000000000110000010000000100011001
00010000000000100010001000100000101
00000000100010010000000100010001100
00100000000000100100010001000001010
00000000001010000100000001000101010
01000000000000101000100010000000110
00000100000001001000100000001000101
00100000000000100100010001000000011
00000000001010000100000001000100110
00000000000110000010000000100010101
00000001000001000010001000000011001
00000100000001001000100000001001100
10000000000000110001000100000001010
00100000000000100100010001000000110
00000000001010000100000001000100011
00001000000001010001000000010001010
10000000000000110001000100000001100
00001000000001010001000000010001100
00000100000001001000100000001000110
00000010000001000100010000000100110
00000000010010001000000010001000101
00000010000001000100010000000101010




=== State Orbit 30 =====================
size : 36
repr state: 00000000000000100001000010000001100
lex min decimal: 539232171
states:
00000000000001000000010000001000110
00000000000000100000001001000000011
00000000000000100001000010000001100
00000000000010000000000000101000101
00000000000001000001000000000011001
00000000000000100000100100000001100
00000000000010000000000001000010011
00000000000001000001000000001001100
00000000000010000000000001010001010
00000000000010000000000010010001100
00000000000001000000010000010001010
00000000000000100000010000100000011
00000000000001000000100000000100110
00000000000010000000000100000101010
00000000000000100001000000100001001
00000000000000100000010100000001010
00000000000000100000001010000000101
00000000000000100000100001000000110
00000000000000100000010010000000110
00000000000000100000001100000001001
00000000000010000000000000100100011
00000000000001000000100000010001100
00000000000010000000000010000010101
00000000000001000000010000000010011
00000000000001000000001000001000101
00000000000010000000000000110001001
00000000000010000000000001001000110
00000000000001000000001000000100011
00000000000000100000100000100000101
00000000000000100001000001000001010
00000000000001000000001000010001001
00000000000001000000100000000010101
00000000000010000000000010000100110
00000000000010000000000100000011001
00000000000001000001000000000101010
00000000000010000000000100001001100




=== State Orbit 31 =====================
size : 12
repr state: 00000000000001100001000000000001000
lex min decimal: 1612710827
states:
00000000000011000000000000010001000
00000000000001100001000000000001000
00000000000011000000000000001000100
00000000000010100000000000100000001
00000000000001100000001000000000001
00000000000001100000100000000000100
00000000000010100000000100000001000
00000000000011000000000000000010001
00000000000011000000000000000100010
00000000000010100000000010000000100
00000000000001100000010000000000010
00000000000010100000000001000000010




=== State Orbit 32 =====================
size : 12
repr state: 10000000000000100001000100000001000
lex min decimal: 6442591147
states:
00000010000001000000010000000100010
10000000000000100001000100000001000
00000000001010000000000001000100010
00100000000000100000010001000000010
00000000010010000000000010001000100
00000000100010000000000100010001000
00000100000001000000100000001000100
00000001000001000000001000000010001
01000000000000100000100010000000100
00001000000001000001000000010001000
00000000000110000000000000100010001
00010000000000100000001000100000001




=== State Orbit 33 =====================
size : 4
repr state: 10001000100000000001000100010001000
lex min decimal: 1172528309163
states:
01000100010000000000100010001000100
00100010001000000000010001000100010
10001000100000000001000100010001000
00010001000100000000001000100010001




=== State Orbit 34 =====================
size : 4
repr state: 10001000100000010001000100010001000
lex min decimal: 1172561863595
states:
00100010001000000100010001000100010
10001000100000010001000100010001000
01000100010000001000100010001000100
00010001000100000010001000100010001




=== State Orbit 35 =====================
size : 12
repr state: 10000000000000110001000100000001000
lex min decimal: 6476145579
states:
00000000000110000010000000100010001
01000000000000101000100010000000100
00100000000000100100010001000000010
00000000010010001000000010001000100
10000000000000110001000100000001000
00000000100010010000000100010001000
00001000000001010001000000010001000
00000100000001001000100000001000100
00000000001010000100000001000100010
00000010000001000100010000000100010
00010000000000100010001000100000001
00000001000001000010001000000010001



[QRM NOTE]: Time elapsed since start: 9.001 seconds

[QRM NOTE]: Time elapsed since last: 2.200 seconds

[QRM NOTE]: Peak memory: 1431269 bytes


=========================================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym_quorum/ivy/simple-election: acceptor=3,proposer=4]

=========================================================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 11.243 seconds

[QRM NOTE]: Time elapsed since last: 2.242 seconds

[QRM NOTE]: Peak memory: 546737 bytes

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_4
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_25
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_4 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_25 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_4 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_25 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_4 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_25 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_4 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_25 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_2 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS


**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************

[RMIN NUM]: 1

[RMIN RESULT]: ['ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy']

[CUTOFF]: acceptor=3,proposer=3

[QRM RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 306.973 seconds

[QRM NOTE]: Time elapsed since last: 306.973 seconds

